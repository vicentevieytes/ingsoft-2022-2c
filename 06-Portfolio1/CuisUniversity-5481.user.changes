

----QUIT----(11 September 2022 19:10:09) CuisUniversity-5481.image priorSource: 2810882!

----STARTUP---- (11 September 2022 19:10:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5481.image!


----QUIT----(11 September 2022 19:10:10) CuisUniversity-5481.image priorSource: 7059465!

----STARTUP---- (16 October 2022 00:34:09) as C:\Lautaro Disco C\Programas Varios\CuisUniversity\CuisUniversity-5481.image!


----End fileIn of C:\Lautaro Disco C\Programas Varios\CuisUniversity\Packages\System\Collections-CompactArrays.pck.st----!

----End fileIn of C:\Lautaro Disco C\Programas Varios\CuisUniversity\Packages\Features\VectorEngineInSmalltalk.pck.st----!

TTFontDescription initialize!

----End fileIn of C:\Lautaro Disco C\Programas Varios\CuisUniversity\Packages\Features\VectorGraphics.pck.st----!

----End fileIn of C:\Lautaro Disco C\Programas Varios\CuisUniversity\Portfolio-Ejercicio.st----!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:35:44'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:35:44'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:35:44'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:35:44'!
ERROR!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:35:46'!
ERROR!

----End fileIn of C:\Users\Lautaro\Downloads\ISW1-2022-2C-1erParcial.st----!

----End fileIn of C:\Users\Lautaro\Downloads\ISW1-2022-2C-1erParcial.st----!

----End fileIn of C:\Users\Lautaro\Downloads\ISW1-2022-2C-1erParcial (1).st----!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:39:32'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:39:32'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:39:32'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:39:32'!
ERROR!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:39:37'!
ERROR!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'LM 10/16/2022 00:40:24' prior: 50567300 overrides: 50567194!
initialize

	transactions := OrderedCollection new.
	super initialize.! !
!PortfolioAccount methodsFor: 'initialization' stamp: 'LM 10/16/2022 00:40:34' prior: 50567268 overrides: 50567194!
initialize

	accounts _ OrderedCollection new.
	super initialize.! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:40:34'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:40:34'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:40:34'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:40:34'!
ERROR!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:40:34'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:40:34'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:40:34'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:40:34'!
ERROR!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:40:34'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:40:34'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:40:34'!
ERROR!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:40:34'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:40:34'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:40:41'!
ERROR!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:40:44'!
ERROR!
!PortfolioAccount methodsFor: 'initialization' stamp: 'LM 10/16/2022 00:41:40' prior: 50569496 overrides: 50567194!
initialize

	accounts _ OrderedCollection new.
	parents _ OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'LM 10/16/2022 00:41:50' prior: 50569490 overrides: 50567194!
initialize

	transactions := OrderedCollection new.
	parents _ OrderedCollection new.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/16/2022 00:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 00:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 00:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/16/2022 00:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/16/2022 00:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/16/2022 00:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/16/2022 00:41:50'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:41:55'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:41:55'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:41:55'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:41:55'!
ERROR!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:41:55'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:41:55'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:41:55'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:41:55'!
ERROR!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:41:55'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:41:55'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:41:55'!
ERROR!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:41:55'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:41:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/16/2022 00:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 00:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 00:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/16/2022 00:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/16/2022 00:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/16/2022 00:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/16/2022 00:41:59'!
PASSED!
!PortfolioAccount methodsFor: 'initialization' stamp: 'LM 10/16/2022 00:42:10' prior: 50569566 overrides: 50567194!
initialize

	accounts _ OrderedCollection new.
	super initialize.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'LM 10/16/2022 00:42:13' prior: 50569573 overrides: 50567194!
initialize

	transactions := OrderedCollection new.
	super initialize.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/16/2022 00:42:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 00:42:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 00:42:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/16/2022 00:42:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/16/2022 00:42:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/16/2022 00:42:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/16/2022 00:42:15'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:42:17'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:42:17'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:42:17'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:42:17'!
ERROR!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:42:17'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:42:17'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:42:17'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:42:17'!
ERROR!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:42:17'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:42:17'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:42:17'!
ERROR!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:42:17'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:42:17'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:42:19'!
ERROR!
!ReceptiveAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:42:48'!
cannotAdd: anAccount

	self = anAccount! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/16/2022 00:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 00:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 00:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/16/2022 00:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/16/2022 00:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/16/2022 00:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/16/2022 00:42:49'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:42:51'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:42:51'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:42:51'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:42:51'!
ERROR!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:42:51'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:42:51'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:42:51'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:42:51'!
ERROR!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:42:51'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:42:51'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:42:51'!
ERROR!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:42:51'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:42:51'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:42:53'!
ERROR!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:43:26' prior: 50567230!
cannotAdd: anAccount

	^(accounts anySatisfy: [:account| account isInSubtree: anAccount]) and: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:43:31' prior: 50569785!
cannotAdd: anAccount

	^self = anAccount! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:43:34' prior: 50567310!
isInSubtree: anAccount

	^self = anAccount! !
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:43:55' prior: 50567245!
isAChildOfAncestor: anAccount

	^(accounts includes: anAccount) and: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:43:59' prior: 50567252!
isInSubtree: anAccount

	^ accounts anySatisfy: [:account| account = anAccount or: (account isInSubtree: anAccount)]! !
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:44:02' prior: 50569894!
isAChildOfAncestor: anAccount

	^ (accounts includes: anAccount) and: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:44:04'!
FAILURE!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:44:04'!
FAILURE!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:44:09'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:44:09'!
FAILURE!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:44:09'!
FAILURE!

parents first!

(OrderedCollection new) anySatisfy: [:each| false]!

(OrderedCollection new) anySatisfy: [:each| true]!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:47:46' prior: 50569875!
cannotAdd: anAccount

	^(accounts anySatisfy: [:account| account isInSubtree: anAccount]) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:47:50'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:47:50'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:47:50'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:47:50'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:47:50'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:47:51'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:47:51'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:47:51'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:47:51'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:47:51'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:47:51'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:47:51'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:47:51'!
PASSED!

----SNAPSHOT----(16 October 2022 00:47:55) CuisUniversity-5481.image priorSource: 7059698!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 00:50:15'!
test14CannotAddPortfolioToSamePortfolio

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: portfolio1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:50:17'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:50:17'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:51:25'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:51:25'!
FAILURE!

----SNAPSHOT----(16 October 2022 00:53:04) CuisUniversity-5481.image priorSource: 7632236!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:53:05'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:53:05'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:53:05'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:54:04' prior: 50569909!
isAChildOfAncestor: anAccount

	^ (accounts includes: anAccount) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:54:05'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:54:05'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:54:05'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:54:33' prior: 50570259!
isAChildOfAncestor: anAccount

	^ (accounts includes: anAccount) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: (self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:54:34'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:54:34'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:54:34'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:54:45' prior: 50570329!
isAChildOfAncestor: anAccount

	^ ((accounts includes: anAccount) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])) or: (self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:54:45'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:54:45'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:54:45'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:54:45'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:54:45'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:54:45'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:54:45'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:54:45'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:54:46'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:54:46'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:54:46'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:54:46'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:54:46'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:54:46'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:54:46'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:54:51' prior: 50570400!
isAChildOfAncestor: anAccount

	^ (accounts includes: anAccount) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: (self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:54:52'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:54:52'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:54:52'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:55:35' prior: 50569902!
isInSubtree: anAccount

	^ (accounts anySatisfy: [:account| account = anAccount or: (account isInSubtree: anAccount)]) or: [self = anAccount]! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:55:35'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:55:35'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:55:35'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:56:03' prior: 50570040!
cannotAdd: anAccount

	^(accounts anySatisfy: [:account| account isInSubtree: anAccount]) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: (self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:56:04'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:56:04'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:56:04'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:56:10' prior: 50570612!
cannotAdd: anAccount

	^((accounts anySatisfy: [:account| account isInSubtree: anAccount]) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])) or: (self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:56:11'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:56:11'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:56:11'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:56:17' prior: 50570684!
cannotAdd: anAccount

	^(accounts anySatisfy: [:account| account isInSubtree: anAccount]) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: (self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:56:18'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:56:18'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:56:18'!
FAILURE!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:56:37'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:56:37'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:56:37'!
FAILURE!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:57:08'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:57:08'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:57:08'!
FAILURE!
!PortfolioAccount methodsFor: 'adding' stamp: 'LM 10/16/2022 00:57:57' prior: 50567258!
add: anAccount

	(self cannotAdd: anAccount) ifTrue: [self error: self class duplicatedAccountErrorMessage].
	accounts add: anAccount.
	anAccount addParent: self. ! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:57:57'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:57:57'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:58:11' prior: 50570471!
isAChildOfAncestor: anAccount

	^ (accounts includes: anAccount) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:58:12'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:58:12'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:58:19' prior: 50570542!
isInSubtree: anAccount

	^ accounts anySatisfy: [:account| account = anAccount or: (account isInSubtree: anAccount)]! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:58:19'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:58:19'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:58:28' prior: 50570756!
cannotAdd: anAccount

	^(accounts anySatisfy: [:account| account isInSubtree: anAccount]) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:58:28'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:58:28'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:58:29'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:58:33' prior: 50571151!
cannotAdd: anAccount

	^(accounts anySatisfy: [:account| account isInSubtree: anAccount]) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: (self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:58:34'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:58:34'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 00:58:56' prior: 50571222!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account isInSubtree: anAccount])       or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: 
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 00:58:58'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 00:58:58'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:00:20' prior: 50571019!
isAChildOfAncestor: anAccount

	^ (accounts isInSubtree: anAccount) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:00:21'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:00:21'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:00:53' prior: 50571358!
isAChildOfAncestor: anAccount

	^ (accounts anySatisfy: [:account| account isInSubtree: anAccount]) or: (parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:01:03' prior: 50571425!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| account isInSubtree: anAccount]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:01:04'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 01:02:22' prior: 50570161!
test14CannotAddPortfolioToSamePortfolio

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: account1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:02:24'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:02:24'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 00:50:15' prior: 50571502!
test14CannotAddPortfolioToSamePortfolio

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: portfolio1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 01:03:34'!
test15CannotAddAccountThatAlreadyIsInAParentsPortfolio

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: account1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:03:35'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:03:35'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 01:09:14'!
test16

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: portfolio1.. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 01:09:18' prior: 50571691!
test16

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: portfolio1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:09:21'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:09:38' prior: 50571434!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| account isInSubtree: anAccount]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])
		or:
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:09:44'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:09:48'!
PASSED!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:09:48'!
FAILURE!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:09:48'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:10:11' prior: 50571085!
isInSubtree: anAccount

	^ (accounts anySatisfy: [:account| account = anAccount or: (account isInSubtree: anAccount)])
		or:
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:10:12'!
PASSED!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:10:12'!
FAILURE!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:10:12'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:13:59' prior: 50571290!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account isInSubtree: anAccount])       or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: 
		(anAccount isInSubtree: self)  or:
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:14:00'!
PASSED!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:14:00'!
FAILURE!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:14:00'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:15:52' prior: 50571738!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| account isInSubtree: anAccount]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])
		or:
		(anAccount isInSubtree: self)  or:
		(self = anAccount)! !
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:16:01' prior: 50571820!
isInSubtree: anAccount

	^ (accounts anySatisfy: [:account| account = anAccount or: (account isInSubtree: anAccount)])
		or:
		(anAccount isInSubtree: self)  or:
		(self = anAccount)! !

----SNAPSHOT----(16 October 2022 01:16:02) CuisUniversity-5481.image priorSource: 7633366!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:16:08'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:16:08'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:16:32' prior: 50571986!
isInSubtree: anAccount

	^ (accounts anySatisfy: [:account| account = anAccount or: (account isInSubtree: anAccount)])
		or:
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:16:32'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:16:32'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:16:32'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:16:32'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:16:33'!
PASSED!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:16:33'!
FAILURE!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:16:33'!
FAILURE!
!PortfolioAccount methodsFor: 'accessing' stamp: 'LM 10/16/2022 01:24:51'!
allAccounts

	|res|
	
	res _ Set new.
	
	accounts do: [:account| res add: account. res union: account allAccounts].
	
	^res! !
!ReceptiveAccount methodsFor: 'accessing' stamp: 'LM 10/16/2022 01:25:10'!
allAccounts

	Set with: self.! !
!ReceptiveAccount methodsFor: 'accessing' stamp: 'LM 10/16/2022 01:25:43' prior: 50572087!
allAccounts

	^Set new.! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:25:45'!
PASSED!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:25:45'!
FAILURE!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:25:45'!
FAILURE!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:28:37' prior: 50571975!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| (account isInSubtree: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])
		or:
		(anAccount isInSubtree: self)  or:
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:28:38'!
PASSED!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:28:38'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:29:34' prior: 50572005!
isInSubtree: anAccount

	^ (accounts anySatisfy: [:account| account = anAccount or: (account isInSubtree: anAccount) or: [anAccount allAccounts includes: account]])
		or:
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:29:34'!
PASSED!

!testRun: #PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:29:34'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 01:30:38'!
test16CannotAddPortfolioThatHasAccountToAPortfolioThatAlreadyHasAnAccount

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: portfolio1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!methodRemoval: PortfolioAccountTest #test16 stamp: 'LM 10/16/2022 01:30:38'!
test16

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: portfolio1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 01:30:42'!
test12CannotAddReceptiveAccountToPortfolioTwice

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: account1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !

!methodRemoval: PortfolioAccountTest #test12CannotAddAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:30:42'!
test12CannotAddAccountToPortfolioTwice

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: account1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 01:30:48'!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio2 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: account1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !

!methodRemoval: PortfolioAccountTest #test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:30:48'!
test13CannotAddAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio2 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: account1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 01:30:57'!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: account1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!methodRemoval: PortfolioAccountTest #test15CannotAddAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:30:57'!
test15CannotAddAccountThatAlreadyIsInAParentsPortfolio

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: account1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/16/2022 01:31:13'!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: portfolio1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!methodRemoval: PortfolioAccountTest #test16CannotAddPortfolioThatHasAccountToAPortfolioThatAlreadyHasAnAccount stamp: 'LM 10/16/2022 01:31:13'!
test16CannotAddPortfolioThatHasAccountToAPortfolioThatAlreadyHasAnAccount

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: portfolio1. self fail]  on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 01:31:22'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 01:31:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/16/2022 01:31:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 01:31:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 01:31:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/16/2022 01:31:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/16/2022 01:31:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/16/2022 01:31:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/16/2022 01:31:24'!
PASSED!

----SNAPSHOT----(16 October 2022 01:31:27) CuisUniversity-5481.image priorSource: 7691001!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 01:32:04' prior: 50572163!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| (account isInSubtree: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])
		or:
		(anAccount isInSubtree: self)  or:
		(self = anAccount)
		
		"Lo importante es la buena onda"! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 01:32:05'!
PASSED!

----SNAPSHOT----(16 October 2022 01:33:07) CuisUniversity-5481.image priorSource: 7713711!

----QUIT----(16 October 2022 01:33:49) CuisUniversity-5481.image priorSource: 7716457!

----STARTUP---- (16 October 2022 11:59:36) as C:\Lautaro Disco C\Programas Varios\CuisUniversity\CuisUniversity-5481.image!

!ReceptiveAccount methodsFor: 'accessing' stamp: 'LM 10/16/2022 12:00:35' prior: 50572091!
allAccounts

	^Set with: self.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/16/2022 12:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 12:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 12:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/16/2022 12:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/16/2022 12:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/16/2022 12:00:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/16/2022 12:00:36'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:00:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/16/2022 12:00:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 12:00:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 12:00:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/16/2022 12:00:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/16/2022 12:00:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/16/2022 12:00:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/16/2022 12:00:39'!
PASSED!
!PortfolioAccount methodsFor: 'accessing' stamp: 'LM 10/16/2022 12:02:09' prior: 50572080!
allAccounts

	accounts inject: Set new into: [:allAccountsSoFar :account| allAccountsSoFar add: account. allAccountsSoFar union: account allAccounts].
	
! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:02:10'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:02:10'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:02:10'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:02:10'!
ERROR!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:02:10'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:02:10'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:02:10'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:02:10'!
ERROR!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:02:10'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:02:10'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:02:10'!
ERROR!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:02:10'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:02:10'!
ERROR!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:02:10'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:02:10'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:02:10'!
PASSED!
!PortfolioAccount methodsFor: 'accessing' stamp: 'LM 10/16/2022 12:03:05' prior: 50572926!
allAccounts

	^accounts inject: Set new into: [:allAccountsSoFar :account| allAccountsSoFar add: account. allAccountsSoFar union: account allAccounts].
	
! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:03:06'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:03:06'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:05:39' prior: 50571896!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account isInSubtree: anAccount])       or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: 
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:05:39'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:05:39'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:05:49' prior: 50572708!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| (account isInSubtree: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])
		or:
		(self = anAccount)
		
		"Lo importante es la buena onda"! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:05:50'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:05:50'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:06:20' prior: 50572241!
isInSubtree: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
										or: (account isInSubtree: anAccount) 
										or: [anAccount allAccounts includes: account]])
		or:
		(self = anAccount)! !
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:06:39' prior: 50573239!
isInSubtree: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
										or: [anAccount allAccounts includes: account]])
		or:
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:06:40'!
PASSED!

----SNAPSHOT----(16 October 2022 12:07:44) CuisUniversity-5481.image priorSource: 7716549!

!classRemoval: #TreeTerrain stamp: 'LM 10/16/2022 12:07:54'!
Terrain subclass: #TreeTerrain
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #EmptyTerrain stamp: 'LM 10/16/2022 12:07:54'!
Terrain subclass: #EmptyTerrain
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #DiggableTerrain stamp: 'LM 10/16/2022 12:07:54'!
Terrain subclass: #DiggableTerrain
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Terrain stamp: 'LM 10/16/2022 12:07:54'!
Object subclass: #Terrain
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #SimplePirateRank stamp: 'LM 10/16/2022 12:07:54'!
Rank subclass: #SimplePirateRank
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #CaptainRank stamp: 'LM 10/16/2022 12:07:55'!
Rank subclass: #CaptainRank
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Rank stamp: 'LM 10/16/2022 12:07:55'!
Object subclass: #Rank
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Filibuster stamp: 'LM 10/16/2022 12:07:55'!
Pirate subclass: #Filibuster
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Corsair stamp: 'LM 10/16/2022 12:07:55'!
Pirate subclass: #Corsair
	instanceVariableNames: 'map'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Buccaneer stamp: 'LM 10/16/2022 12:07:55'!
Pirate subclass: #Buccaneer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Pirate stamp: 'LM 10/16/2022 12:07:55'!
Object subclass: #Pirate
	instanceVariableNames: 'rank'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Map stamp: 'LM 10/16/2022 12:07:56'!
Object subclass: #Map
	instanceVariableNames: 'island startPosition steps treasureMarkPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Island stamp: 'LM 10/16/2022 12:07:56'!
Object subclass: #Island
	instanceVariableNames: 'boardSize treesAt digsAt crewAt treasureAt'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Filibustero stamp: 'LM 10/16/2022 12:07:56'!
Object subclass: #Filibustero
	instanceVariableNames: 'rank'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Crew stamp: 'LM 10/16/2022 12:07:56'!
Object subclass: #Crew
	instanceVariableNames: 'island pirates'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Corsario stamp: 'LM 10/16/2022 12:07:56'!
Object subclass: #Corsario
	instanceVariableNames: 'rank map'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #Bucanero stamp: 'LM 10/16/2022 12:07:56'!
Object subclass: #Bucanero
	instanceVariableNames: 'rank'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!classRemoval: #CrewTest stamp: 'LM 10/16/2022 12:07:57'!
TestCase subclass: #CrewTest
	instanceVariableNames: 'island crew treePosition crewPosition map digPosition nextPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2022-2C-1erParcial'!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:07:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/16/2022 12:08:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 12:08:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/16/2022 12:08:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/16/2022 12:08:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/16/2022 12:08:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/16/2022 12:08:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/16/2022 12:08:00'!
PASSED!

----SNAPSHOT----(16 October 2022 12:08:02) CuisUniversity-5481.image priorSource: 7733605!
!PortfolioAccount methodsFor: 'adding' stamp: 'LM 10/16/2022 12:08:34' prior: 50570952!
add: anAccount

	(self cannotAdd: anAccount) ifTrue: [self error: self class duplicatedAccountErrorMessage].
	
	accounts add: anAccount.
	anAccount addParent: self. ! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:08:35'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:08:35'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:09:54'!
contains: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
										or: [anAccount allAccounts includes: account]])
		or:
		(self = anAccount)! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:09:54'!
contains: anAccount

	^self = anAccount! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'LM 10/16/2022 12:09:54' prior: 50573158!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| (account contains: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])
		or:
		(self = anAccount)
		
		"Lo importante es la buena onda"! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'LM 10/16/2022 12:09:54' prior: 50573080!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account contains: anAccount])       or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: 
		(self = anAccount)! !

!methodRemoval: PortfolioAccount #isInSubtree: stamp: 'LM 10/16/2022 12:09:54'!
isInSubtree: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
										or: [anAccount allAccounts includes: account]])
		or:
		(self = anAccount)!

!methodRemoval: ReceptiveAccount #isInSubtree: stamp: 'LM 10/16/2022 12:09:54'!
isInSubtree: anAccount

	^self = anAccount!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:09:55'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:09:55'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:10:22'!
containsAccount: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
										or: [anAccount allAccounts includes: account]])
		or:
		(self = anAccount)! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:10:22'!
containsAccount: anAccount

	^self = anAccount! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'LM 10/16/2022 12:10:22' prior: 50573648!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAccount: anAccount])       or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: 
		(self = anAccount)! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'LM 10/16/2022 12:10:22' prior: 50573635!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAccount: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])
		or:
		(self = anAccount)
		
		"Lo importante es la buena onda"! !

!methodRemoval: PortfolioAccount #contains: stamp: 'LM 10/16/2022 12:10:22'!
contains: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
										or: [anAccount allAccounts includes: account]])
		or:
		(self = anAccount)!

!methodRemoval: ReceptiveAccount #contains: stamp: 'LM 10/16/2022 12:10:22'!
contains: anAccount

	^self = anAccount!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:10:23'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:10:24'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:10:24'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:10:24'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:10:24'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:10:24'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:10:24'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:12:19' prior: 50573751!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAccount: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount]) or: 
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:12:20'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:12:20'!
PASSED!
!PortfolioAccount methodsFor: 'testing' stamp: 'LM 10/16/2022 12:12:46' prior: 50573738!
containsAccount: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
										or: [anAccount allAccounts includes: account]])
		or: (self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:12:46'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:12:46'!
PASSED!
!PortfolioAccount methodsFor: 'accessing' stamp: 'LM 10/16/2022 12:14:13' prior: 50567222 overrides: 50567198!
transactions
	
	
	^(accounts inject: OrderedCollection new into:[:transactionsSoFar :bankEntity| transactionsSoFar union: bankEntity transactions ]) asOrderedCollection ! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:14:14'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:14:14'!
PASSED!
!PortfolioAccount methodsFor: 'accessing' stamp: 'LM 10/16/2022 12:14:22' prior: 50574010 overrides: 50567198!
transactions
	
	
	^(accounts inject: OrderedCollection new into:[:transactionsSoFar :bankEntity| transactionsSoFar union: bankEntity transactions ]) ! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:14:23'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:14:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:14:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:14:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:14:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:14:23'!
FAILURE!
!PortfolioAccount methodsFor: 'accessing' stamp: 'LM 10/16/2022 12:14:37' prior: 50574088 overrides: 50567198!
transactions
	
	
	^(accounts inject: OrderedCollection new into:[:transactionsSoFar :bankEntity| transactionsSoFar union: bankEntity transactions ]) asOrderedCollection ! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/16/2022 12:14:38'!
PASSED!

----SNAPSHOT----(16 October 2022 12:16:06) CuisUniversity-5481.image priorSource: 7740509!

----SNAPSHOT----(16 October 2022 12:16:25) CuisUniversity-5481.image priorSource: 7762950!

----QUIT----(16 October 2022 12:16:34) CuisUniversity-5481.image priorSource: 7763042!

----STARTUP---- (17 October 2022 11:34:31) as C:\Lautaro Disco C\Programas Varios\CuisUniversity\CuisUniversity-5481.image!


!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 11:35:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 11:35:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 11:35:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 11:35:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 11:35:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 11:35:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 11:35:00'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:36:00' prior: 50567003!
test09EmptyPortfolioHasNotRegisteredATransaction

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	
	transaction1 _ Deposit register: 50 on: account1.
	
	self deny: (portfolio1 hasRegistered: transaction1) 
	
	
	
	! !

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:36:01'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:36:01'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:40:17' prior: 50572397!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio2 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: account1. self fail]  
		on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:40:18'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:40:18'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:40:30' prior: 50572360!
test12CannotAddReceptiveAccountToPortfolioTwice

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: account1. self fail]  
		on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:40:31'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:40:31'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:40:36' prior: 50571585!
test14CannotAddPortfolioToSamePortfolio

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: portfolio1. self fail]  
		on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:40:37'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:40:37'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:40:40' prior: 50572442!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: account1. self fail]  
		on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:40:41'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:40:41'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:40:45' prior: 50572485!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio2 add: portfolio1. self fail]  
		on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:40:46'!
PASSED!

----End fileIn of D:\Lautaro Disco H\Estudios\Inge1\Repo nuestro\ingsoft-2022-2c\05-MarsRover\MarsRover.st----!

----SNAPSHOT----(17 October 2022 11:41:39) CuisUniversity-5481.image priorSource: 7763134!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:43:13' prior: 50574436!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio2 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio1 add: account1. self fail]  
		raise: Error
		withErrorDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:43:42' prior: 50575444!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio2 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio1 add: account1. self fail]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:43:47' prior: 50575467!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio2 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio1 add: account1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:43:50'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:43:50'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:44:36' prior: 50574623!
test14CannotAddPortfolioToSamePortfolio

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio1 add: portfolio1. self fail]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:44:56' prior: 50574714!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio2 add: account1. self fail]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:44:57'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:44:57'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:45:19' prior: 50574809!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio2 add: portfolio1. self fail]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:45:24' prior: 50575703!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio2 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:45:31' prior: 50575729!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: []  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:45:31'!
FAILURE!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:45:44' prior: 50575755!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio2 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (OrderedCollection with: transaction1).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:45:45'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:45:45'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:47:44' prior: 50566936!
test06PortfolioWithOneAccountHasSameTransactionsAsAccount

	|portfolio1 account1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	
	Deposit register: 50 on: account1.
	portfolio1 add: account1.
	
	self assert: (portfolio1 transactions) equals: (account1 transactions)
	
	
	
	! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:47:44'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:47:45'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:47:45'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:47:45'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:47:45'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:47:45'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:47:45'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:47:52' prior: 50575885!
test06PortfolioWithOneAccountHasSameTransactionsAsAccount

	|portfolio1 account1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	
	Deposit register: 50 on: account1.
	portfolio1 add: account1.
	
	self assert: portfolio1 transactions equals: account1 transactions
	
	
	
	! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:47:52'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:47:52'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:48:22' prior: 50566951!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	|portfolio1 portfolio2 account1 account2|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	
	Deposit register: 50  on: account1 .
	Withdraw register: 20 on: account2 .
	
	portfolio1 add: account1.
	(portfolio2 add: account2) add: portfolio1.

	
	self assert: portfolio2 transactions equals: portfolio1 transactions + account2 transactions
	
	
	! !

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:48:22'!
ERROR!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:48:47' prior: 50576057!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	|portfolio1 portfolio2 account1 account2|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	
	Deposit register: 50  on: account1 .
	Withdraw register: 20 on: account2 .
	
	portfolio1 add: account1.
	(portfolio2 add: account2) add: portfolio1.

	
	self assert: portfolio2 transactions equals: (portfolio1 transactions union: account2 transactions)
	
	
	! !

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:48:48'!
FAILURE!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:49:00' prior: 50576081!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	|portfolio1 portfolio2 account1 account2|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	
	Deposit register: 50  on: account1 .
	Withdraw register: 20 on: account2 .
	
	portfolio1 add: account1.
	(portfolio2 add: account2) add: portfolio1.

	
	self assert: portfolio2 transactions equals: (portfolio1 transactions union: account2 transactions) asOrderedCollection 
	
	
	! !

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:49:01'!
PASSED!

TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1x portfolio2x portfolio3x account1x account2x account3x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 11:49:40'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1x portfolio2x portfolio3x account1x account2x account3x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----SNAPSHOT----(17 October 2022 11:49:54) CuisUniversity-5481.image priorSource: 7801275!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 11:50:48'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1x portfolio2x portfolio3x account1x account2x account3x receptiveAccount1x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 11:50:50'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1x portfolio2x portfolio3x account1x account2x account3x receptiveAccount1x receptiveAccount2x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 11:50:51'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1x portfolio2x portfolio3x account1x account2x account3x receptiveAccount1x receptiveAccount2x receptiveAccount3x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'setUp' stamp: 'LM 10/17/2022 11:50:38' overrides: 16961394!
setUp

	portfolio1x _ PortfolioAccount new.
	portfolio2x _ PortfolioAccount new.
	portfolio3x _ PortfolioAccount new.
	receptiveAccount1x _ ReceptiveAccount new.
	receptiveAccount2x _ ReceptiveAccount new.
	receptiveAccount3x _ ReceptiveAccount new.! !

TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1x portfolio2x portfolio3x receptiveAccount1x receptiveAccount2x receptiveAccount3x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 11:50:59'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1x portfolio2x portfolio3x receptiveAccount1x receptiveAccount2x receptiveAccount3x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:51:19' prior: 50566867!
test01EmptyPortfolioHasBalance0

	self assert: portfolio1x balance equals: 0
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:51:40' prior: 50566874!
test02PortfolioWithOneAccountHasSameBalanceAsAccount

	Deposit register: 50 on: receptiveAccount1x.
	portfolio1x add: receptiveAccount1x.
	
	self assert: portfolio1x balance equals: receptiveAccount1x balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:52:00' prior: 50566886!
test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1x .
	Withdraw register: 20 on: receptiveAccount2x .
	
	portfolio1x add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1x.

	
	self assert: portfolio2x balance equals: portfolio1x balance + receptiveAccount2x balance
	
	
	
	! !

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:52:01'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:52:01'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:52:44' prior: 50566904!
test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1x .
	Withdraw register: 20 on: receptiveAccount2x .
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1x add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1x.
	(portfolio3x add: receptiveAccount3x) add: portfolio2x.

	
	self assert: portfolio3x balance equals: portfolio2x balance + receptiveAccount3x balance
	
	
	
	! !

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:52:45'!
PASSED!

----SNAPSHOT----(17 October 2022 11:52:47) CuisUniversity-5481.image priorSource: 7826043!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:53:07' prior: 50566928!
test05EmptyPortfolioHasNoTransactions

	self assert: portfolio1x transactions equals: OrderedCollection new.
	
	
	
	! !

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:08'!
FAILURE!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:08'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:09'!
FAILURE!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:53:09'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:09'!
FAILURE!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:14'!
FAILURE!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 11:53:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 11:53:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 11:53:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 11:53:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 11:53:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 11:53:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 11:53:17'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:53:18'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:53:21'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:53:21'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:53:43' prior: 50575971!
test06PortfolioWithOneAccountHasSameTransactionsAsAccount

	Deposit register: 50 on: receptiveAccount1x.
	portfolio1x add: receptiveAccount1x.
	
	self assert: portfolio1x transactions equals: receptiveAccount1x transactions
	
	
	
	! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:43'!
FAILURE!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:53:43'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:53:43'!
FAILURE!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:54:09'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:54:11'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:54:15'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:54:16'!
FAILURE!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:54:16'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:54:16'!
FAILURE!
!PortfolioAccount methodsFor: 'accessing' stamp: 'LM 10/17/2022 11:54:49' prior: 50574166 overrides: 50567198!
transactions
	
	
	^accounts inject: Set new into:[:transactionsSoFar :bankEntity| transactionsSoFar union: bankEntity transactions ]! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:54:50'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:54:50'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:54:50'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:54:50'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:54:50'!
FAILURE!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:54:50'!
FAILURE!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:54:50'!
FAILURE!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:54:50'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:54:50'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:54:50'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:54:50'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:54:50'!
FAILURE!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:54:50'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:54:50'!
FAILURE!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:54:50'!
FAILURE!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:54:50'!
FAILURE!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'LM 10/17/2022 11:55:01' prior: 50569694 overrides: 50567194!
initialize

	transactions := Set new.
	super initialize.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 11:55:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 11:55:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 11:55:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 11:55:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 11:55:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 11:55:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 11:55:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 11:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 11:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 11:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 11:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 11:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 11:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 11:55:04'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:55:06'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:55:06'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:55:06'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:55:06'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:55:06'!
FAILURE!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:55:06'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:55:06'!
FAILURE!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:55:06'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:55:06'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:55:06'!
ERROR!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:55:06'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:55:06'!
FAILURE!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:55:06'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:55:06'!
FAILURE!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:55:06'!
FAILURE!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:55:06'!
FAILURE!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:55:22' prior: 50576105!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	|portfolio1 portfolio2 account1 account2|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	
	Deposit register: 50  on: account1 .
	Withdraw register: 20 on: account2 .
	
	portfolio1 add: account1.
	(portfolio2 add: account2) add: portfolio1.

	
	self assert: portfolio2 transactions equals: (portfolio1 transactions union: account2 transactions) 
	
	
	! !

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:55:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:55:23'!
ERROR!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:55:23'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:55:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:55:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:55:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:55:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:55:23'!
FAILURE!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:55:30' prior: 50576481!
test05EmptyPortfolioHasNoTransactions

	self assert: portfolio1x transactions equals: Set new.
	
	
	
	! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:55:39'!
ERROR!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:55:39'!
ERROR!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:57:56' prior: 50567015!
test10PortfolioWithOneAccountHasRegisteredItsTransaction

	|portfolio1 account1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	
	Deposit register: 50 on: account1.
	portfolio1 add: account1.
	
	self assert: (portfolio1 hasRegistered: account1 transactions array first)
	
	
	
	! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:57:56'!
FAILURE!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:58:23'!
FAILURE!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:58:23'!
FAILURE!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:58:32' prior: 50574532!
test12CannotAddReceptiveAccountToPortfolioTwice

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	[portfolio1 add: account1. self fail]  
		on: Error
		do: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:58:37' prior: 50575785!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	|portfolio1 portfolio2 portfolio3 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio3 add: account1.
	portfolio3 add: portfolio2.
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio2 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:58:42' prior: 50575607!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio2 add: account1. self fail]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:58:45' prior: 50575587!
test14CannotAddPortfolioToSamePortfolio

	|portfolio1 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio1 add: account1.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio1 add: portfolio1. self fail]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:58:48' prior: 50575490!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	|portfolio1 portfolio2 account1 transaction1|
	
	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
		
	portfolio2 add: account1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: account1.
		
	self should: [portfolio1 add: account1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:58:53'!
FAILURE!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:58:53'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:58:53'!
FAILURE!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 11:59:47' prior: 50577431!
test10PortfolioWithOneAccountHasRegisteredItsTransaction

	|portfolio1 account1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	
	Deposit register: 50 on: account1.
	portfolio1 add: account1.
	
	self assert: (portfolio1 hasRegistered: (account1 transactions array at: 1))
	
	
	
	! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:59:48'!
FAILURE!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:59:51'!
FAILURE!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 11:59:51'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 11:59:51'!
FAILURE!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:00:32' prior: 50577635!
test10PortfolioWithOneAccountHasRegisteredItsTransaction

	|portfolio1 account1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	
	Deposit register: 50 on: account1.
	portfolio1 add: account1.
	
	self assert: (portfolio1 hasRegistered: (account1 transactions atRandom: 1))
	
	
	
	! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:00:34'!
ERROR!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:00:56' prior: 50577729!
test10PortfolioWithOneAccountHasRegisteredItsTransaction

	|portfolio1 account1|
	
	portfolio1 _ PortfolioAccount new.
	account1 _ ReceptiveAccount new.
	
	Deposit register: 50 on: account1.
	portfolio1 add: account1.
	
	self assert: (portfolio1 hasRegistered: account1 transactions asOrderedCollection first)
	
	
	
	! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:00:56'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:01:04'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:01:05'!
PASSED!

----SNAPSHOT----(17 October 2022 12:01:07) CuisUniversity-5481.image priorSource: 7834462!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:01:45' prior: 50577323!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	
	portfolio1x add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1x.

	
	self assert: portfolio2x transactions equals: (portfolio1x transactions union: receptiveAccount2x transactions) 
	
	
	! !

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:01:46'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:01:46'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:02:47' prior: 50566974!
test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1x add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1x.
	(portfolio3x add: receptiveAccount3x) add: portfolio2x.

	
	self assert: portfolio3x transactions equals: (portfolio2x transactions union: receptiveAccount3x transactions)
	
	
	
	! !

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:02:48'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:02:48'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:03:31' prior: 50574351!
test09EmptyPortfolioHasNotRegisteredATransaction

	|transaction1|
	
	transaction1 _ Deposit register: 50 on: receptiveAccount1x.
	
	self deny: (portfolio1x hasRegistered: transaction1) 
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:04:28' prior: 50577746!
test10PortfolioWithOneAccountHasRegisteredItsTransaction

	Deposit register: 50 on: receptiveAccount1x.
	portfolio1x add: receptiveAccount1x.
	
	self assert: (portfolio1x hasRegistered: receptiveAccount1x transactions asOrderedCollection first)
	
	
	
	! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:04:29'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:04:29'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:05:01' prior: 50567027!
test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction

	|transaction1|
	
	transaction1 _ Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	
	portfolio1x add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1x.

	
	self assert: (portfolio2x hasRegistered: transaction1)
	
	
	! !

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:05:02'!
PASSED!

----SNAPSHOT----(17 October 2022 12:05:04) CuisUniversity-5481.image priorSource: 7879992!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:06:01' prior: 50577456!
test12CannotAddReceptiveAccountToPortfolioTwice

	|transaction1|
	
	portfolio1x _ PortfolioAccount new.
	receptiveAccount1x _ ReceptiveAccount new.
		
	portfolio1x add: receptiveAccount1x.
	transaction1 _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio1x add: receptiveAccount1x]
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:06:01'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:06:02'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:06:02'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:06:02'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:06:38' prior: 50577540!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	|transaction1|
	
	portfolio2x add: receptiveAccount1x.
	portfolio1x add: portfolio2x.
	transaction1 _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio1x add: receptiveAccount1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:07:32' prior: 50577521!
test14CannotAddPortfolioToSamePortfolio

	|transaction1|
	
	portfolio1x add: receptiveAccount1x.
	transaction1 _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio1x add: portfolio1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:07:33'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:07:33'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:07:57' prior: 50577499!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	|transaction1|
	
	portfolio1x add: receptiveAccount1x.
	portfolio1x add: portfolio2x.
	transaction1 _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2x add: receptiveAccount1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:07:58'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:07:58'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:08:25' prior: 50577474!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	|transaction1|
	
	portfolio3x add: receptiveAccount1x.
	portfolio3x add: portfolio2x.
	portfolio1x add: receptiveAccount1x.
	transaction1 _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2x add: portfolio1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:08:26'!
PASSED!

TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1x portfolio2x portfolio3x receptiveAccount1x receptiveAccount2x receptiveAccount3x transaction1x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:08:53'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1x portfolio2x portfolio3x receptiveAccount1x receptiveAccount2x receptiveAccount3x transaction1x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:09:03' prior: 50578179!
test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction

	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	
	portfolio1x add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1x.

	
	self assert: (portfolio2x hasRegistered: transaction1x)
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:09:10' prior: 50578271!
test12CannotAddReceptiveAccountToPortfolioTwice

	portfolio1x _ PortfolioAccount new.
	receptiveAccount1x _ ReceptiveAccount new.
		
	portfolio1x add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio1x add: receptiveAccount1x]
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1x).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:09:14' prior: 50578363!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	portfolio2x add: receptiveAccount1x.
	portfolio1x add: portfolio2x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio1x add: receptiveAccount1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1x).
							]]
	
	
	! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:09:20'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:09:27' prior: 50578382!
test14CannotAddPortfolioToSamePortfolio

	portfolio1x add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio1x add: portfolio1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1x).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:09:34' prior: 50578471!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	portfolio1x add: receptiveAccount1x.
	portfolio1x add: portfolio2x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2x add: receptiveAccount1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1x).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:09:40' prior: 50578563!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	portfolio3x add: receptiveAccount1x.
	portfolio3x add: portfolio2x.
	portfolio1x add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2x add: portfolio1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1x).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:09:43' prior: 50578837!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	portfolio3x add: receptiveAccount1x.
	portfolio3x add: portfolio2x.
	portfolio1x add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2x add: portfolio1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1x transactions = (Set with: transaction1x).
							]]
	
	
	
	! !

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:09:43'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:09:43'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:12:14'!
assertDoing: aBlock raisesDuplicatedAccountErrorAndDoesntChangePortfolio: aPortfolio
		
	self should: aBlock
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							aPortfolio transactions = (Set with: transaction1x).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'assertions' stamp: 'LM 10/17/2022 12:12:54'!
assertThatDoing: aBlock raisesDuplicatedAccountErrorAndDoesntChangePortfolio: aPortfolio
		
	self should: aBlock
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							aPortfolio transactions = (Set with: transaction1x).
							]]
	
	
	! !

!methodRemoval: PortfolioAccountTest #assertDoing:raisesDuplicatedAccountErrorAndDoesntChangePortfolio: stamp: 'LM 10/17/2022 12:12:54'!
assertDoing: aBlock raisesDuplicatedAccountErrorAndDoesntChangePortfolio: aPortfolio
		
	self should: aBlock
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							aPortfolio transactions = (Set with: transaction1x).
							]]
	
	
	!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:13:59' prior: 50578692!
test12CannotAddReceptiveAccountToPortfolioTwice

	portfolio1x _ PortfolioAccount new.
	receptiveAccount1x _ ReceptiveAccount new.
		
	portfolio1x add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self assertThatDoing: [portfolio1x add: receptiveAccount1x] raisesDuplicatedErrorMessageAndDoesntChangePortfolio: portfolio1x.
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:14:37' prior: 50578992!
test12CannotAddReceptiveAccountToPortfolioTwice

	portfolio1x _ PortfolioAccount new.
	receptiveAccount1x _ ReceptiveAccount new.
		
	portfolio1x add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self assertThatDoing: [portfolio1x add: receptiveAccount1x] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1x.! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:14:37'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:14:37'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:15:29' prior: 50578711!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	portfolio2x add: receptiveAccount1x.
	portfolio1x add: portfolio2x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self assertThatDoing: [portfolio1x add: receptiveAccount1x] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1x
	
	
	! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:15:29'!
PASSED!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:15:37'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2x portfolio3x receptiveAccount1x receptiveAccount2x receptiveAccount3x transaction1x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50578086!
test09EmptyPortfolioHasNotRegisteredATransaction

	|transaction1|
	
	transaction1 _ Deposit register: 50 on: receptiveAccount1x.
	
	self deny: (portfolio1 hasRegistered: transaction1) 
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50576879!
test06PortfolioWithOneAccountHasSameTransactionsAsAccount

	Deposit register: 50 on: receptiveAccount1x.
	portfolio1 add: receptiveAccount1x.
	
	self assert: portfolio1 transactions equals: receptiveAccount1x transactions
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50576288!
test02PortfolioWithOneAccountHasSameBalanceAsAccount

	Deposit register: 50 on: receptiveAccount1x.
	portfolio1 add: receptiveAccount1x.
	
	self assert: portfolio1 balance equals: receptiveAccount1x balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50576282!
test01EmptyPortfolioHasBalance0

	self assert: portfolio1 balance equals: 0
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50578095!
test10PortfolioWithOneAccountHasRegisteredItsTransaction

	Deposit register: 50 on: receptiveAccount1x.
	portfolio1 add: receptiveAccount1x.
	
	self assert: (portfolio1 hasRegistered: receptiveAccount1x transactions asOrderedCollection first)
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50577904!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1.

	
	self assert: portfolio2x transactions equals: (portfolio1 transactions union: receptiveAccount2x transactions) 
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50577993!
test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1.
	(portfolio3x add: receptiveAccount3x) add: portfolio2x.

	
	self assert: portfolio3x transactions equals: (portfolio2x transactions union: receptiveAccount3x transactions)
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50576252 overrides: 16961394!
setUp

	portfolio1 _ PortfolioAccount new.
	portfolio2x _ PortfolioAccount new.
	portfolio3x _ PortfolioAccount new.
	receptiveAccount1x _ ReceptiveAccount new.
	receptiveAccount2x _ ReceptiveAccount new.
	receptiveAccount3x _ ReceptiveAccount new.! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50579094!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	portfolio2x add: receptiveAccount1x.
	portfolio1 add: portfolio2x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self assertThatDoing: [portfolio1 add: receptiveAccount1x] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50578677!
test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction

	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1.

	
	self assert: (portfolio2x hasRegistered: transaction1x)
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50578857!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	portfolio3x add: receptiveAccount1x.
	portfolio3x add: portfolio2x.
	portfolio1 add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2x add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1x).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50578803!
test14CannotAddPortfolioToSamePortfolio

	portfolio1 add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio1 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1x).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50577416!
test05EmptyPortfolioHasNoTransactions

	self assert: portfolio1 transactions equals: Set new.
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50578819!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	portfolio1 add: receptiveAccount1x.
	portfolio1 add: portfolio2x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2x add: receptiveAccount1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1x).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50576298!
test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1x .
	Withdraw register: 20 on: receptiveAccount2x .
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1.

	
	self assert: portfolio2x balance equals: portfolio1 balance + receptiveAccount2x balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50579007!
test12CannotAddReceptiveAccountToPortfolioTwice

	portfolio1 _ PortfolioAccount new.
	receptiveAccount1x _ ReceptiveAccount new.
		
	portfolio1 add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self assertThatDoing: [portfolio1 add: receptiveAccount1x] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1.! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:37' prior: 50576386!
test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1x .
	Withdraw register: 20 on: receptiveAccount2x .
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2x add: receptiveAccount2x) add: portfolio1.
	(portfolio3x add: receptiveAccount3x) add: portfolio2x.

	
	self assert: portfolio3x balance equals: portfolio2x balance + receptiveAccount3x balance
	
	
	
	! !

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:15:40'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3x receptiveAccount1x receptiveAccount2x receptiveAccount3x transaction1x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:40' prior: 50579292!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	portfolio2 add: receptiveAccount1x.
	portfolio1 add: portfolio2.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self assertThatDoing: [portfolio1 add: receptiveAccount1x] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:40' prior: 50579365!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	portfolio1 add: receptiveAccount1x.
	portfolio1 add: portfolio2.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2 add: receptiveAccount1x]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1x).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:40' prior: 50579260!
test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.
	(portfolio3x add: receptiveAccount3x) add: portfolio2.

	
	self assert: portfolio3x transactions equals: (portfolio2 transactions union: receptiveAccount3x transactions)
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:40' prior: 50579280 overrides: 16961394!
setUp

	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3x _ PortfolioAccount new.
	receptiveAccount1x _ ReceptiveAccount new.
	receptiveAccount2x _ ReceptiveAccount new.
	receptiveAccount3x _ ReceptiveAccount new.! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:40' prior: 50579383!
test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1x .
	Withdraw register: 20 on: receptiveAccount2x .
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.

	
	self assert: portfolio2 balance equals: portfolio1 balance + receptiveAccount2x balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:40' prior: 50579413!
test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1x .
	Withdraw register: 20 on: receptiveAccount2x .
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.
	(portfolio3x add: receptiveAccount3x) add: portfolio2.

	
	self assert: portfolio3x balance equals: portfolio2 balance + receptiveAccount3x balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:40' prior: 50579307!
test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction

	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.

	
	self assert: (portfolio2 hasRegistered: transaction1x)
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:40' prior: 50579322!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	portfolio3x add: receptiveAccount1x.
	portfolio3x add: portfolio2.
	portfolio1 add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1x).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:40' prior: 50579244!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.

	
	self assert: portfolio2 transactions equals: (portfolio1 transactions union: receptiveAccount2x transactions) 
	
	
	! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:15:42'!
PASSED!

----SNAPSHOT----(17 October 2022 12:15:44) CuisUniversity-5481.image priorSource: 7891725!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:15:54'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 receptiveAccount1x receptiveAccount2x receptiveAccount3x transaction1x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:54' prior: 50579557!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	portfolio3 add: receptiveAccount1x.
	portfolio3 add: portfolio2.
	portfolio1 add: receptiveAccount1x.
	transaction1x _ Deposit register: 50  on: receptiveAccount1x.
		
	self should: [portfolio2 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1x).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:54' prior: 50579476!
test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1x.
	Withdraw register: 20 on: receptiveAccount2x.
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.
	(portfolio3 add: receptiveAccount3x) add: portfolio2.

	
	self assert: portfolio3 transactions equals: (portfolio2 transactions union: receptiveAccount3x transactions)
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:54' prior: 50579496 overrides: 16961394!
setUp

	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	receptiveAccount1x _ ReceptiveAccount new.
	receptiveAccount2x _ ReceptiveAccount new.
	receptiveAccount3x _ ReceptiveAccount new.! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:54' prior: 50579523!
test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1x .
	Withdraw register: 20 on: receptiveAccount2x .
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1x.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.
	(portfolio3 add: receptiveAccount3x) add: portfolio2.

	
	self assert: portfolio3 balance equals: portfolio2 balance + receptiveAccount3x balance
	
	
	
	! !

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:15:56'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 receptiveAccount1 receptiveAccount2x receptiveAccount3x transaction1x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579696!
test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2x.
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.
	(portfolio3 add: receptiveAccount3x) add: portfolio2.

	
	self assert: portfolio3 transactions equals: (portfolio2 transactions union: receptiveAccount3x transactions)
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579577!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2x.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.

	
	self assert: portfolio2 transactions equals: (portfolio1 transactions union: receptiveAccount2x transactions) 
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579508!
test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1 .
	Withdraw register: 20 on: receptiveAccount2x .
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.

	
	self assert: portfolio2 balance equals: portfolio1 balance + receptiveAccount2x balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579542!
test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction

	transaction1x _ Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2x.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.

	
	self assert: (portfolio2 hasRegistered: transaction1x)
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579232!
test10PortfolioWithOneAccountHasRegisteredItsTransaction

	Deposit register: 50 on: receptiveAccount1.
	portfolio1 add: receptiveAccount1.
	
	self assert: (portfolio1 hasRegistered: receptiveAccount1 transactions asOrderedCollection first)
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579215!
test02PortfolioWithOneAccountHasSameBalanceAsAccount

	Deposit register: 50 on: receptiveAccount1.
	portfolio1 add: receptiveAccount1.
	
	self assert: portfolio1 balance equals: receptiveAccount1 balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579194!
test09EmptyPortfolioHasNotRegisteredATransaction

	|transaction1|
	
	transaction1 _ Deposit register: 50 on: receptiveAccount1.
	
	self deny: (portfolio1 hasRegistered: transaction1) 
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579342!
test14CannotAddPortfolioToSamePortfolio

	portfolio1 add: receptiveAccount1.
	transaction1x _ Deposit register: 50  on: receptiveAccount1.
		
	self should: [portfolio1 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1x).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579398!
test12CannotAddReceptiveAccountToPortfolioTwice

	portfolio1 _ PortfolioAccount new.
	receptiveAccount1 _ ReceptiveAccount new.
		
	portfolio1 add: receptiveAccount1.
	transaction1x _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio1 add: receptiveAccount1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1.! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579716 overrides: 16961394!
setUp

	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	receptiveAccount1 _ ReceptiveAccount new.
	receptiveAccount2x _ ReceptiveAccount new.
	receptiveAccount3x _ ReceptiveAccount new.! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579676!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	portfolio3 add: receptiveAccount1.
	portfolio3 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1x _ Deposit register: 50  on: receptiveAccount1.
		
	self should: [portfolio2 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1x).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579204!
test06PortfolioWithOneAccountHasSameTransactionsAsAccount

	Deposit register: 50 on: receptiveAccount1.
	portfolio1 add: receptiveAccount1.
	
	self assert: portfolio1 transactions equals: receptiveAccount1 transactions
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579728!
test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1 .
	Withdraw register: 20 on: receptiveAccount2x .
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2x) add: portfolio1.
	(portfolio3 add: receptiveAccount3x) add: portfolio2.

	
	self assert: portfolio3 balance equals: portfolio2 balance + receptiveAccount3x balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579443!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	portfolio2 add: receptiveAccount1.
	portfolio1 add: portfolio2.
	transaction1x _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio1 add: receptiveAccount1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:56' prior: 50579458!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	portfolio1 add: receptiveAccount1.
	portfolio1 add: portfolio2.
	transaction1x _ Deposit register: 50  on: receptiveAccount1.
		
	self should: [portfolio2 add: receptiveAccount1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1x).
							]]
	
	
	
	! !

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:15:59'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 receptiveAccount1 receptiveAccount2 receptiveAccount3x transaction1x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:59' prior: 50579930!
test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1 .
	Withdraw register: 20 on: receptiveAccount2 .
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.
	(portfolio3 add: receptiveAccount3x) add: portfolio2.

	
	self assert: portfolio3 balance equals: portfolio2 balance + receptiveAccount3x balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:59' prior: 50579887 overrides: 16961394!
setUp

	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	receptiveAccount1 _ ReceptiveAccount new.
	receptiveAccount2 _ ReceptiveAccount new.
	receptiveAccount3x _ ReceptiveAccount new.! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:59' prior: 50579777!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.

	
	self assert: portfolio2 transactions equals: (portfolio1 transactions union: receptiveAccount2 transactions) 
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:59' prior: 50579758!
test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2.
	Deposit register: 30 on: receptiveAccount3x.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.
	(portfolio3 add: receptiveAccount3x) add: portfolio2.

	
	self assert: portfolio3 transactions equals: (portfolio2 transactions union: receptiveAccount3x transactions)
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:59' prior: 50579793!
test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1 .
	Withdraw register: 20 on: receptiveAccount2 .
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.

	
	self assert: portfolio2 balance equals: portfolio1 balance + receptiveAccount2 balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:15:59' prior: 50579808!
test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction

	transaction1x _ Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.

	
	self assert: (portfolio2 hasRegistered: transaction1x)
	
	
	! !

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:16:01'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 receptiveAccount1 receptiveAccount2 receptiveAccount3 transaction1x'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:01' prior: 50580012 overrides: 16961394!
setUp

	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	receptiveAccount1 _ ReceptiveAccount new.
	receptiveAccount2 _ ReceptiveAccount new.
	receptiveAccount3 _ ReceptiveAccount new.! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:01' prior: 50579993!
test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1 .
	Withdraw register: 20 on: receptiveAccount2 .
	Deposit register: 30 on: receptiveAccount3.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.
	(portfolio3 add: receptiveAccount3) add: portfolio2.

	
	self assert: portfolio3 balance equals: portfolio2 balance + receptiveAccount3 balance
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:01' prior: 50580040!
test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2.
	Deposit register: 30 on: receptiveAccount3.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.
	(portfolio3 add: receptiveAccount3) add: portfolio2.

	
	self assert: portfolio3 transactions equals: (portfolio2 transactions union: receptiveAccount3 transactions)
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:16:16' prior: 50579845!
test09EmptyPortfolioHasNotRegisteredATransaction

	transaction1x _ Deposit register: 50 on: receptiveAccount1.
	
	self deny: (portfolio1 hasRegistered: transaction1x) 
	
	
	
	! !

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:16:25'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 receptiveAccount1 receptiveAccount2 receptiveAccount3 transaction1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:25' prior: 50580149!
test09EmptyPortfolioHasNotRegisteredATransaction

	transaction1 _ Deposit register: 50 on: receptiveAccount1.
	
	self deny: (portfolio1 hasRegistered: transaction1) 
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:25' prior: 50579899!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	portfolio3 add: receptiveAccount1.
	portfolio3 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self should: [portfolio2 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:25' prior: 50579964!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	portfolio1 add: receptiveAccount1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self should: [portfolio2 add: receptiveAccount1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1).
							]]
	
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:25' prior: 50579855!
test14CannotAddPortfolioToSamePortfolio

	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self should: [portfolio1 add: portfolio1]  
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							portfolio1 transactions = (Set with: transaction1).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:25' prior: 50579871!
test12CannotAddReceptiveAccountToPortfolioTwice

	portfolio1 _ PortfolioAccount new.
	receptiveAccount1 _ ReceptiveAccount new.
		
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio1 add: receptiveAccount1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1.! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:25' prior: 50579949!
test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount

	portfolio2 add: receptiveAccount1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio1 add: receptiveAccount1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:25' prior: 50578964!
assertThatDoing: aBlock raisesDuplicatedAccountErrorAndDoesntChangePortfolio: aPortfolio
		
	self should: aBlock
		raise: Error
		withExceptionDo: [:anError| self assert: [
							anError messageText = PortfolioAccount duplicatedAccountErrorMessage.
							aPortfolio transactions = (Set with: transaction1).
							]]
	
	
	! !
!PortfolioAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:16:25' prior: 50580074!
test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction

	transaction1 _ Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.

	
	self assert: (portfolio2 hasRegistered: transaction1)
	
	
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:17:06' prior: 50580216!
test14CannotAddPortfolioToSamePortfolio

	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio1 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:17:08'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:17:08'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:17:48' prior: 50580198!
test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio

	portfolio1 add: receptiveAccount1.
	portfolio1 add: portfolio2.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: receptiveAccount1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	
	
	
	! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:17:49'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:17:49'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:18:08' prior: 50580178!
test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount

	portfolio3 add: receptiveAccount1.
	portfolio3 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:18:08'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:18:08'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:19:26' prior: 50580111!
test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance

	Deposit register: 50  on: receptiveAccount1 .
	Withdraw register: 20 on: receptiveAccount2 .
	Deposit register: 30 on: receptiveAccount3.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.
	(portfolio3 add: receptiveAccount3) add: portfolio2.
	
	self assert: portfolio3 balance equals: portfolio2 balance + receptiveAccount3 balance
	
	
	
	! !

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:19:26'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:19:26'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:19:34' prior: 50580024!
test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.

	self assert: portfolio2 transactions equals: (portfolio1 transactions union: receptiveAccount2 transactions) 
	
	
	! !

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:19:35'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:19:35'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:19:38' prior: 50580130!
test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions

	Deposit register: 50  on: receptiveAccount1.
	Withdraw register: 20 on: receptiveAccount2.
	Deposit register: 30 on: receptiveAccount3.
	
	portfolio1 add: receptiveAccount1.
	(portfolio2 add: receptiveAccount2) add: portfolio1.
	(portfolio3 add: receptiveAccount3) add: portfolio2.
	
	self assert: portfolio3 transactions equals: (portfolio2 transactions union: receptiveAccount3 transactions)
	
	
	
	! !

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:19:38'!
PASSED!

TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: 'accountx'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:19:57'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: 'accountx'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:20:05' prior: 50567098!
test01ReceptiveAccountHasZeroAsBalanceWhenCreated 

	self assert: 0 equals: accountx balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 12:20:05'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:20:31' overrides: 16961394!
setUp

	accountx _ ReceptiveAccount new.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 12:20:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:20:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:20:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 12:20:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 12:20:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 12:20:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 12:20:37'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:20:46' prior: 50567105!
test02DepositIncreasesBalanceOnTransactionValue 

	Deposit register: 100 on: accountx.
		
	self assert: 100 equals: accountx balance.
! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:20:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:20:48'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:20:55' prior: 50567114!
test03WithdrawDecreasesBalanceOnTransactionValue 

	Deposit register: 100 on: accountx.
	Withdraw register: 50 on: accountx.
		
	self assert: 50 equals: accountx balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:21:04' prior: 50567124!
test04WithdrawValueMustBePositive 

	| withdrawValue |
	
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: accountx) value
! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 12:21:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 12:21:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:21:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:21:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 12:21:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 12:21:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 12:21:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 12:21:05'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:22:39' prior: 50567134!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	accountx := ReceptiveAccount new.
	deposit := Deposit register: 100 on: accountx.
	withdraw := Withdraw register: 50 on: accountx.
		
	self assert: (accountx hasRegistered: deposit).
	self assert: (accountx hasRegistered: withdraw).
! !

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 12:22:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 12:22:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:22:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:22:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 12:22:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 12:22:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 12:22:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 12:22:40'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:22:51' prior: 50567147!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (accountx hasRegistered: deposit).
	self deny: (accountx hasRegistered:withdraw).
! !

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 12:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 12:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 12:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 12:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 12:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 12:22:51'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:23:06' prior: 50567159!
test07AccountKnowsItsTransactions 

	| deposit1 |
	
	deposit1 := Deposit register: 50 on: accountx.
		
	self assert: 1 equals: accountx transactions size.
	self assert: (accountx transactions includes: deposit1).
! !

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 12:23:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 12:23:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:23:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:23:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 12:23:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 12:23:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 12:23:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 12:23:07'!
PASSED!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 'LM 10/17/2022 12:23:13'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:23:13' prior: 50580877!
test02DepositIncreasesBalanceOnTransactionValue 

	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:23:13' prior: 50581026!
test07AccountKnowsItsTransactions 

	| deposit1 |
	
	deposit1 := Deposit register: 50 on: account.
		
	self assert: 1 equals: account transactions size.
	self assert: (account transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:23:13' prior: 50580984!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:23:13' prior: 50580940!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:23:13' prior: 50580901!
test04WithdrawValueMustBePositive 

	| withdrawValue |
	
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:23:13' prior: 50580846 overrides: 16961394!
setUp

	account _ ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:23:13' prior: 50580836!
test01ReceptiveAccountHasZeroAsBalanceWhenCreated 

	self assert: 0 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LM 10/17/2022 12:23:13' prior: 50580892!
test03WithdrawDecreasesBalanceOnTransactionValue 

	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 12:23:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:23:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:23:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 12:23:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 12:23:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 12:23:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 12:23:15'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:23:17'!
PASSED!

----SNAPSHOT----(17 October 2022 12:23:20) CuisUniversity-5481.image priorSource: 7936311!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:24:25'!
test06ReceptiveAccountDoesNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !

!methodRemoval: ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 12:24:25'!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
!

----SNAPSHOT----(17 October 2022 12:25:15) CuisUniversity-5481.image priorSource: 7986932!

----SNAPSHOT----(17 October 2022 12:26:49) CuisUniversity-5481.image priorSource: 7987718!

----STARTUP---- (17 October 2022 12:28:39) as C:\Lautaro Disco C\Programas Varios\CuisUniversity\CuisUniversity-5481.image!

!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LM 10/17/2022 12:29:00' prior: 50581083!
test07AccountKnowsItsTransactions 

	| deposit |
	
	deposit := Deposit register: 50 on: account.
		
	self assert: 1 equals: account transactions size.
	self assert: (account transactions includes: deposit).
! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'LM 10/17/2022 12:29:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'LM 10/17/2022 12:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LM 10/17/2022 12:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LM 10/17/2022 12:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LM 10/17/2022 12:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoesNotKnowNotRegisteredTransactions stamp: 'LM 10/17/2022 12:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LM 10/17/2022 12:29:03'!
PASSED!

----SNAPSHOT----(17 October 2022 12:29:06) CuisUniversity-5481.image priorSource: 7987810!

----QUIT----(17 October 2022 12:29:12) CuisUniversity-5481.image priorSource: 7991389!

----STARTUP---- (17 October 2022 13:29:24) as /home/vicente/Escritorio/linux64/CuisUniversity-5481.image!


!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 'VV 10/17/2022 13:32:10'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:32:10' prior: 50581075!
test02DepositIncreasesBalanceOnTransactionValue 

	Deposit register: 100 on: receptiveAccount.
		
	self assert: 100 equals: receptiveAccount balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:32:10' prior: 50581245!
test06ReceptiveAccountDoesNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (receptiveAccount hasRegistered: deposit).
	self deny: (receptiveAccount hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:32:10' prior: 50581277!
test07AccountKnowsItsTransactions 

	| deposit |
	
	deposit := Deposit register: 50 on: receptiveAccount.
		
	self assert: 1 equals: receptiveAccount transactions size.
	self assert: (receptiveAccount transactions includes: deposit).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:32:10' prior: 50581104!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	receptiveAccount := ReceptiveAccount new.
	deposit := Deposit register: 100 on: receptiveAccount.
	withdraw := Withdraw register: 50 on: receptiveAccount.
		
	self assert: (receptiveAccount hasRegistered: deposit).
	self assert: (receptiveAccount hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:32:10' prior: 50581117!
test04WithdrawValueMustBePositive 

	| withdrawValue |
	
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: receptiveAccount) value
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:32:10' prior: 50581127 overrides: 16961394!
setUp

	receptiveAccount _ ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:32:10' prior: 50581132!
test01ReceptiveAccountHasZeroAsBalanceWhenCreated 

	self assert: 0 equals: receptiveAccount balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:32:11' prior: 50581139!
test03WithdrawDecreasesBalanceOnTransactionValue 

	Deposit register: 100 on: receptiveAccount.
	Withdraw register: 50 on: receptiveAccount.
		
	self assert: 50 equals: receptiveAccount balance.
! !
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 13:43:09'!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAccount: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isAChildOfAncestor: anAccount])
		or:
		(self = anAccount)
		
		"Lo importante es la buena onda"! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:43:09' prior: 50573854!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAccount: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount]) or: 
		(self = anAccount)! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:43:09' prior: 50573761!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAccount: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
		or:
		(self = anAccount)
		
		"Lo importante es la buena onda"! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 13:43:09' prior: 50581478!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAccount: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
		or:
		(self = anAccount)
		
		"Lo importante es la buena onda"! !

!methodRemoval: PortfolioAccount #isAChildOfAncestor: stamp: 'VV 10/17/2022 13:43:09'!
isAChildOfAncestor: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAccount: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
		or:
		(self = anAccount)
		
		"Lo importante es la buena onda"!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 13:44:13' prior: 50573932!
containsAccount: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
									or: [anAccount allAccounts includes: account]])
									or: (self = anAccount)! !
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 13:44:34' prior: 50581491!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAccount: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount]) or: 
		(self = anAccount)! !
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 14:32:07' prior: 50581549!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAccount: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount]) "or: 
		(self = anAccount)"! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 14:32:08'!
FAILURE!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 14:32:08'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 14:32:08'!
FAILURE!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 14:32:23' prior: 50581559!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAccount: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount]) or: 
		(self = anAccount)! !
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 14:35:37' prior: 50581540!
containsAccount: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
									or: [account allAccounts includes: anAccount]])
									or: (self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 14:35:39'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 14:35:39'!
PASSED!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'LM 10/16/2022 12:12:46' prior: 50581652!
containsAccount: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
										or: [anAccount allAccounts includes: account]])
		or: (self = anAccount)! !
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 14:37:54' prior: 50581730!
containsAccount: anAccount

	^ (accounts anySatisfy: [:account| 			account = anAccount 
										or: [anAccount allAccounts includes: account]])
										or: (self = anAccount)! !

----End fileIn of /home/vicente/Escritorio/linux64/Packages/TerseGuide.pck.st----!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:02:01' prior: 50581739!
containsAccount: anAccount
	|allAccountsOfSelf|
	allAccountsOfSelf _ self allAccounts .
	
	
	^ (anAccount allAccounts anySatisfy: [:aChildrenOfAnAccount|
			(allAccountsOfSelf includes: aChildrenOfAnAccount) or: self = aChildrenOfAnAccount		]
		) or: (allAccountsOfSelf includes: anAccount).
		
		! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:02:04'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:02:04'!
PASSED!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:02:49'!
containsAnyAccountFromAccount: anAccount
	|allAccountsOfSelf|
	allAccountsOfSelf _ self allAccounts .
	
	
	^ (anAccount allAccounts anySatisfy: [:aChildrenOfAnAccount|
			(allAccountsOfSelf includes: aChildrenOfAnAccount) or: self = aChildrenOfAnAccount		]
		) or: (allAccountsOfSelf includes: anAccount).
		
		! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'VV 10/17/2022 15:02:49'!
containsAnyAccountFromAccount: anAccount

	^self = anAccount! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:02:49' prior: 50581514!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount) or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
		or:
		(self = anAccount)
		
		"Lo importante es la buena onda"! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:02:49' prior: 50581642!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAnyAccountFromAccount: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount]) or: 
		(self = anAccount)! !

!methodRemoval: PortfolioAccount #containsAccount: stamp: 'VV 10/17/2022 15:02:49'!
containsAccount: anAccount
	|allAccountsOfSelf|
	allAccountsOfSelf _ self allAccounts .
	
	
	^ (anAccount allAccounts anySatisfy: [:aChildrenOfAnAccount|
			(allAccountsOfSelf includes: aChildrenOfAnAccount) or: self = aChildrenOfAnAccount		]
		) or: (allAccountsOfSelf includes: anAccount).
		
		!

!methodRemoval: ReceptiveAccount #containsAccount: stamp: 'VV 10/17/2022 15:02:49'!
containsAccount: anAccount

	^self = anAccount!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:04:31' prior: 50584767!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
		or: [anAccount allAccounts includes: account]]) 
		or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
		or:
		(self = anAccount)
		
		"Lo importante es la buena onda"! !
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:04:45' prior: 50584808!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
		or: [anAccount allAccounts includes: account]]) 
		or: (parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
		or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !

----SNAPSHOT----(17 October 2022 15:06:15) CuisUniversity-5481.image priorSource: 7991481!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:09:19' prior: 50584781!
cannotAdd: anAccount

	^	"(accounts anySatisfy: [:account| account containsAnyAccountFromAccount: anAccount])   or: "
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount]) or: 
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:09:20'!
FAILURE!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:09:20'!
FAILURE!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:09:20'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:09:20'!
PASSED!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:09:35' prior: 50584839!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAnyAccountFromAccount: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount]) or: 
		(self = anAccount)! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:09:36'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:09:36'!
PASSED!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:11:55' prior: 50584822!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			]) 
			or: (parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:11:56'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:11:56'!
FAILURE!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:11:56'!
FAILURE!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:12:15' prior: 50584998!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
		or: [anAccount allAccounts includes: account]]) 
		or: (parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
		or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:12:16'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:12:16'!
PASSED!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:12:20' prior: 50585085!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !
!Behavior method!
initialize
	#_coverageTracker6246443_ markAsExecuted.
	#_coverageTracker6246443_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ #_coverageTracker6246443_
				coverAll:
					{43 to: 45}
				evaluating: [
					(#_coverageTracker6246443_
						coverAll:
							{25 to: 41}
						by: OrderedCollection) new ]).
	#_coverageTracker6246443_
		coverAll:
			{55 to: 64}
		evaluating: [ super initialize ].! !
!Behavior method!
initialize
	#_coverageTracker6246551_ markAsExecuted.
	#_coverageTracker6246551_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(parents _ #_coverageTracker6246551_
				coverAll:
					{42 to: 44}
				evaluating: [
					(#_coverageTracker6246551_
						coverAll:
							{24 to: 40}
						by: OrderedCollection) new ]).! !
!Behavior method!
initialize
	#_coverageTracker6246570_ markAsExecuted.
	#_coverageTracker6246570_
		cover: (14 to: 25)
		declaredAt: (14 to: 25)
		by:
			(transactions _ #_coverageTracker6246570_
				coverAll:
					{34 to: 36}
				evaluating: [
					(#_coverageTracker6246570_
						coverAll:
							{30 to: 32}
						by: Set) new ]).
	#_coverageTracker6246570_
		coverAll:
			{46 to: 55}
		evaluating: [ super initialize ].! !
!Behavior method!
balance
	#_coverageTracker6246680_ markAsExecuted.
	^ #_coverageTracker6246680_
		coverAll:
			{21 to: 24. 61 to: 68}
		evaluating: [
			(#_coverageTracker6246680_
				cover: (12 to: 19)
				declaredAt: (12 to: 19)
				by: accounts)
				sum: [ :bankEntity |
					#_coverageTracker6246680_
						coverAll:
							{52 to: 58}
						evaluating: [
							(#_coverageTracker6246680_
								cover: (41 to: 50)
								declaredAt: (28 to: 37)
								by: bankEntity) balance ]]
				ifEmpty: [
					#_coverageTracker6246680_
						coverAll:
							{71 to: 71}
						byLiteralOrPseudoVariable: 0 ]].! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker6246516_ markAsExecuted.
	#_coverageTracker6246516_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ #_coverageTracker6246516_
				coverAll:
					{71 to: 74}
				evaluating: [
					(#_coverageTracker6246516_
						coverAll:
							{66 to: 69}
						byLiteralOrPseudoVariable: self) for:
						(#_coverageTracker6246516_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]).
	#_coverageTracker6246516_
		coverAll:
			{93 to: 101}
		evaluating: [
			(#_coverageTracker6246516_
				cover: (85 to: 91)
				declaredAt: (22 to: 28)
				by: account) register:
				(#_coverageTracker6246516_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ].
	^ #_coverageTracker6246516_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
for: aValue
	#_coverageTracker6246649_ markAsExecuted.
	^ #_coverageTracker6246649_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker6246649_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker6246649_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker6246649_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker6246637_ markAsExecuted.
	#_coverageTracker6246637_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker6246637_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
register: aTransaction
	#_coverageTracker6246553_ markAsExecuted.
	#_coverageTracker6246553_
		coverAll:
			{39 to: 42}
		evaluating: [
			(#_coverageTracker6246553_
				cover: (26 to: 37)
				declaredAt: (26 to: 37)
				by: transactions) add:
				(#_coverageTracker6246553_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ].! !
!Behavior method!
add: anAccount
	#_coverageTracker6246501_ markAsExecuted.
	#_coverageTracker6246501_
		coverAll:
			{46 to: 52}
		evaluating: [
			(#_coverageTracker6246501_
				coverAll:
					{24 to: 33}
				evaluating: [
					(#_coverageTracker6246501_
						coverAll:
							{19 to: 22}
						byLiteralOrPseudoVariable: self) cannotAdd:
						(#_coverageTracker6246501_
							cover: (35 to: 43)
							declaredAt: (6 to: 14)
							by: anAccount) ]) ifTrue: [
				#_coverageTracker6246501_
					coverAll:
						{60 to: 65}
					evaluating: [
						(#_coverageTracker6246501_
							coverAll:
								{55 to: 58}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker6246501_
								coverAll:
									{78 to: 106}
								evaluating: [
									(#_coverageTracker6246501_
										coverAll:
											{72 to: 76}
										evaluating: [
											(#_coverageTracker6246501_
												coverAll:
													{67 to: 70}
												byLiteralOrPseudoVariable: self) class ]) duplicatedAccountErrorMessage ]) ]]].
	#_coverageTracker6246501_
		coverAll:
			{122 to: 125}
		evaluating: [
			(#_coverageTracker6246501_
				cover: (113 to: 120)
				declaredAt: (113 to: 120)
				by: accounts) add:
				(#_coverageTracker6246501_
					cover: (127 to: 135)
					declaredAt: (6 to: 14)
					by: anAccount) ].
	#_coverageTracker6246501_
		coverAll:
			{149 to: 158}
		evaluating: [
			(#_coverageTracker6246501_
				cover: (139 to: 147)
				declaredAt: (6 to: 14)
				by: anAccount) addParent:
				(#_coverageTracker6246501_
					coverAll:
						{160 to: 163}
					byLiteralOrPseudoVariable: self) ].! !
!Behavior method!
cannotAdd: anAccount
	#_coverageTracker6246472_ markAsExecuted.
	^ #_coverageTracker6246472_
		coverAll:
			{112 to: 114. 198 to: 200}
		evaluating: [
			(#_coverageTracker6246472_
				coverAll:
					{36 to: 46}
				evaluating: [
					(#_coverageTracker6246472_
						cover: (27 to: 34)
						declaredAt: (27 to: 34)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker6246472_
							coverAll:
								{67 to: 96}
							evaluating: [
								(#_coverageTracker6246472_
									cover: (59 to: 65)
									declaredAt: (50 to: 56)
									by: account) containsAnyAccountFromAccount:
									(#_coverageTracker6246472_
										cover: (98 to: 106)
										declaredAt: (12 to: 20)
										by: anAccount) ]]])
				or:
					(#_coverageTracker6246472_
						coverAll:
							{128 to: 138}
						evaluating: [
							(#_coverageTracker6246472_
								cover: (120 to: 126)
								declaredAt: (120 to: 126)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker6246472_
									coverAll:
										{159 to: 184}
									evaluating: [
										(#_coverageTracker6246472_
											cover: (151 to: 157)
											declaredAt: (142 to: 148)
											by: aParent) isInAHigherLevelPortfolio:
											(#_coverageTracker6246472_
												cover: (186 to: 194)
												declaredAt: (12 to: 20)
												by: anAccount) ]]])
				or:
					(#_coverageTracker6246472_
						coverAll:
							{211 to: 211}
						evaluating: [
							(#_coverageTracker6246472_
								coverAll:
									{206 to: 209}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker6246472_
									cover: (213 to: 221)
									declaredAt: (12 to: 20)
									by: anAccount) ]) ].! !
!Behavior method!
addParent: aPortfolioAccount
	#_coverageTracker6246455_ markAsExecuted.
	#_coverageTracker6246455_
		coverAll:
			{41 to: 44}
		evaluating: [
			(#_coverageTracker6246455_
				cover: (33 to: 39)
				declaredAt: (33 to: 39)
				by: parents) add:
				(#_coverageTracker6246455_
					cover: (46 to: 62)
					declaredAt: (12 to: 28)
					by: aPortfolioAccount) ].! !
!Behavior method!
balance
	#_coverageTracker6246651_ markAsExecuted.
	^ #_coverageTracker6246651_
		coverAll:
			{25 to: 31. 35 to: 39}
		evaluating: [
			(#_coverageTracker6246651_
				cover: (12 to: 23)
				declaredAt: (12 to: 23)
				by: transactions)
				inject:
					(#_coverageTracker6246651_
						coverAll:
							{33 to: 33}
						byLiteralOrPseudoVariable: 0)
				into: [ :balance :aTransaction |
					#_coverageTracker6246651_
						coverAll:
							{78 to: 92}
						evaluating: [
							(#_coverageTracker6246651_
								cover: (65 to: 76)
								declaredAt: (51 to: 62)
								by: aTransaction) applyToBalance:
								(#_coverageTracker6246651_
									cover: (94 to: 100)
									declaredAt: (42 to: 48)
									by: balance) ]]].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker6246436_ markAsExecuted.
	^ #_coverageTracker6246436_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker6246436_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) +
				(#_coverageTracker6246436_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!Behavior method!
for: aValue
	#_coverageTracker6246574_ markAsExecuted.
	^ #_coverageTracker6246574_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker6246574_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker6246574_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker6246574_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker6246568_ markAsExecuted.
	#_coverageTracker6246568_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker6246568_
				cover: (35 to: 40)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
containsAnyAccountFromAccount: anAccount
	#_coverageTracker6246655_ markAsExecuted.
	^ #_coverageTracker6246655_
		coverAll:
			{50 to: 50}
		evaluating: [
			(#_coverageTracker6246655_
				coverAll:
					{45 to: 48}
				byLiteralOrPseudoVariable: self) =
				(#_coverageTracker6246655_
					cover: (52 to: 60)
					declaredAt: (32 to: 40)
					by: anAccount) ].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker6246660_ markAsExecuted.
	^ #_coverageTracker6246660_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker6246660_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) -
				(#_coverageTracker6246660_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:13:31'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker6246495_ markAsExecuted.
	^ #_coverageTracker6246495_
		coverAll:
			{29 to: 35. 45 to: 49}
		evaluating: [
			(#_coverageTracker6246495_
				cover: (20 to: 27)
				declaredAt: (20 to: 27)
				by: accounts)
				inject:
					(#_coverageTracker6246495_
						coverAll:
							{41 to: 43}
						evaluating: [
							(#_coverageTracker6246495_
								coverAll:
									{37 to: 39}
								by: Set) new ])
				into: [ :transactionsSoFar :bankEntity |
					#_coverageTracker6246495_
						coverAll:
							{101 to: 106}
						evaluating: [
							(#_coverageTracker6246495_
								cover: (83 to: 99)
								declaredAt: (52 to: 68)
								by: transactionsSoFar) union:
								(#_coverageTracker6246495_
									coverAll:
										{119 to: 130}
									evaluating: [
										(#_coverageTracker6246495_
											cover: (108 to: 117)
											declaredAt: (71 to: 80)
											by: bankEntity) transactions ]) ]]].! !

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker6246524_ markAsExecuted.
	^ #_coverageTracker6246524_
		coverAll:
			{32 to: 35}
		evaluating: [
			(#_coverageTracker6246524_
				cover: (19 to: 30)
				declaredAt: (19 to: 30)
				by: transactions) copy ].! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:13:31'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:13:31'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker6246634_ markAsExecuted.
	^ #_coverageTracker6246634_
		coverAll:
			{42 to: 52}
		evaluating: [
			(#_coverageTracker6246634_
				cover: (33 to: 40)
				declaredAt: (33 to: 40)
				by: accounts) anySatisfy: [ :bankEntity |
				#_coverageTracker6246634_
					coverAll:
						{79 to: 92}
					evaluating: [
						(#_coverageTracker6246634_
							cover: (68 to: 77)
							declaredAt: (56 to: 65)
							by: bankEntity) hasRegistered:
							(#_coverageTracker6246634_
								cover: (94 to: 105)
								declaredAt: (16 to: 27)
								by: aTransaction) ]]].! !

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker6246520_ markAsExecuted.
	^ #_coverageTracker6246520_
		coverAll:
			{46 to: 54}
		evaluating: [
			(#_coverageTracker6246520_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: transactions) includes:
				(#_coverageTracker6246520_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ].! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:13:31'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!Behavior method!
duplicatedAccountErrorMessage
	#_coverageTracker6246624_ markAsExecuted.
	^ #_coverageTracker6246624_
		coverAll:
			{34 to: 77}
		byLiteralOrPseudoVariable: 'Can not add duplicated account to porfolio'.! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!Behavior method!
containsAnyAccountFromAccount: anAccount
	| allAccountsOfSelf |
	#_coverageTracker6246541_ markAsExecuted.
	#_coverageTracker6246541_
		cover: (64 to: 80)
		declaredAt: (44 to: 60)
		by:
			(allAccountsOfSelf _ #_coverageTracker6246541_
				coverAll:
					{89 to: 99}
				evaluating: [
					(#_coverageTracker6246541_
						coverAll:
							{84 to: 87}
						byLiteralOrPseudoVariable: self) allAccounts ]).
	^ #_coverageTracker6246541_
		coverAll:
			{262 to: 264}
		evaluating: [
			(#_coverageTracker6246541_
				coverAll:
					{133 to: 143}
				evaluating: [
					(#_coverageTracker6246541_
						coverAll:
							{121 to: 131}
						evaluating: [
							(#_coverageTracker6246541_
								cover: (111 to: 119)
								declaredAt: (32 to: 40)
								by: anAccount) allAccounts ]) anySatisfy: [ :aChildrenOfAnAccount |
						#_coverageTracker6246541_
							coverAll:
								{223 to: 225}
							evaluating: [
								(#_coverageTracker6246541_
									coverAll:
										{191 to: 199}
									evaluating: [
										(#_coverageTracker6246541_
											cover: (173 to: 189)
											declaredAt: (44 to: 60)
											by: allAccountsOfSelf) includes:
											(#_coverageTracker6246541_
												cover: (201 to: 220)
												declaredAt: (147 to: 166)
												by: aChildrenOfAnAccount) ]) or:
									(#_coverageTracker6246541_
										coverAll:
											{232 to: 232}
										evaluating: [
											(#_coverageTracker6246541_
												coverAll:
													{227 to: 230}
												byLiteralOrPseudoVariable: self) =
												(#_coverageTracker6246541_
													cover: (234 to: 253)
													declaredAt: (147 to: 166)
													by: aChildrenOfAnAccount) ]) ]]]) or:
				(#_coverageTracker6246541_
					coverAll:
						{285 to: 293}
					evaluating: [
						(#_coverageTracker6246541_
							cover: (267 to: 283)
							declaredAt: (44 to: 60)
							by: allAccountsOfSelf) includes:
							(#_coverageTracker6246541_
								cover: (295 to: 303)
								declaredAt: (32 to: 40)
								by: anAccount) ]) ].! !
!Behavior method!
allAccounts
	#_coverageTracker6246532_ markAsExecuted.
	^ #_coverageTracker6246532_
		coverAll:
			{25 to: 31. 41 to: 45}
		evaluating: [
			(#_coverageTracker6246532_
				cover: (16 to: 23)
				declaredAt: (16 to: 23)
				by: accounts)
				inject:
					(#_coverageTracker6246532_
						coverAll:
							{37 to: 39}
						evaluating: [
							(#_coverageTracker6246532_
								coverAll:
									{33 to: 35}
								by: Set) new ])
				into: [ :allAccountsSoFar :account |
					#_coverageTracker6246532_
						coverAll:
							{93 to: 96}
						evaluating: [
							(#_coverageTracker6246532_
								cover: (76 to: 91)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) add:
								(#_coverageTracker6246532_
									cover: (98 to: 104)
									declaredAt: (67 to: 73)
									by: account) ].
					#_coverageTracker6246532_
						coverAll:
							{124 to: 129}
						evaluating: [
							(#_coverageTracker6246532_
								cover: (107 to: 122)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) union:
								(#_coverageTracker6246532_
									coverAll:
										{139 to: 149}
									evaluating: [
										(#_coverageTracker6246532_
											cover: (131 to: 137)
											declaredAt: (67 to: 73)
											by: account) allAccounts ]) ]]].! !
!Behavior method!
allAccounts
	#_coverageTracker6246512_ markAsExecuted.
	^ #_coverageTracker6246512_
		coverAll:
			{20 to: 24}
		evaluating: [
			(#_coverageTracker6246512_
				coverAll:
					{16 to: 18}
				by: Set) with:
				(#_coverageTracker6246512_
					coverAll:
						{26 to: 29}
					byLiteralOrPseudoVariable: self) ].! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:13:31'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!Behavior method!
isInAHigherLevelPortfolio: anAccount
	#_coverageTracker6246482_ markAsExecuted.
	^ #_coverageTracker6246482_
		coverAll:
			{182 to: 184. 268 to: 270}
		evaluating: [
			(#_coverageTracker6246482_
				coverAll:
					{53 to: 63}
				evaluating: [
					(#_coverageTracker6246482_
						cover: (44 to: 51)
						declaredAt: (44 to: 51)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker6246482_
							coverAll:
								{130 to: 132}
							evaluating: [
								(#_coverageTracker6246482_
									coverAll:
										{85 to: 114}
									evaluating: [
										(#_coverageTracker6246482_
											cover: (77 to: 83)
											declaredAt: (67 to: 73)
											by: account) containsAnyAccountFromAccount:
											(#_coverageTracker6246482_
												cover: (116 to: 124)
												declaredAt: (28 to: 36)
												by: anAccount) ]) or: [
									#_coverageTracker6246482_
										coverAll:
											{157 to: 165}
										evaluating: [
											(#_coverageTracker6246482_
												coverAll:
													{145 to: 155}
												evaluating: [
													(#_coverageTracker6246482_
														cover: (135 to: 143)
														declaredAt: (28 to: 36)
														by: anAccount) allAccounts ]) includes:
												(#_coverageTracker6246482_
													cover: (167 to: 173)
													declaredAt: (67 to: 73)
													by: account) ]]]]])
				or:
					(#_coverageTracker6246482_
						coverAll:
							{195 to: 205}
						evaluating: [
							(#_coverageTracker6246482_
								cover: (187 to: 193)
								declaredAt: (187 to: 193)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker6246482_
									coverAll:
										{226 to: 251}
									evaluating: [
										(#_coverageTracker6246482_
											cover: (218 to: 224)
											declaredAt: (209 to: 215)
											by: aParent) isInAHigherLevelPortfolio:
											(#_coverageTracker6246482_
												cover: (253 to: 261)
												declaredAt: (28 to: 36)
												by: anAccount) ]]])
				or:
					(#_coverageTracker6246482_
						coverAll:
							{278 to: 278}
						evaluating: [
							(#_coverageTracker6246482_
								coverAll:
									{273 to: 276}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker6246482_
									cover: (280 to: 288)
									declaredAt: (28 to: 36)
									by: anAccount) ])
			"Lo importante es la buena onda" ].! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:13:31'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:13:31'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:18:14'!
test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount
	|portfolio4|
	portfolio4 _ PortfolioAccount new.
	portfolio4 add: portfolio3.
	portfolio3 add: receptiveAccount1.
	portfolio3 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:18:15'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:18:15'!
PASSED!
!Behavior method!
initialize
	#_coverageTracker6538140_ markAsExecuted.
	#_coverageTracker6538140_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ #_coverageTracker6538140_
				coverAll:
					{43 to: 45}
				evaluating: [
					(#_coverageTracker6538140_
						coverAll:
							{25 to: 41}
						by: OrderedCollection) new ]).
	#_coverageTracker6538140_
		coverAll:
			{55 to: 64}
		evaluating: [ super initialize ].! !
!Behavior method!
initialize
	#_coverageTracker6538334_ markAsExecuted.
	#_coverageTracker6538334_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(parents _ #_coverageTracker6538334_
				coverAll:
					{42 to: 44}
				evaluating: [
					(#_coverageTracker6538334_
						coverAll:
							{24 to: 40}
						by: OrderedCollection) new ]).! !
!Behavior method!
initialize
	#_coverageTracker6538352_ markAsExecuted.
	#_coverageTracker6538352_
		cover: (14 to: 25)
		declaredAt: (14 to: 25)
		by:
			(transactions _ #_coverageTracker6538352_
				coverAll:
					{34 to: 36}
				evaluating: [
					(#_coverageTracker6538352_
						coverAll:
							{30 to: 32}
						by: Set) new ]).
	#_coverageTracker6538352_
		coverAll:
			{46 to: 55}
		evaluating: [ super initialize ].! !
!Behavior method!
balance
	#_coverageTracker6538415_ markAsExecuted.
	^ #_coverageTracker6538415_
		coverAll:
			{21 to: 24. 61 to: 68}
		evaluating: [
			(#_coverageTracker6538415_
				cover: (12 to: 19)
				declaredAt: (12 to: 19)
				by: accounts)
				sum: [ :bankEntity |
					#_coverageTracker6538415_
						coverAll:
							{52 to: 58}
						evaluating: [
							(#_coverageTracker6538415_
								cover: (41 to: 50)
								declaredAt: (28 to: 37)
								by: bankEntity) balance ]]
				ifEmpty: [
					#_coverageTracker6538415_
						coverAll:
							{71 to: 71}
						byLiteralOrPseudoVariable: 0 ]].! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:18:23'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker6538300_ markAsExecuted.
	#_coverageTracker6538300_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ #_coverageTracker6538300_
				coverAll:
					{71 to: 74}
				evaluating: [
					(#_coverageTracker6538300_
						coverAll:
							{66 to: 69}
						byLiteralOrPseudoVariable: self) for:
						(#_coverageTracker6538300_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]).
	#_coverageTracker6538300_
		coverAll:
			{93 to: 101}
		evaluating: [
			(#_coverageTracker6538300_
				cover: (85 to: 91)
				declaredAt: (22 to: 28)
				by: account) register:
				(#_coverageTracker6538300_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ].
	^ #_coverageTracker6538300_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
for: aValue
	#_coverageTracker6538382_ markAsExecuted.
	^ #_coverageTracker6538382_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker6538382_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker6538382_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker6538382_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker6538371_ markAsExecuted.
	#_coverageTracker6538371_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker6538371_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
register: aTransaction
	#_coverageTracker6538336_ markAsExecuted.
	#_coverageTracker6538336_
		coverAll:
			{39 to: 42}
		evaluating: [
			(#_coverageTracker6538336_
				cover: (26 to: 37)
				declaredAt: (26 to: 37)
				by: transactions) add:
				(#_coverageTracker6538336_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ].! !
!Behavior method!
add: anAccount
	#_coverageTracker6538286_ markAsExecuted.
	#_coverageTracker6538286_
		coverAll:
			{46 to: 52}
		evaluating: [
			(#_coverageTracker6538286_
				coverAll:
					{24 to: 33}
				evaluating: [
					(#_coverageTracker6538286_
						coverAll:
							{19 to: 22}
						byLiteralOrPseudoVariable: self) cannotAdd:
						(#_coverageTracker6538286_
							cover: (35 to: 43)
							declaredAt: (6 to: 14)
							by: anAccount) ]) ifTrue: [
				#_coverageTracker6538286_
					coverAll:
						{60 to: 65}
					evaluating: [
						(#_coverageTracker6538286_
							coverAll:
								{55 to: 58}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker6538286_
								coverAll:
									{78 to: 106}
								evaluating: [
									(#_coverageTracker6538286_
										coverAll:
											{72 to: 76}
										evaluating: [
											(#_coverageTracker6538286_
												coverAll:
													{67 to: 70}
												byLiteralOrPseudoVariable: self) class ]) duplicatedAccountErrorMessage ]) ]]].
	#_coverageTracker6538286_
		coverAll:
			{122 to: 125}
		evaluating: [
			(#_coverageTracker6538286_
				cover: (113 to: 120)
				declaredAt: (113 to: 120)
				by: accounts) add:
				(#_coverageTracker6538286_
					cover: (127 to: 135)
					declaredAt: (6 to: 14)
					by: anAccount) ].
	#_coverageTracker6538286_
		coverAll:
			{149 to: 158}
		evaluating: [
			(#_coverageTracker6538286_
				cover: (139 to: 147)
				declaredAt: (6 to: 14)
				by: anAccount) addParent:
				(#_coverageTracker6538286_
					coverAll:
						{160 to: 163}
					byLiteralOrPseudoVariable: self) ].! !
!Behavior method!
cannotAdd: anAccount
	#_coverageTracker6538257_ markAsExecuted.
	^ #_coverageTracker6538257_
		coverAll:
			{112 to: 114. 198 to: 200}
		evaluating: [
			(#_coverageTracker6538257_
				coverAll:
					{36 to: 46}
				evaluating: [
					(#_coverageTracker6538257_
						cover: (27 to: 34)
						declaredAt: (27 to: 34)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker6538257_
							coverAll:
								{67 to: 96}
							evaluating: [
								(#_coverageTracker6538257_
									cover: (59 to: 65)
									declaredAt: (50 to: 56)
									by: account) containsAnyAccountFromAccount:
									(#_coverageTracker6538257_
										cover: (98 to: 106)
										declaredAt: (12 to: 20)
										by: anAccount) ]]])
				or:
					(#_coverageTracker6538257_
						coverAll:
							{128 to: 138}
						evaluating: [
							(#_coverageTracker6538257_
								cover: (120 to: 126)
								declaredAt: (120 to: 126)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker6538257_
									coverAll:
										{159 to: 184}
									evaluating: [
										(#_coverageTracker6538257_
											cover: (151 to: 157)
											declaredAt: (142 to: 148)
											by: aParent) isInAHigherLevelPortfolio:
											(#_coverageTracker6538257_
												cover: (186 to: 194)
												declaredAt: (12 to: 20)
												by: anAccount) ]]])
				or:
					(#_coverageTracker6538257_
						coverAll:
							{211 to: 211}
						evaluating: [
							(#_coverageTracker6538257_
								coverAll:
									{206 to: 209}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker6538257_
									cover: (213 to: 221)
									declaredAt: (12 to: 20)
									by: anAccount) ]) ].! !
!Behavior method!
addParent: aPortfolioAccount
	#_coverageTracker6538155_ markAsExecuted.
	#_coverageTracker6538155_
		coverAll:
			{41 to: 44}
		evaluating: [
			(#_coverageTracker6538155_
				cover: (33 to: 39)
				declaredAt: (33 to: 39)
				by: parents) add:
				(#_coverageTracker6538155_
					cover: (46 to: 62)
					declaredAt: (12 to: 28)
					by: aPortfolioAccount) ].! !
!Behavior method!
balance
	#_coverageTracker6538386_ markAsExecuted.
	^ #_coverageTracker6538386_
		coverAll:
			{25 to: 31. 35 to: 39}
		evaluating: [
			(#_coverageTracker6538386_
				cover: (12 to: 23)
				declaredAt: (12 to: 23)
				by: transactions)
				inject:
					(#_coverageTracker6538386_
						coverAll:
							{33 to: 33}
						byLiteralOrPseudoVariable: 0)
				into: [ :balance :aTransaction |
					#_coverageTracker6538386_
						coverAll:
							{78 to: 92}
						evaluating: [
							(#_coverageTracker6538386_
								cover: (65 to: 76)
								declaredAt: (51 to: 62)
								by: aTransaction) applyToBalance:
								(#_coverageTracker6538386_
									cover: (94 to: 100)
									declaredAt: (42 to: 48)
									by: balance) ]]].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker6538136_ markAsExecuted.
	^ #_coverageTracker6538136_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker6538136_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) +
				(#_coverageTracker6538136_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:18:23'!
PASSED!
!Behavior method!
for: aValue
	#_coverageTracker6538354_ markAsExecuted.
	^ #_coverageTracker6538354_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker6538354_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker6538354_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker6538354_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker6538350_ markAsExecuted.
	#_coverageTracker6538350_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker6538350_
				cover: (35 to: 40)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
containsAnyAccountFromAccount: anAccount
	#_coverageTracker6538390_ markAsExecuted.
	^ #_coverageTracker6538390_
		coverAll:
			{50 to: 50}
		evaluating: [
			(#_coverageTracker6538390_
				coverAll:
					{45 to: 48}
				byLiteralOrPseudoVariable: self) =
				(#_coverageTracker6538390_
					cover: (52 to: 60)
					declaredAt: (32 to: 40)
					by: anAccount) ].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker6538392_ markAsExecuted.
	^ #_coverageTracker6538392_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker6538392_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) -
				(#_coverageTracker6538392_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:18:23'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:18:23'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker6538279_ markAsExecuted.
	^ #_coverageTracker6538279_
		coverAll:
			{29 to: 35. 45 to: 49}
		evaluating: [
			(#_coverageTracker6538279_
				cover: (20 to: 27)
				declaredAt: (20 to: 27)
				by: accounts)
				inject:
					(#_coverageTracker6538279_
						coverAll:
							{41 to: 43}
						evaluating: [
							(#_coverageTracker6538279_
								coverAll:
									{37 to: 39}
								by: Set) new ])
				into: [ :transactionsSoFar :bankEntity |
					#_coverageTracker6538279_
						coverAll:
							{101 to: 106}
						evaluating: [
							(#_coverageTracker6538279_
								cover: (83 to: 99)
								declaredAt: (52 to: 68)
								by: transactionsSoFar) union:
								(#_coverageTracker6538279_
									coverAll:
										{119 to: 130}
									evaluating: [
										(#_coverageTracker6538279_
											cover: (108 to: 117)
											declaredAt: (71 to: 80)
											by: bankEntity) transactions ]) ]]].! !

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:18:23'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker6538309_ markAsExecuted.
	^ #_coverageTracker6538309_
		coverAll:
			{32 to: 35}
		evaluating: [
			(#_coverageTracker6538309_
				cover: (19 to: 30)
				declaredAt: (19 to: 30)
				by: transactions) copy ].! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:18:23'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:18:23'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:18:23'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker6538367_ markAsExecuted.
	^ #_coverageTracker6538367_
		coverAll:
			{42 to: 52}
		evaluating: [
			(#_coverageTracker6538367_
				cover: (33 to: 40)
				declaredAt: (33 to: 40)
				by: accounts) anySatisfy: [ :bankEntity |
				#_coverageTracker6538367_
					coverAll:
						{79 to: 92}
					evaluating: [
						(#_coverageTracker6538367_
							cover: (68 to: 77)
							declaredAt: (56 to: 65)
							by: bankEntity) hasRegistered:
							(#_coverageTracker6538367_
								cover: (94 to: 105)
								declaredAt: (16 to: 27)
								by: aTransaction) ]]].! !

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:18:23'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker6538305_ markAsExecuted.
	^ #_coverageTracker6538305_
		coverAll:
			{46 to: 54}
		evaluating: [
			(#_coverageTracker6538305_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: transactions) includes:
				(#_coverageTracker6538305_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ].! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:18:23'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:18:23'!
PASSED!
!Behavior method!
duplicatedAccountErrorMessage
	#_coverageTracker6538359_ markAsExecuted.
	^ #_coverageTracker6538359_
		coverAll:
			{34 to: 77}
		byLiteralOrPseudoVariable: 'Can not add duplicated account to porfolio'.! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:18:23'!
PASSED!
!Behavior method!
containsAnyAccountFromAccount: anAccount
	| allAccountsOfSelf |
	#_coverageTracker6538323_ markAsExecuted.
	#_coverageTracker6538323_
		cover: (64 to: 80)
		declaredAt: (44 to: 60)
		by:
			(allAccountsOfSelf _ #_coverageTracker6538323_
				coverAll:
					{89 to: 99}
				evaluating: [
					(#_coverageTracker6538323_
						coverAll:
							{84 to: 87}
						byLiteralOrPseudoVariable: self) allAccounts ]).
	^ #_coverageTracker6538323_
		coverAll:
			{262 to: 264}
		evaluating: [
			(#_coverageTracker6538323_
				coverAll:
					{133 to: 143}
				evaluating: [
					(#_coverageTracker6538323_
						coverAll:
							{121 to: 131}
						evaluating: [
							(#_coverageTracker6538323_
								cover: (111 to: 119)
								declaredAt: (32 to: 40)
								by: anAccount) allAccounts ]) anySatisfy: [ :aChildrenOfAnAccount |
						#_coverageTracker6538323_
							coverAll:
								{223 to: 225}
							evaluating: [
								(#_coverageTracker6538323_
									coverAll:
										{191 to: 199}
									evaluating: [
										(#_coverageTracker6538323_
											cover: (173 to: 189)
											declaredAt: (44 to: 60)
											by: allAccountsOfSelf) includes:
											(#_coverageTracker6538323_
												cover: (201 to: 220)
												declaredAt: (147 to: 166)
												by: aChildrenOfAnAccount) ]) or:
									(#_coverageTracker6538323_
										coverAll:
											{232 to: 232}
										evaluating: [
											(#_coverageTracker6538323_
												coverAll:
													{227 to: 230}
												byLiteralOrPseudoVariable: self) =
												(#_coverageTracker6538323_
													cover: (234 to: 253)
													declaredAt: (147 to: 166)
													by: aChildrenOfAnAccount) ]) ]]]) or:
				(#_coverageTracker6538323_
					coverAll:
						{285 to: 293}
					evaluating: [
						(#_coverageTracker6538323_
							cover: (267 to: 283)
							declaredAt: (44 to: 60)
							by: allAccountsOfSelf) includes:
							(#_coverageTracker6538323_
								cover: (295 to: 303)
								declaredAt: (32 to: 40)
								by: anAccount) ]) ].! !
!Behavior method!
allAccounts
	#_coverageTracker6538315_ markAsExecuted.
	^ #_coverageTracker6538315_
		coverAll:
			{25 to: 31. 41 to: 45}
		evaluating: [
			(#_coverageTracker6538315_
				cover: (16 to: 23)
				declaredAt: (16 to: 23)
				by: accounts)
				inject:
					(#_coverageTracker6538315_
						coverAll:
							{37 to: 39}
						evaluating: [
							(#_coverageTracker6538315_
								coverAll:
									{33 to: 35}
								by: Set) new ])
				into: [ :allAccountsSoFar :account |
					#_coverageTracker6538315_
						coverAll:
							{93 to: 96}
						evaluating: [
							(#_coverageTracker6538315_
								cover: (76 to: 91)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) add:
								(#_coverageTracker6538315_
									cover: (98 to: 104)
									declaredAt: (67 to: 73)
									by: account) ].
					#_coverageTracker6538315_
						coverAll:
							{124 to: 129}
						evaluating: [
							(#_coverageTracker6538315_
								cover: (107 to: 122)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) union:
								(#_coverageTracker6538315_
									coverAll:
										{139 to: 149}
									evaluating: [
										(#_coverageTracker6538315_
											cover: (131 to: 137)
											declaredAt: (67 to: 73)
											by: account) allAccounts ]) ]]].! !
!Behavior method!
allAccounts
	#_coverageTracker6538296_ markAsExecuted.
	^ #_coverageTracker6538296_
		coverAll:
			{20 to: 24}
		evaluating: [
			(#_coverageTracker6538296_
				coverAll:
					{16 to: 18}
				by: Set) with:
				(#_coverageTracker6538296_
					coverAll:
						{26 to: 29}
					byLiteralOrPseudoVariable: self) ].! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:18:23'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:18:23'!
PASSED!
!Behavior method!
isInAHigherLevelPortfolio: anAccount
	#_coverageTracker6538267_ markAsExecuted.
	^ #_coverageTracker6538267_
		coverAll:
			{182 to: 184. 268 to: 270}
		evaluating: [
			(#_coverageTracker6538267_
				coverAll:
					{53 to: 63}
				evaluating: [
					(#_coverageTracker6538267_
						cover: (44 to: 51)
						declaredAt: (44 to: 51)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker6538267_
							coverAll:
								{130 to: 132}
							evaluating: [
								(#_coverageTracker6538267_
									coverAll:
										{85 to: 114}
									evaluating: [
										(#_coverageTracker6538267_
											cover: (77 to: 83)
											declaredAt: (67 to: 73)
											by: account) containsAnyAccountFromAccount:
											(#_coverageTracker6538267_
												cover: (116 to: 124)
												declaredAt: (28 to: 36)
												by: anAccount) ]) or: [
									#_coverageTracker6538267_
										coverAll:
											{157 to: 165}
										evaluating: [
											(#_coverageTracker6538267_
												coverAll:
													{145 to: 155}
												evaluating: [
													(#_coverageTracker6538267_
														cover: (135 to: 143)
														declaredAt: (28 to: 36)
														by: anAccount) allAccounts ]) includes:
												(#_coverageTracker6538267_
													cover: (167 to: 173)
													declaredAt: (67 to: 73)
													by: account) ]]]]])
				or:
					(#_coverageTracker6538267_
						coverAll:
							{195 to: 205}
						evaluating: [
							(#_coverageTracker6538267_
								cover: (187 to: 193)
								declaredAt: (187 to: 193)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker6538267_
									coverAll:
										{226 to: 251}
									evaluating: [
										(#_coverageTracker6538267_
											cover: (218 to: 224)
											declaredAt: (209 to: 215)
											by: aParent) isInAHigherLevelPortfolio:
											(#_coverageTracker6538267_
												cover: (253 to: 261)
												declaredAt: (28 to: 36)
												by: anAccount) ]]])
				or:
					(#_coverageTracker6538267_
						coverAll:
							{278 to: 278}
						evaluating: [
							(#_coverageTracker6538267_
								coverAll:
									{273 to: 276}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker6538267_
									cover: (280 to: 288)
									declaredAt: (28 to: 36)
									by: anAccount) ])
			"Lo importante es la buena onda" ].! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:18:23'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:18:23'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:18:23'!
PASSED!

!methodRemoval: Deposit #signedValue stamp: 'VV 10/17/2022 15:19:28'!
signedValue
	^value!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:21:00' prior: 50585847!
test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount
	|portfolio4|
	portfolio4 _ PortfolioAccount new.
	portfolio4 add: portfolio3.
	portfolio3 add: receptiveAccount1.
	portfolio3 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:22:27' prior: 50586619!
test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount
	|portfolio4|
	portfolio4 _ PortfolioAccount new.
	portfolio4 add: portfolio3.
	portfolio3 add: receptiveAccount1.
	portfolio4 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:22:28'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:22:28'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:23:24'!
test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio
	|portfolio4|
	portfolio4 _ PortfolioAccount new.
	portfolio4 add: portfolio3.
	portfolio3 add: receptiveAccount1.
	portfolio4 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:23:25'!
PASSED!

!methodRemoval: PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:23:28'!
test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount
	|portfolio4|
	portfolio4 _ PortfolioAccount new.
	portfolio4 add: portfolio3.
	portfolio3 add: receptiveAccount1.
	portfolio4 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	!
!Behavior method!
initialize
	#_coverageTracker6869519_ markAsExecuted.
	#_coverageTracker6869519_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ #_coverageTracker6869519_
				coverAll:
					{43 to: 45}
				evaluating: [
					(#_coverageTracker6869519_
						coverAll:
							{25 to: 41}
						by: OrderedCollection) new ]).
	#_coverageTracker6869519_
		coverAll:
			{55 to: 64}
		evaluating: [ super initialize ].! !
!Behavior method!
initialize
	#_coverageTracker6869626_ markAsExecuted.
	#_coverageTracker6869626_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(parents _ #_coverageTracker6869626_
				coverAll:
					{42 to: 44}
				evaluating: [
					(#_coverageTracker6869626_
						coverAll:
							{24 to: 40}
						by: OrderedCollection) new ]).! !
!Behavior method!
initialize
	#_coverageTracker6869644_ markAsExecuted.
	#_coverageTracker6869644_
		cover: (14 to: 25)
		declaredAt: (14 to: 25)
		by:
			(transactions _ #_coverageTracker6869644_
				coverAll:
					{34 to: 36}
				evaluating: [
					(#_coverageTracker6869644_
						coverAll:
							{30 to: 32}
						by: Set) new ]).
	#_coverageTracker6869644_
		coverAll:
			{46 to: 55}
		evaluating: [ super initialize ].! !
!Behavior method!
balance
	#_coverageTracker6869707_ markAsExecuted.
	^ #_coverageTracker6869707_
		coverAll:
			{21 to: 24. 61 to: 68}
		evaluating: [
			(#_coverageTracker6869707_
				cover: (12 to: 19)
				declaredAt: (12 to: 19)
				by: accounts)
				sum: [ :bankEntity |
					#_coverageTracker6869707_
						coverAll:
							{52 to: 58}
						evaluating: [
							(#_coverageTracker6869707_
								cover: (41 to: 50)
								declaredAt: (28 to: 37)
								by: bankEntity) balance ]]
				ifEmpty: [
					#_coverageTracker6869707_
						coverAll:
							{71 to: 71}
						byLiteralOrPseudoVariable: 0 ]].! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker6869590_ markAsExecuted.
	#_coverageTracker6869590_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ #_coverageTracker6869590_
				coverAll:
					{71 to: 74}
				evaluating: [
					(#_coverageTracker6869590_
						coverAll:
							{66 to: 69}
						byLiteralOrPseudoVariable: self) for:
						(#_coverageTracker6869590_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]).
	#_coverageTracker6869590_
		coverAll:
			{93 to: 101}
		evaluating: [
			(#_coverageTracker6869590_
				cover: (85 to: 91)
				declaredAt: (22 to: 28)
				by: account) register:
				(#_coverageTracker6869590_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ].
	^ #_coverageTracker6869590_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
for: aValue
	#_coverageTracker6869676_ markAsExecuted.
	^ #_coverageTracker6869676_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker6869676_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker6869676_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker6869676_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker6869663_ markAsExecuted.
	#_coverageTracker6869663_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker6869663_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
register: aTransaction
	#_coverageTracker6869628_ markAsExecuted.
	#_coverageTracker6869628_
		coverAll:
			{39 to: 42}
		evaluating: [
			(#_coverageTracker6869628_
				cover: (26 to: 37)
				declaredAt: (26 to: 37)
				by: transactions) add:
				(#_coverageTracker6869628_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ].! !
!Behavior method!
add: anAccount
	#_coverageTracker6869576_ markAsExecuted.
	#_coverageTracker6869576_
		coverAll:
			{46 to: 52}
		evaluating: [
			(#_coverageTracker6869576_
				coverAll:
					{24 to: 33}
				evaluating: [
					(#_coverageTracker6869576_
						coverAll:
							{19 to: 22}
						byLiteralOrPseudoVariable: self) cannotAdd:
						(#_coverageTracker6869576_
							cover: (35 to: 43)
							declaredAt: (6 to: 14)
							by: anAccount) ]) ifTrue: [
				#_coverageTracker6869576_
					coverAll:
						{60 to: 65}
					evaluating: [
						(#_coverageTracker6869576_
							coverAll:
								{55 to: 58}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker6869576_
								coverAll:
									{78 to: 106}
								evaluating: [
									(#_coverageTracker6869576_
										coverAll:
											{72 to: 76}
										evaluating: [
											(#_coverageTracker6869576_
												coverAll:
													{67 to: 70}
												byLiteralOrPseudoVariable: self) class ]) duplicatedAccountErrorMessage ]) ]]].
	#_coverageTracker6869576_
		coverAll:
			{122 to: 125}
		evaluating: [
			(#_coverageTracker6869576_
				cover: (113 to: 120)
				declaredAt: (113 to: 120)
				by: accounts) add:
				(#_coverageTracker6869576_
					cover: (127 to: 135)
					declaredAt: (6 to: 14)
					by: anAccount) ].
	#_coverageTracker6869576_
		coverAll:
			{149 to: 158}
		evaluating: [
			(#_coverageTracker6869576_
				cover: (139 to: 147)
				declaredAt: (6 to: 14)
				by: anAccount) addParent:
				(#_coverageTracker6869576_
					coverAll:
						{160 to: 163}
					byLiteralOrPseudoVariable: self) ].! !
!Behavior method!
cannotAdd: anAccount
	#_coverageTracker6869546_ markAsExecuted.
	^ #_coverageTracker6869546_
		coverAll:
			{112 to: 114. 198 to: 200}
		evaluating: [
			(#_coverageTracker6869546_
				coverAll:
					{36 to: 46}
				evaluating: [
					(#_coverageTracker6869546_
						cover: (27 to: 34)
						declaredAt: (27 to: 34)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker6869546_
							coverAll:
								{67 to: 96}
							evaluating: [
								(#_coverageTracker6869546_
									cover: (59 to: 65)
									declaredAt: (50 to: 56)
									by: account) containsAnyAccountFromAccount:
									(#_coverageTracker6869546_
										cover: (98 to: 106)
										declaredAt: (12 to: 20)
										by: anAccount) ]]])
				or:
					(#_coverageTracker6869546_
						coverAll:
							{128 to: 138}
						evaluating: [
							(#_coverageTracker6869546_
								cover: (120 to: 126)
								declaredAt: (120 to: 126)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker6869546_
									coverAll:
										{159 to: 184}
									evaluating: [
										(#_coverageTracker6869546_
											cover: (151 to: 157)
											declaredAt: (142 to: 148)
											by: aParent) isInAHigherLevelPortfolio:
											(#_coverageTracker6869546_
												cover: (186 to: 194)
												declaredAt: (12 to: 20)
												by: anAccount) ]]])
				or:
					(#_coverageTracker6869546_
						coverAll:
							{211 to: 211}
						evaluating: [
							(#_coverageTracker6869546_
								coverAll:
									{206 to: 209}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker6869546_
									cover: (213 to: 221)
									declaredAt: (12 to: 20)
									by: anAccount) ]) ].! !
!Behavior method!
addParent: aPortfolioAccount
	#_coverageTracker6869532_ markAsExecuted.
	#_coverageTracker6869532_
		coverAll:
			{41 to: 44}
		evaluating: [
			(#_coverageTracker6869532_
				cover: (33 to: 39)
				declaredAt: (33 to: 39)
				by: parents) add:
				(#_coverageTracker6869532_
					cover: (46 to: 62)
					declaredAt: (12 to: 28)
					by: aPortfolioAccount) ].! !
!Behavior method!
balance
	#_coverageTracker6869678_ markAsExecuted.
	^ #_coverageTracker6869678_
		coverAll:
			{25 to: 31. 35 to: 39}
		evaluating: [
			(#_coverageTracker6869678_
				cover: (12 to: 23)
				declaredAt: (12 to: 23)
				by: transactions)
				inject:
					(#_coverageTracker6869678_
						coverAll:
							{33 to: 33}
						byLiteralOrPseudoVariable: 0)
				into: [ :balance :aTransaction |
					#_coverageTracker6869678_
						coverAll:
							{78 to: 92}
						evaluating: [
							(#_coverageTracker6869678_
								cover: (65 to: 76)
								declaredAt: (51 to: 62)
								by: aTransaction) applyToBalance:
								(#_coverageTracker6869678_
									cover: (94 to: 100)
									declaredAt: (42 to: 48)
									by: balance) ]]].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker6869513_ markAsExecuted.
	^ #_coverageTracker6869513_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker6869513_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) +
				(#_coverageTracker6869513_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
for: aValue
	#_coverageTracker6869649_ markAsExecuted.
	^ #_coverageTracker6869649_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker6869649_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker6869649_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker6869649_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker6869642_ markAsExecuted.
	#_coverageTracker6869642_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker6869642_
				cover: (35 to: 40)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
containsAnyAccountFromAccount: anAccount
	#_coverageTracker6869682_ markAsExecuted.
	^ #_coverageTracker6869682_
		coverAll:
			{50 to: 50}
		evaluating: [
			(#_coverageTracker6869682_
				coverAll:
					{45 to: 48}
				byLiteralOrPseudoVariable: self) =
				(#_coverageTracker6869682_
					cover: (52 to: 60)
					declaredAt: (32 to: 40)
					by: anAccount) ].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker6869684_ markAsExecuted.
	^ #_coverageTracker6869684_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker6869684_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) -
				(#_coverageTracker6869684_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:23:54'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker6869569_ markAsExecuted.
	^ #_coverageTracker6869569_
		coverAll:
			{29 to: 35. 45 to: 49}
		evaluating: [
			(#_coverageTracker6869569_
				cover: (20 to: 27)
				declaredAt: (20 to: 27)
				by: accounts)
				inject:
					(#_coverageTracker6869569_
						coverAll:
							{41 to: 43}
						evaluating: [
							(#_coverageTracker6869569_
								coverAll:
									{37 to: 39}
								by: Set) new ])
				into: [ :transactionsSoFar :bankEntity |
					#_coverageTracker6869569_
						coverAll:
							{101 to: 106}
						evaluating: [
							(#_coverageTracker6869569_
								cover: (83 to: 99)
								declaredAt: (52 to: 68)
								by: transactionsSoFar) union:
								(#_coverageTracker6869569_
									coverAll:
										{119 to: 130}
									evaluating: [
										(#_coverageTracker6869569_
											cover: (108 to: 117)
											declaredAt: (71 to: 80)
											by: bankEntity) transactions ]) ]]].! !

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker6869599_ markAsExecuted.
	^ #_coverageTracker6869599_
		coverAll:
			{32 to: 35}
		evaluating: [
			(#_coverageTracker6869599_
				cover: (19 to: 30)
				declaredAt: (19 to: 30)
				by: transactions) copy ].! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:23:54'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:23:54'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker6869659_ markAsExecuted.
	^ #_coverageTracker6869659_
		coverAll:
			{42 to: 52}
		evaluating: [
			(#_coverageTracker6869659_
				cover: (33 to: 40)
				declaredAt: (33 to: 40)
				by: accounts) anySatisfy: [ :bankEntity |
				#_coverageTracker6869659_
					coverAll:
						{79 to: 92}
					evaluating: [
						(#_coverageTracker6869659_
							cover: (68 to: 77)
							declaredAt: (56 to: 65)
							by: bankEntity) hasRegistered:
							(#_coverageTracker6869659_
								cover: (94 to: 105)
								declaredAt: (16 to: 27)
								by: aTransaction) ]]].! !

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker6869596_ markAsExecuted.
	^ #_coverageTracker6869596_
		coverAll:
			{46 to: 54}
		evaluating: [
			(#_coverageTracker6869596_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: transactions) includes:
				(#_coverageTracker6869596_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ].! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:23:54'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
duplicatedAccountErrorMessage
	#_coverageTracker6869651_ markAsExecuted.
	^ #_coverageTracker6869651_
		coverAll:
			{34 to: 77}
		byLiteralOrPseudoVariable: 'Can not add duplicated account to porfolio'.! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
containsAnyAccountFromAccount: anAccount
	| allAccountsOfSelf |
	#_coverageTracker6869615_ markAsExecuted.
	#_coverageTracker6869615_
		cover: (64 to: 80)
		declaredAt: (44 to: 60)
		by:
			(allAccountsOfSelf _ #_coverageTracker6869615_
				coverAll:
					{89 to: 99}
				evaluating: [
					(#_coverageTracker6869615_
						coverAll:
							{84 to: 87}
						byLiteralOrPseudoVariable: self) allAccounts ]).
	^ #_coverageTracker6869615_
		coverAll:
			{262 to: 264}
		evaluating: [
			(#_coverageTracker6869615_
				coverAll:
					{133 to: 143}
				evaluating: [
					(#_coverageTracker6869615_
						coverAll:
							{121 to: 131}
						evaluating: [
							(#_coverageTracker6869615_
								cover: (111 to: 119)
								declaredAt: (32 to: 40)
								by: anAccount) allAccounts ]) anySatisfy: [ :aChildrenOfAnAccount |
						#_coverageTracker6869615_
							coverAll:
								{223 to: 225}
							evaluating: [
								(#_coverageTracker6869615_
									coverAll:
										{191 to: 199}
									evaluating: [
										(#_coverageTracker6869615_
											cover: (173 to: 189)
											declaredAt: (44 to: 60)
											by: allAccountsOfSelf) includes:
											(#_coverageTracker6869615_
												cover: (201 to: 220)
												declaredAt: (147 to: 166)
												by: aChildrenOfAnAccount) ]) or:
									(#_coverageTracker6869615_
										coverAll:
											{232 to: 232}
										evaluating: [
											(#_coverageTracker6869615_
												coverAll:
													{227 to: 230}
												byLiteralOrPseudoVariable: self) =
												(#_coverageTracker6869615_
													cover: (234 to: 253)
													declaredAt: (147 to: 166)
													by: aChildrenOfAnAccount) ]) ]]]) or:
				(#_coverageTracker6869615_
					coverAll:
						{285 to: 293}
					evaluating: [
						(#_coverageTracker6869615_
							cover: (267 to: 283)
							declaredAt: (44 to: 60)
							by: allAccountsOfSelf) includes:
							(#_coverageTracker6869615_
								cover: (295 to: 303)
								declaredAt: (32 to: 40)
								by: anAccount) ]) ].! !
!Behavior method!
allAccounts
	#_coverageTracker6869607_ markAsExecuted.
	^ #_coverageTracker6869607_
		coverAll:
			{25 to: 31. 41 to: 45}
		evaluating: [
			(#_coverageTracker6869607_
				cover: (16 to: 23)
				declaredAt: (16 to: 23)
				by: accounts)
				inject:
					(#_coverageTracker6869607_
						coverAll:
							{37 to: 39}
						evaluating: [
							(#_coverageTracker6869607_
								coverAll:
									{33 to: 35}
								by: Set) new ])
				into: [ :allAccountsSoFar :account |
					#_coverageTracker6869607_
						coverAll:
							{93 to: 96}
						evaluating: [
							(#_coverageTracker6869607_
								cover: (76 to: 91)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) add:
								(#_coverageTracker6869607_
									cover: (98 to: 104)
									declaredAt: (67 to: 73)
									by: account) ].
					#_coverageTracker6869607_
						coverAll:
							{124 to: 129}
						evaluating: [
							(#_coverageTracker6869607_
								cover: (107 to: 122)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) union:
								(#_coverageTracker6869607_
									coverAll:
										{139 to: 149}
									evaluating: [
										(#_coverageTracker6869607_
											cover: (131 to: 137)
											declaredAt: (67 to: 73)
											by: account) allAccounts ]) ]]].! !
!Behavior method!
allAccounts
	#_coverageTracker6869586_ markAsExecuted.
	^ #_coverageTracker6869586_
		coverAll:
			{20 to: 24}
		evaluating: [
			(#_coverageTracker6869586_
				coverAll:
					{16 to: 18}
				by: Set) with:
				(#_coverageTracker6869586_
					coverAll:
						{26 to: 29}
					byLiteralOrPseudoVariable: self) ].! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:23:54'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
isInAHigherLevelPortfolio: anAccount
	#_coverageTracker6869557_ markAsExecuted.
	^ #_coverageTracker6869557_
		coverAll:
			{182 to: 184. 268 to: 270}
		evaluating: [
			(#_coverageTracker6869557_
				coverAll:
					{53 to: 63}
				evaluating: [
					(#_coverageTracker6869557_
						cover: (44 to: 51)
						declaredAt: (44 to: 51)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker6869557_
							coverAll:
								{130 to: 132}
							evaluating: [
								(#_coverageTracker6869557_
									coverAll:
										{85 to: 114}
									evaluating: [
										(#_coverageTracker6869557_
											cover: (77 to: 83)
											declaredAt: (67 to: 73)
											by: account) containsAnyAccountFromAccount:
											(#_coverageTracker6869557_
												cover: (116 to: 124)
												declaredAt: (28 to: 36)
												by: anAccount) ]) or: [
									#_coverageTracker6869557_
										coverAll:
											{157 to: 165}
										evaluating: [
											(#_coverageTracker6869557_
												coverAll:
													{145 to: 155}
												evaluating: [
													(#_coverageTracker6869557_
														cover: (135 to: 143)
														declaredAt: (28 to: 36)
														by: anAccount) allAccounts ]) includes:
												(#_coverageTracker6869557_
													cover: (167 to: 173)
													declaredAt: (67 to: 73)
													by: account) ]]]]])
				or:
					(#_coverageTracker6869557_
						coverAll:
							{195 to: 205}
						evaluating: [
							(#_coverageTracker6869557_
								cover: (187 to: 193)
								declaredAt: (187 to: 193)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker6869557_
									coverAll:
										{226 to: 251}
									evaluating: [
										(#_coverageTracker6869557_
											cover: (218 to: 224)
											declaredAt: (209 to: 215)
											by: aParent) isInAHigherLevelPortfolio:
											(#_coverageTracker6869557_
												cover: (253 to: 261)
												declaredAt: (28 to: 36)
												by: anAccount) ]]])
				or:
					(#_coverageTracker6869557_
						coverAll:
							{278 to: 278}
						evaluating: [
							(#_coverageTracker6869557_
								coverAll:
									{273 to: 276}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker6869557_
									cover: (280 to: 288)
									declaredAt: (28 to: 36)
									by: anAccount) ])
			"Lo importante es la buena onda" ].! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:23:54'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:23:54'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:23:54'!
PASSED!
!Behavior method!
initialize
	#_coverageTracker6925176_ markAsExecuted.
	#_coverageTracker6925176_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ #_coverageTracker6925176_
				coverAll:
					{43 to: 45}
				evaluating: [
					(#_coverageTracker6925176_
						coverAll:
							{25 to: 41}
						by: OrderedCollection) new ]).
	#_coverageTracker6925176_
		coverAll:
			{55 to: 64}
		evaluating: [ super initialize ].! !
!Behavior method!
initialize
	#_coverageTracker6925281_ markAsExecuted.
	#_coverageTracker6925281_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(parents _ #_coverageTracker6925281_
				coverAll:
					{42 to: 44}
				evaluating: [
					(#_coverageTracker6925281_
						coverAll:
							{24 to: 40}
						by: OrderedCollection) new ]).! !
!Behavior method!
initialize
	#_coverageTracker6925299_ markAsExecuted.
	#_coverageTracker6925299_
		cover: (14 to: 25)
		declaredAt: (14 to: 25)
		by:
			(transactions _ #_coverageTracker6925299_
				coverAll:
					{34 to: 36}
				evaluating: [
					(#_coverageTracker6925299_
						coverAll:
							{30 to: 32}
						by: Set) new ]).
	#_coverageTracker6925299_
		coverAll:
			{46 to: 55}
		evaluating: [ super initialize ].! !
!Behavior method!
balance
	#_coverageTracker6925364_ markAsExecuted.
	^ #_coverageTracker6925364_
		coverAll:
			{21 to: 24. 61 to: 68}
		evaluating: [
			(#_coverageTracker6925364_
				cover: (12 to: 19)
				declaredAt: (12 to: 19)
				by: accounts)
				sum: [ :bankEntity |
					#_coverageTracker6925364_
						coverAll:
							{52 to: 58}
						evaluating: [
							(#_coverageTracker6925364_
								cover: (41 to: 50)
								declaredAt: (28 to: 37)
								by: bankEntity) balance ]]
				ifEmpty: [
					#_coverageTracker6925364_
						coverAll:
							{71 to: 71}
						byLiteralOrPseudoVariable: 0 ]].! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker6925245_ markAsExecuted.
	#_coverageTracker6925245_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ #_coverageTracker6925245_
				coverAll:
					{71 to: 74}
				evaluating: [
					(#_coverageTracker6925245_
						coverAll:
							{66 to: 69}
						byLiteralOrPseudoVariable: self) for:
						(#_coverageTracker6925245_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]).
	#_coverageTracker6925245_
		coverAll:
			{93 to: 101}
		evaluating: [
			(#_coverageTracker6925245_
				cover: (85 to: 91)
				declaredAt: (22 to: 28)
				by: account) register:
				(#_coverageTracker6925245_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ].
	^ #_coverageTracker6925245_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
for: aValue
	#_coverageTracker6925331_ markAsExecuted.
	^ #_coverageTracker6925331_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker6925331_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker6925331_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker6925331_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker6925318_ markAsExecuted.
	#_coverageTracker6925318_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker6925318_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
register: aTransaction
	#_coverageTracker6925283_ markAsExecuted.
	#_coverageTracker6925283_
		coverAll:
			{39 to: 42}
		evaluating: [
			(#_coverageTracker6925283_
				cover: (26 to: 37)
				declaredAt: (26 to: 37)
				by: transactions) add:
				(#_coverageTracker6925283_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ].! !
!Behavior method!
add: anAccount
	#_coverageTracker6925231_ markAsExecuted.
	#_coverageTracker6925231_
		coverAll:
			{46 to: 52}
		evaluating: [
			(#_coverageTracker6925231_
				coverAll:
					{24 to: 33}
				evaluating: [
					(#_coverageTracker6925231_
						coverAll:
							{19 to: 22}
						byLiteralOrPseudoVariable: self) cannotAdd:
						(#_coverageTracker6925231_
							cover: (35 to: 43)
							declaredAt: (6 to: 14)
							by: anAccount) ]) ifTrue: [
				#_coverageTracker6925231_
					coverAll:
						{60 to: 65}
					evaluating: [
						(#_coverageTracker6925231_
							coverAll:
								{55 to: 58}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker6925231_
								coverAll:
									{78 to: 106}
								evaluating: [
									(#_coverageTracker6925231_
										coverAll:
											{72 to: 76}
										evaluating: [
											(#_coverageTracker6925231_
												coverAll:
													{67 to: 70}
												byLiteralOrPseudoVariable: self) class ]) duplicatedAccountErrorMessage ]) ]]].
	#_coverageTracker6925231_
		coverAll:
			{122 to: 125}
		evaluating: [
			(#_coverageTracker6925231_
				cover: (113 to: 120)
				declaredAt: (113 to: 120)
				by: accounts) add:
				(#_coverageTracker6925231_
					cover: (127 to: 135)
					declaredAt: (6 to: 14)
					by: anAccount) ].
	#_coverageTracker6925231_
		coverAll:
			{149 to: 158}
		evaluating: [
			(#_coverageTracker6925231_
				cover: (139 to: 147)
				declaredAt: (6 to: 14)
				by: anAccount) addParent:
				(#_coverageTracker6925231_
					coverAll:
						{160 to: 163}
					byLiteralOrPseudoVariable: self) ].! !
!Behavior method!
cannotAdd: anAccount
	#_coverageTracker6925202_ markAsExecuted.
	^ #_coverageTracker6925202_
		coverAll:
			{112 to: 114. 198 to: 200}
		evaluating: [
			(#_coverageTracker6925202_
				coverAll:
					{36 to: 46}
				evaluating: [
					(#_coverageTracker6925202_
						cover: (27 to: 34)
						declaredAt: (27 to: 34)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker6925202_
							coverAll:
								{67 to: 96}
							evaluating: [
								(#_coverageTracker6925202_
									cover: (59 to: 65)
									declaredAt: (50 to: 56)
									by: account) containsAnyAccountFromAccount:
									(#_coverageTracker6925202_
										cover: (98 to: 106)
										declaredAt: (12 to: 20)
										by: anAccount) ]]])
				or:
					(#_coverageTracker6925202_
						coverAll:
							{128 to: 138}
						evaluating: [
							(#_coverageTracker6925202_
								cover: (120 to: 126)
								declaredAt: (120 to: 126)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker6925202_
									coverAll:
										{159 to: 184}
									evaluating: [
										(#_coverageTracker6925202_
											cover: (151 to: 157)
											declaredAt: (142 to: 148)
											by: aParent) isInAHigherLevelPortfolio:
											(#_coverageTracker6925202_
												cover: (186 to: 194)
												declaredAt: (12 to: 20)
												by: anAccount) ]]])
				or:
					(#_coverageTracker6925202_
						coverAll:
							{211 to: 211}
						evaluating: [
							(#_coverageTracker6925202_
								coverAll:
									{206 to: 209}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker6925202_
									cover: (213 to: 221)
									declaredAt: (12 to: 20)
									by: anAccount) ]) ].! !
!Behavior method!
addParent: aPortfolioAccount
	#_coverageTracker6925187_ markAsExecuted.
	#_coverageTracker6925187_
		coverAll:
			{41 to: 44}
		evaluating: [
			(#_coverageTracker6925187_
				cover: (33 to: 39)
				declaredAt: (33 to: 39)
				by: parents) add:
				(#_coverageTracker6925187_
					cover: (46 to: 62)
					declaredAt: (12 to: 28)
					by: aPortfolioAccount) ].! !
!Behavior method!
balance
	#_coverageTracker6925333_ markAsExecuted.
	^ #_coverageTracker6925333_
		coverAll:
			{25 to: 31. 35 to: 39}
		evaluating: [
			(#_coverageTracker6925333_
				cover: (12 to: 23)
				declaredAt: (12 to: 23)
				by: transactions)
				inject:
					(#_coverageTracker6925333_
						coverAll:
							{33 to: 33}
						byLiteralOrPseudoVariable: 0)
				into: [ :balance :aTransaction |
					#_coverageTracker6925333_
						coverAll:
							{78 to: 92}
						evaluating: [
							(#_coverageTracker6925333_
								cover: (65 to: 76)
								declaredAt: (51 to: 62)
								by: aTransaction) applyToBalance:
								(#_coverageTracker6925333_
									cover: (94 to: 100)
									declaredAt: (42 to: 48)
									by: balance) ]]].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker6925174_ markAsExecuted.
	^ #_coverageTracker6925174_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker6925174_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) +
				(#_coverageTracker6925174_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!Behavior method!
for: aValue
	#_coverageTracker6925304_ markAsExecuted.
	^ #_coverageTracker6925304_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker6925304_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker6925304_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker6925304_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker6925297_ markAsExecuted.
	#_coverageTracker6925297_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker6925297_
				cover: (35 to: 40)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
containsAnyAccountFromAccount: anAccount
	#_coverageTracker6925339_ markAsExecuted.
	^ #_coverageTracker6925339_
		coverAll:
			{50 to: 50}
		evaluating: [
			(#_coverageTracker6925339_
				coverAll:
					{45 to: 48}
				byLiteralOrPseudoVariable: self) =
				(#_coverageTracker6925339_
					cover: (52 to: 60)
					declaredAt: (32 to: 40)
					by: anAccount) ].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker6925341_ markAsExecuted.
	^ #_coverageTracker6925341_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker6925341_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) -
				(#_coverageTracker6925341_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:24:50'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker6925224_ markAsExecuted.
	^ #_coverageTracker6925224_
		coverAll:
			{29 to: 35. 45 to: 49}
		evaluating: [
			(#_coverageTracker6925224_
				cover: (20 to: 27)
				declaredAt: (20 to: 27)
				by: accounts)
				inject:
					(#_coverageTracker6925224_
						coverAll:
							{41 to: 43}
						evaluating: [
							(#_coverageTracker6925224_
								coverAll:
									{37 to: 39}
								by: Set) new ])
				into: [ :transactionsSoFar :bankEntity |
					#_coverageTracker6925224_
						coverAll:
							{101 to: 106}
						evaluating: [
							(#_coverageTracker6925224_
								cover: (83 to: 99)
								declaredAt: (52 to: 68)
								by: transactionsSoFar) union:
								(#_coverageTracker6925224_
									coverAll:
										{119 to: 130}
									evaluating: [
										(#_coverageTracker6925224_
											cover: (108 to: 117)
											declaredAt: (71 to: 80)
											by: bankEntity) transactions ]) ]]].! !

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker6925254_ markAsExecuted.
	^ #_coverageTracker6925254_
		coverAll:
			{32 to: 35}
		evaluating: [
			(#_coverageTracker6925254_
				cover: (19 to: 30)
				declaredAt: (19 to: 30)
				by: transactions) copy ].! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:24:50'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:24:50'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker6925316_ markAsExecuted.
	^ #_coverageTracker6925316_
		coverAll:
			{42 to: 52}
		evaluating: [
			(#_coverageTracker6925316_
				cover: (33 to: 40)
				declaredAt: (33 to: 40)
				by: accounts) anySatisfy: [ :bankEntity |
				#_coverageTracker6925316_
					coverAll:
						{79 to: 92}
					evaluating: [
						(#_coverageTracker6925316_
							cover: (68 to: 77)
							declaredAt: (56 to: 65)
							by: bankEntity) hasRegistered:
							(#_coverageTracker6925316_
								cover: (94 to: 105)
								declaredAt: (16 to: 27)
								by: aTransaction) ]]].! !

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker6925249_ markAsExecuted.
	^ #_coverageTracker6925249_
		coverAll:
			{46 to: 54}
		evaluating: [
			(#_coverageTracker6925249_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: transactions) includes:
				(#_coverageTracker6925249_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ].! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:24:50'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!Behavior method!
duplicatedAccountErrorMessage
	#_coverageTracker6925306_ markAsExecuted.
	^ #_coverageTracker6925306_
		coverAll:
			{34 to: 77}
		byLiteralOrPseudoVariable: 'Can not add duplicated account to porfolio'.! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!Behavior method!
containsAnyAccountFromAccount: anAccount
	| allAccountsOfSelf |
	#_coverageTracker6925270_ markAsExecuted.
	#_coverageTracker6925270_
		cover: (64 to: 80)
		declaredAt: (44 to: 60)
		by:
			(allAccountsOfSelf _ #_coverageTracker6925270_
				coverAll:
					{89 to: 99}
				evaluating: [
					(#_coverageTracker6925270_
						coverAll:
							{84 to: 87}
						byLiteralOrPseudoVariable: self) allAccounts ]).
	^ #_coverageTracker6925270_
		coverAll:
			{262 to: 264}
		evaluating: [
			(#_coverageTracker6925270_
				coverAll:
					{133 to: 143}
				evaluating: [
					(#_coverageTracker6925270_
						coverAll:
							{121 to: 131}
						evaluating: [
							(#_coverageTracker6925270_
								cover: (111 to: 119)
								declaredAt: (32 to: 40)
								by: anAccount) allAccounts ]) anySatisfy: [ :aChildrenOfAnAccount |
						#_coverageTracker6925270_
							coverAll:
								{223 to: 225}
							evaluating: [
								(#_coverageTracker6925270_
									coverAll:
										{191 to: 199}
									evaluating: [
										(#_coverageTracker6925270_
											cover: (173 to: 189)
											declaredAt: (44 to: 60)
											by: allAccountsOfSelf) includes:
											(#_coverageTracker6925270_
												cover: (201 to: 220)
												declaredAt: (147 to: 166)
												by: aChildrenOfAnAccount) ]) or:
									(#_coverageTracker6925270_
										coverAll:
											{232 to: 232}
										evaluating: [
											(#_coverageTracker6925270_
												coverAll:
													{227 to: 230}
												byLiteralOrPseudoVariable: self) =
												(#_coverageTracker6925270_
													cover: (234 to: 253)
													declaredAt: (147 to: 166)
													by: aChildrenOfAnAccount) ]) ]]]) or:
				(#_coverageTracker6925270_
					coverAll:
						{285 to: 293}
					evaluating: [
						(#_coverageTracker6925270_
							cover: (267 to: 283)
							declaredAt: (44 to: 60)
							by: allAccountsOfSelf) includes:
							(#_coverageTracker6925270_
								cover: (295 to: 303)
								declaredAt: (32 to: 40)
								by: anAccount) ]) ].! !
!Behavior method!
allAccounts
	#_coverageTracker6925262_ markAsExecuted.
	^ #_coverageTracker6925262_
		coverAll:
			{25 to: 31. 41 to: 45}
		evaluating: [
			(#_coverageTracker6925262_
				cover: (16 to: 23)
				declaredAt: (16 to: 23)
				by: accounts)
				inject:
					(#_coverageTracker6925262_
						coverAll:
							{37 to: 39}
						evaluating: [
							(#_coverageTracker6925262_
								coverAll:
									{33 to: 35}
								by: Set) new ])
				into: [ :allAccountsSoFar :account |
					#_coverageTracker6925262_
						coverAll:
							{93 to: 96}
						evaluating: [
							(#_coverageTracker6925262_
								cover: (76 to: 91)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) add:
								(#_coverageTracker6925262_
									cover: (98 to: 104)
									declaredAt: (67 to: 73)
									by: account) ].
					#_coverageTracker6925262_
						coverAll:
							{124 to: 129}
						evaluating: [
							(#_coverageTracker6925262_
								cover: (107 to: 122)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) union:
								(#_coverageTracker6925262_
									coverAll:
										{139 to: 149}
									evaluating: [
										(#_coverageTracker6925262_
											cover: (131 to: 137)
											declaredAt: (67 to: 73)
											by: account) allAccounts ]) ]]].! !
!Behavior method!
allAccounts
	#_coverageTracker6925241_ markAsExecuted.
	^ #_coverageTracker6925241_
		coverAll:
			{20 to: 24}
		evaluating: [
			(#_coverageTracker6925241_
				coverAll:
					{16 to: 18}
				by: Set) with:
				(#_coverageTracker6925241_
					coverAll:
						{26 to: 29}
					byLiteralOrPseudoVariable: self) ].! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:24:50'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!Behavior method!
isInAHigherLevelPortfolio: anAccount
	#_coverageTracker6925212_ markAsExecuted.
	^ #_coverageTracker6925212_
		coverAll:
			{182 to: 184. 268 to: 270}
		evaluating: [
			(#_coverageTracker6925212_
				coverAll:
					{53 to: 63}
				evaluating: [
					(#_coverageTracker6925212_
						cover: (44 to: 51)
						declaredAt: (44 to: 51)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker6925212_
							coverAll:
								{130 to: 132}
							evaluating: [
								(#_coverageTracker6925212_
									coverAll:
										{85 to: 114}
									evaluating: [
										(#_coverageTracker6925212_
											cover: (77 to: 83)
											declaredAt: (67 to: 73)
											by: account) containsAnyAccountFromAccount:
											(#_coverageTracker6925212_
												cover: (116 to: 124)
												declaredAt: (28 to: 36)
												by: anAccount) ]) or: [
									#_coverageTracker6925212_
										coverAll:
											{157 to: 165}
										evaluating: [
											(#_coverageTracker6925212_
												coverAll:
													{145 to: 155}
												evaluating: [
													(#_coverageTracker6925212_
														cover: (135 to: 143)
														declaredAt: (28 to: 36)
														by: anAccount) allAccounts ]) includes:
												(#_coverageTracker6925212_
													cover: (167 to: 173)
													declaredAt: (67 to: 73)
													by: account) ]]]]])
				or:
					(#_coverageTracker6925212_
						coverAll:
							{195 to: 205}
						evaluating: [
							(#_coverageTracker6925212_
								cover: (187 to: 193)
								declaredAt: (187 to: 193)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker6925212_
									coverAll:
										{226 to: 251}
									evaluating: [
										(#_coverageTracker6925212_
											cover: (218 to: 224)
											declaredAt: (209 to: 215)
											by: aParent) isInAHigherLevelPortfolio:
											(#_coverageTracker6925212_
												cover: (253 to: 261)
												declaredAt: (28 to: 36)
												by: anAccount) ]]])
				or:
					(#_coverageTracker6925212_
						coverAll:
							{278 to: 278}
						evaluating: [
							(#_coverageTracker6925212_
								coverAll:
									{273 to: 276}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker6925212_
									cover: (280 to: 288)
									declaredAt: (28 to: 36)
									by: anAccount) ])
			"Lo importante es la buena onda" ].! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:24:50'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:24:50'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:24:50'!
PASSED!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:29:03'!
hasInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent isInAHigherLevelPortfolio: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:29:03' prior: 50584919!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAnyAccountFromAccount: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolio: anAccount]) or: 
		(self = anAccount)! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:29:03' prior: 50585168!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolio: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:29:03' prior: 50588200!
hasInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolio: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !

!methodRemoval: PortfolioAccount #isInAHigherLevelPortfolio: stamp: 'VV 10/17/2022 15:29:03'!
isInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolio: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:29:36'!
hasInAHigherLevelPortfolioAnyAccountFrom: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolio: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:29:36' prior: 50588239!
hasInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolioAnyAccountFrom: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:29:36' prior: 50588214!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAnyAccountFromAccount: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolioAnyAccountFrom: anAccount]) or: 
		(self = anAccount)! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:29:36' prior: 50588266!
hasInAHigherLevelPortfolioAnyAccountFrom: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolioAnyAccountFrom: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !

!methodRemoval: PortfolioAccount #hasInAHigherLevelPortfolio: stamp: 'VV 10/17/2022 15:29:36'!
hasInAHigherLevelPortfolio: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFromAccount: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolioAnyAccountFrom: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"!
!PortfolioAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:30:14'!
containsAnyAccountFrom: anAccount
	|allAccountsOfSelf|
	allAccountsOfSelf _ self allAccounts .
	
	
	^ (anAccount allAccounts anySatisfy: [:aChildrenOfAnAccount|
			(allAccountsOfSelf includes: aChildrenOfAnAccount) or: self = aChildrenOfAnAccount		]
		) or: (allAccountsOfSelf includes: anAccount).
		
		! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:30:14' prior: 50588294!
cannotAdd: anAccount

	^	(accounts anySatisfy: [:account| account containsAnyAccountFrom: anAccount])   or: 
		(parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolioAnyAccountFrom: anAccount]) or: 
		(self = anAccount)! !
!PortfolioAccount methodsFor: 'as yet unclassified' stamp: 'VV 10/17/2022 15:30:14' prior: 50588305!
hasInAHigherLevelPortfolioAnyAccountFrom: anAccount

	^ 	(accounts anySatisfy: [:account| (account containsAnyAccountFrom: anAccount)
			or: [anAccount allAccounts includes: account]]) 
			or: (parents anySatisfy: [:aParent| aParent hasInAHigherLevelPortfolioAnyAccountFrom: anAccount])
			or:	(self = anAccount)
		
		"Lo importante es la buena onda"! !

!methodRemoval: PortfolioAccount #containsAnyAccountFromAccount: stamp: 'VV 10/17/2022 15:30:14'!
containsAnyAccountFromAccount: anAccount
	|allAccountsOfSelf|
	allAccountsOfSelf _ self allAccounts .
	
	
	^ (anAccount allAccounts anySatisfy: [:aChildrenOfAnAccount|
			(allAccountsOfSelf includes: aChildrenOfAnAccount) or: self = aChildrenOfAnAccount		]
		) or: (allAccountsOfSelf includes: anAccount).
		
		!

----SNAPSHOT----(17 October 2022 15:30:54) CuisUniversity-5481.image priorSource: 8101895!
!Account methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:32:48'!
cannotAdd: anAccount

self subclassResponsibility .! !
!Account methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:33:13'!
containsAnyAccountFromAccount: anAccount

	self subclassResponsibility .! !
!Behavior method!
initialize
	#_coverageTracker7455382_ markAsExecuted.
	#_coverageTracker7455382_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ #_coverageTracker7455382_
				coverAll:
					{43 to: 45}
				evaluating: [
					(#_coverageTracker7455382_
						coverAll:
							{25 to: 41}
						by: OrderedCollection) new ]).
	#_coverageTracker7455382_
		coverAll:
			{55 to: 64}
		evaluating: [ super initialize ].! !
!Behavior method!
initialize
	#_coverageTracker7455463_ markAsExecuted.
	#_coverageTracker7455463_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(parents _ #_coverageTracker7455463_
				coverAll:
					{42 to: 44}
				evaluating: [
					(#_coverageTracker7455463_
						coverAll:
							{24 to: 40}
						by: OrderedCollection) new ]).! !
!Behavior method!
initialize
	#_coverageTracker7455482_ markAsExecuted.
	#_coverageTracker7455482_
		cover: (14 to: 25)
		declaredAt: (14 to: 25)
		by:
			(transactions _ #_coverageTracker7455482_
				coverAll:
					{34 to: 36}
				evaluating: [
					(#_coverageTracker7455482_
						coverAll:
							{30 to: 32}
						by: Set) new ]).
	#_coverageTracker7455482_
		coverAll:
			{46 to: 55}
		evaluating: [ super initialize ].! !
!Behavior method!
balance
	#_coverageTracker7455569_ markAsExecuted.
	^ #_coverageTracker7455569_
		coverAll:
			{21 to: 24. 61 to: 68}
		evaluating: [
			(#_coverageTracker7455569_
				cover: (12 to: 19)
				declaredAt: (12 to: 19)
				by: accounts)
				sum: [ :bankEntity |
					#_coverageTracker7455569_
						coverAll:
							{52 to: 58}
						evaluating: [
							(#_coverageTracker7455569_
								cover: (41 to: 50)
								declaredAt: (28 to: 37)
								by: bankEntity) balance ]]
				ifEmpty: [
					#_coverageTracker7455569_
						coverAll:
							{71 to: 71}
						byLiteralOrPseudoVariable: 0 ]].! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:33:40'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker7455438_ markAsExecuted.
	#_coverageTracker7455438_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ #_coverageTracker7455438_
				coverAll:
					{71 to: 74}
				evaluating: [
					(#_coverageTracker7455438_
						coverAll:
							{66 to: 69}
						byLiteralOrPseudoVariable: self) for:
						(#_coverageTracker7455438_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]).
	#_coverageTracker7455438_
		coverAll:
			{93 to: 101}
		evaluating: [
			(#_coverageTracker7455438_
				cover: (85 to: 91)
				declaredAt: (22 to: 28)
				by: account) register:
				(#_coverageTracker7455438_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ].
	^ #_coverageTracker7455438_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
for: aValue
	#_coverageTracker7455521_ markAsExecuted.
	^ #_coverageTracker7455521_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker7455521_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker7455521_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker7455521_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker7455511_ markAsExecuted.
	#_coverageTracker7455511_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker7455511_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
register: aTransaction
	#_coverageTracker7455465_ markAsExecuted.
	#_coverageTracker7455465_
		coverAll:
			{39 to: 42}
		evaluating: [
			(#_coverageTracker7455465_
				cover: (26 to: 37)
				declaredAt: (26 to: 37)
				by: transactions) add:
				(#_coverageTracker7455465_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ].! !
!Behavior method!
add: anAccount
	#_coverageTracker7455424_ markAsExecuted.
	#_coverageTracker7455424_
		coverAll:
			{46 to: 52}
		evaluating: [
			(#_coverageTracker7455424_
				coverAll:
					{24 to: 33}
				evaluating: [
					(#_coverageTracker7455424_
						coverAll:
							{19 to: 22}
						byLiteralOrPseudoVariable: self) cannotAdd:
						(#_coverageTracker7455424_
							cover: (35 to: 43)
							declaredAt: (6 to: 14)
							by: anAccount) ]) ifTrue: [
				#_coverageTracker7455424_
					coverAll:
						{60 to: 65}
					evaluating: [
						(#_coverageTracker7455424_
							coverAll:
								{55 to: 58}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker7455424_
								coverAll:
									{78 to: 106}
								evaluating: [
									(#_coverageTracker7455424_
										coverAll:
											{72 to: 76}
										evaluating: [
											(#_coverageTracker7455424_
												coverAll:
													{67 to: 70}
												byLiteralOrPseudoVariable: self) class ]) duplicatedAccountErrorMessage ]) ]]].
	#_coverageTracker7455424_
		coverAll:
			{122 to: 125}
		evaluating: [
			(#_coverageTracker7455424_
				cover: (113 to: 120)
				declaredAt: (113 to: 120)
				by: accounts) add:
				(#_coverageTracker7455424_
					cover: (127 to: 135)
					declaredAt: (6 to: 14)
					by: anAccount) ].
	#_coverageTracker7455424_
		coverAll:
			{149 to: 158}
		evaluating: [
			(#_coverageTracker7455424_
				cover: (139 to: 147)
				declaredAt: (6 to: 14)
				by: anAccount) addParent:
				(#_coverageTracker7455424_
					coverAll:
						{160 to: 163}
					byLiteralOrPseudoVariable: self) ].! !
!Behavior method!
cannotAdd: anAccount
	#_coverageTracker7455486_ markAsExecuted.
	^ #_coverageTracker7455486_
		coverAll:
			{105 to: 107. 206 to: 208}
		evaluating: [
			(#_coverageTracker7455486_
				coverAll:
					{36 to: 46}
				evaluating: [
					(#_coverageTracker7455486_
						cover: (27 to: 34)
						declaredAt: (27 to: 34)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker7455486_
							coverAll:
								{67 to: 89}
							evaluating: [
								(#_coverageTracker7455486_
									cover: (59 to: 65)
									declaredAt: (50 to: 56)
									by: account) containsAnyAccountFrom:
									(#_coverageTracker7455486_
										cover: (91 to: 99)
										declaredAt: (12 to: 20)
										by: anAccount) ]]])
				or:
					(#_coverageTracker7455486_
						coverAll:
							{121 to: 131}
						evaluating: [
							(#_coverageTracker7455486_
								cover: (113 to: 119)
								declaredAt: (113 to: 119)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker7455486_
									coverAll:
										{152 to: 192}
									evaluating: [
										(#_coverageTracker7455486_
											cover: (144 to: 150)
											declaredAt: (135 to: 141)
											by: aParent) hasInAHigherLevelPortfolioAnyAccountFrom:
											(#_coverageTracker7455486_
												cover: (194 to: 202)
												declaredAt: (12 to: 20)
												by: anAccount) ]]])
				or:
					(#_coverageTracker7455486_
						coverAll:
							{219 to: 219}
						evaluating: [
							(#_coverageTracker7455486_
								coverAll:
									{214 to: 217}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker7455486_
									cover: (221 to: 229)
									declaredAt: (12 to: 20)
									by: anAccount) ]) ].! !
!Behavior method!
addParent: aPortfolioAccount
	#_coverageTracker7455392_ markAsExecuted.
	#_coverageTracker7455392_
		coverAll:
			{41 to: 44}
		evaluating: [
			(#_coverageTracker7455392_
				cover: (33 to: 39)
				declaredAt: (33 to: 39)
				by: parents) add:
				(#_coverageTracker7455392_
					cover: (46 to: 62)
					declaredAt: (12 to: 28)
					by: aPortfolioAccount) ].! !
!Behavior method!
balance
	#_coverageTracker7455526_ markAsExecuted.
	^ #_coverageTracker7455526_
		coverAll:
			{25 to: 31. 35 to: 39}
		evaluating: [
			(#_coverageTracker7455526_
				cover: (12 to: 23)
				declaredAt: (12 to: 23)
				by: transactions)
				inject:
					(#_coverageTracker7455526_
						coverAll:
							{33 to: 33}
						byLiteralOrPseudoVariable: 0)
				into: [ :balance :aTransaction |
					#_coverageTracker7455526_
						coverAll:
							{78 to: 92}
						evaluating: [
							(#_coverageTracker7455526_
								cover: (65 to: 76)
								declaredAt: (51 to: 62)
								by: aTransaction) applyToBalance:
								(#_coverageTracker7455526_
									cover: (94 to: 100)
									declaredAt: (42 to: 48)
									by: balance) ]]].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker7455380_ markAsExecuted.
	^ #_coverageTracker7455380_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker7455380_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) +
				(#_coverageTracker7455380_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:33:40'!
PASSED!
!Behavior method!
for: aValue
	#_coverageTracker7455494_ markAsExecuted.
	^ #_coverageTracker7455494_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker7455494_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker7455494_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker7455494_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker7455480_ markAsExecuted.
	#_coverageTracker7455480_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker7455480_
				cover: (35 to: 40)
				declaredAt: (16 to: 21)
				by: aValue).! !

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:33:40'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:33:40'!
ERROR!
!Behavior method!
transactions
	#_coverageTracker7455407_ markAsExecuted.
	^ #_coverageTracker7455407_
		coverAll:
			{29 to: 35. 45 to: 49}
		evaluating: [
			(#_coverageTracker7455407_
				cover: (20 to: 27)
				declaredAt: (20 to: 27)
				by: accounts)
				inject:
					(#_coverageTracker7455407_
						coverAll:
							{41 to: 43}
						evaluating: [
							(#_coverageTracker7455407_
								coverAll:
									{37 to: 39}
								by: Set) new ])
				into: [ :transactionsSoFar :bankEntity |
					#_coverageTracker7455407_
						coverAll:
							{101 to: 106}
						evaluating: [
							(#_coverageTracker7455407_
								cover: (83 to: 99)
								declaredAt: (52 to: 68)
								by: transactionsSoFar) union:
								(#_coverageTracker7455407_
									coverAll:
										{119 to: 130}
									evaluating: [
										(#_coverageTracker7455407_
											cover: (108 to: 117)
											declaredAt: (71 to: 80)
											by: bankEntity) transactions ]) ]]].! !

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:33:40'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker7455446_ markAsExecuted.
	^ #_coverageTracker7455446_
		coverAll:
			{32 to: 35}
		evaluating: [
			(#_coverageTracker7455446_
				cover: (19 to: 30)
				declaredAt: (19 to: 30)
				by: transactions) copy ].! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:33:40'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:33:40'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:33:40'!
ERROR!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker7455507_ markAsExecuted.
	^ #_coverageTracker7455507_
		coverAll:
			{42 to: 52}
		evaluating: [
			(#_coverageTracker7455507_
				cover: (33 to: 40)
				declaredAt: (33 to: 40)
				by: accounts) anySatisfy: [ :bankEntity |
				#_coverageTracker7455507_
					coverAll:
						{79 to: 92}
					evaluating: [
						(#_coverageTracker7455507_
							cover: (68 to: 77)
							declaredAt: (56 to: 65)
							by: bankEntity) hasRegistered:
							(#_coverageTracker7455507_
								cover: (94 to: 105)
								declaredAt: (16 to: 27)
								by: aTransaction) ]]].! !

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:33:40'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker7455444_ markAsExecuted.
	^ #_coverageTracker7455444_
		coverAll:
			{46 to: 54}
		evaluating: [
			(#_coverageTracker7455444_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: transactions) includes:
				(#_coverageTracker7455444_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ].! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:33:40'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:33:40'!
ERROR!
!Behavior method!
duplicatedAccountErrorMessage
	#_coverageTracker7455499_ markAsExecuted.
	^ #_coverageTracker7455499_
		coverAll:
			{34 to: 77}
		byLiteralOrPseudoVariable: 'Can not add duplicated account to porfolio'.! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:33:40'!
PASSED!
!Behavior method!
containsAnyAccountFrom: anAccount
	| allAccountsOfSelf |
	#_coverageTracker7455413_ markAsExecuted.
	#_coverageTracker7455413_
		cover: (57 to: 73)
		declaredAt: (37 to: 53)
		by:
			(allAccountsOfSelf _ #_coverageTracker7455413_
				coverAll:
					{82 to: 92}
				evaluating: [
					(#_coverageTracker7455413_
						coverAll:
							{77 to: 80}
						byLiteralOrPseudoVariable: self) allAccounts ]).
	^ #_coverageTracker7455413_
		coverAll:
			{255 to: 257}
		evaluating: [
			(#_coverageTracker7455413_
				coverAll:
					{126 to: 136}
				evaluating: [
					(#_coverageTracker7455413_
						coverAll:
							{114 to: 124}
						evaluating: [
							(#_coverageTracker7455413_
								cover: (104 to: 112)
								declaredAt: (25 to: 33)
								by: anAccount) allAccounts ]) anySatisfy: [ :aChildrenOfAnAccount |
						#_coverageTracker7455413_
							coverAll:
								{216 to: 218}
							evaluating: [
								(#_coverageTracker7455413_
									coverAll:
										{184 to: 192}
									evaluating: [
										(#_coverageTracker7455413_
											cover: (166 to: 182)
											declaredAt: (37 to: 53)
											by: allAccountsOfSelf) includes:
											(#_coverageTracker7455413_
												cover: (194 to: 213)
												declaredAt: (140 to: 159)
												by: aChildrenOfAnAccount) ]) or:
									(#_coverageTracker7455413_
										coverAll:
											{225 to: 225}
										evaluating: [
											(#_coverageTracker7455413_
												coverAll:
													{220 to: 223}
												byLiteralOrPseudoVariable: self) =
												(#_coverageTracker7455413_
													cover: (227 to: 246)
													declaredAt: (140 to: 159)
													by: aChildrenOfAnAccount) ]) ]]]) or:
				(#_coverageTracker7455413_
					coverAll:
						{278 to: 286}
					evaluating: [
						(#_coverageTracker7455413_
							cover: (260 to: 276)
							declaredAt: (37 to: 53)
							by: allAccountsOfSelf) includes:
							(#_coverageTracker7455413_
								cover: (288 to: 296)
								declaredAt: (25 to: 33)
								by: anAccount) ]) ].! !
!Behavior method!
allAccounts
	#_coverageTracker7455455_ markAsExecuted.
	^ #_coverageTracker7455455_
		coverAll:
			{25 to: 31. 41 to: 45}
		evaluating: [
			(#_coverageTracker7455455_
				cover: (16 to: 23)
				declaredAt: (16 to: 23)
				by: accounts)
				inject:
					(#_coverageTracker7455455_
						coverAll:
							{37 to: 39}
						evaluating: [
							(#_coverageTracker7455455_
								coverAll:
									{33 to: 35}
								by: Set) new ])
				into: [ :allAccountsSoFar :account |
					#_coverageTracker7455455_
						coverAll:
							{93 to: 96}
						evaluating: [
							(#_coverageTracker7455455_
								cover: (76 to: 91)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) add:
								(#_coverageTracker7455455_
									cover: (98 to: 104)
									declaredAt: (67 to: 73)
									by: account) ].
					#_coverageTracker7455455_
						coverAll:
							{124 to: 129}
						evaluating: [
							(#_coverageTracker7455455_
								cover: (107 to: 122)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) union:
								(#_coverageTracker7455455_
									coverAll:
										{139 to: 149}
									evaluating: [
										(#_coverageTracker7455455_
											cover: (131 to: 137)
											declaredAt: (67 to: 73)
											by: account) allAccounts ]) ]]].! !
!Behavior method!
allAccounts
	#_coverageTracker7455436_ markAsExecuted.
	^ #_coverageTracker7455436_
		coverAll:
			{20 to: 24}
		evaluating: [
			(#_coverageTracker7455436_
				coverAll:
					{16 to: 18}
				by: Set) with:
				(#_coverageTracker7455436_
					coverAll:
						{26 to: 29}
					byLiteralOrPseudoVariable: self) ].! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:33:40'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:33:40'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:33:40'!
ERROR!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:33:40'!
ERROR!
!Behavior method!
hasInAHigherLevelPortfolioAnyAccountFrom: anAccount
	#_coverageTracker7455553_ markAsExecuted.
	^ #_coverageTracker7455553_
		coverAll:
			{190 to: 192. 291 to: 293}
		evaluating: [
			(#_coverageTracker7455553_
				coverAll:
					{68 to: 78}
				evaluating: [
					(#_coverageTracker7455553_
						cover: (59 to: 66)
						declaredAt: (59 to: 66)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker7455553_
							coverAll:
								{138 to: 140}
							evaluating: [
								(#_coverageTracker7455553_
									coverAll:
										{100 to: 122}
									evaluating: [
										(#_coverageTracker7455553_
											cover: (92 to: 98)
											declaredAt: (82 to: 88)
											by: account) containsAnyAccountFrom:
											(#_coverageTracker7455553_
												cover: (124 to: 132)
												declaredAt: (43 to: 51)
												by: anAccount) ]) or: [
									#_coverageTracker7455553_
										coverAll:
											{165 to: 173}
										evaluating: [
											(#_coverageTracker7455553_
												coverAll:
													{153 to: 163}
												evaluating: [
													(#_coverageTracker7455553_
														cover: (143 to: 151)
														declaredAt: (43 to: 51)
														by: anAccount) allAccounts ]) includes:
												(#_coverageTracker7455553_
													cover: (175 to: 181)
													declaredAt: (82 to: 88)
													by: account) ]]]]])
				or:
					(#_coverageTracker7455553_
						coverAll:
							{203 to: 213}
						evaluating: [
							(#_coverageTracker7455553_
								cover: (195 to: 201)
								declaredAt: (195 to: 201)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker7455553_
									coverAll:
										{234 to: 274}
									evaluating: [
										(#_coverageTracker7455553_
											cover: (226 to: 232)
											declaredAt: (217 to: 223)
											by: aParent) hasInAHigherLevelPortfolioAnyAccountFrom:
											(#_coverageTracker7455553_
												cover: (276 to: 284)
												declaredAt: (43 to: 51)
												by: anAccount) ]]])
				or:
					(#_coverageTracker7455553_
						coverAll:
							{301 to: 301}
						evaluating: [
							(#_coverageTracker7455553_
								coverAll:
									{296 to: 299}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker7455553_
									cover: (303 to: 311)
									declaredAt: (43 to: 51)
									by: anAccount) ])
			"Lo importante es la buena onda" ].! !

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:33:40'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:34:44' prior: 50586733!
test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio
	|portfolio4 portfolio5 recepctiveAccount|
	portfolio4 _ PortfolioAccount new.
	portfolio4 add: portfolio3.
	portfolio3 add: receptiveAccount1.
	portfolio4 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:35:01' prior: 50589044!
test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio
	|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio4 add: portfolio3.
	portfolio3 add: receptiveAccount1.
	portfolio4 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:36:13'!
test17StressTest
	|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio4 add: portfolio3.
	portfolio4 add: portfolio2.
	
	portfolio3 add: receptiveAccount1.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:39:36' prior: 50589081!
test17StressTest
	|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio5 _ PortfolioAccount new.
	portfolio5 add: portfolio4.
	portfolio4 add: portfolio3.
	portfolio5 add: portfolio2.
	portfolio5 add: receptiveAccount2.
	portfolio3 add: receptiveAccount1.
	portfolio3 add:portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !

!testRun: #PortfolioAccountTest #test17StressTest stamp: 'VV 10/17/2022 15:39:37'!
ERROR!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:40:08'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:40:08'!
ERROR!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:40:08'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:40:08'!
ERROR!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:40:08'!
ERROR!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:40:08'!
ERROR!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:40:08'!
ERROR!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:40:08'!
PASSED!

!testRun: #PortfolioAccountTest #test17StressTest stamp: 'VV 10/17/2022 15:40:08'!
ERROR!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:40:17'!
ERROR!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:40:17'!
ERROR!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:40:17'!
ERROR!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:40:17'!
ERROR!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:40:17'!
ERROR!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:40:17'!
ERROR!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:40:17'!
ERROR!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:40:17'!
PASSED!

!testRun: #PortfolioAccountTest #test17StressTest stamp: 'VV 10/17/2022 15:40:17'!
ERROR!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:40:21'!
ERROR!
!Account methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:40:47'!
containsAnyAccountFrom: anAccount

	self subclassResponsibility .! !
!ReceptiveAccount methodsFor: 'testing-private' stamp: 'VV 10/17/2022 15:40:47' overrides: 50589278!
containsAnyAccountFrom: anAccount

	^self = anAccount! !

!methodRemoval: Account #containsAnyAccountFromAccount: stamp: 'VV 10/17/2022 15:40:47'!
containsAnyAccountFromAccount: anAccount

	self subclassResponsibility .!

!methodRemoval: ReceptiveAccount #containsAnyAccountFromAccount: stamp: 'VV 10/17/2022 15:40:47'!
containsAnyAccountFromAccount: anAccount

	^self = anAccount!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test17StressTest stamp: 'VV 10/17/2022 15:40:53'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:40:54'!
PASSED!

!testRun: #PortfolioAccountTest #test17StressTest stamp: 'VV 10/17/2022 15:40:54'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:41:00'!
test18StressTest
	|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio5 _ PortfolioAccount new.
	portfolio5 add: portfolio4.
	portfolio4 add: portfolio3.
	portfolio5 add: portfolio2.
	portfolio5 add: receptiveAccount2.
	portfolio3 add: receptiveAccount1.
	portfolio3 add:portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !

!methodRemoval: PortfolioAccountTest #test17StressTest stamp: 'VV 10/17/2022 15:41:00'!
test17StressTest
	|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio5 _ PortfolioAccount new.
	portfolio5 add: portfolio4.
	portfolio4 add: portfolio3.
	portfolio5 add: portfolio2.
	portfolio5 add: receptiveAccount2.
	portfolio3 add: receptiveAccount1.
	portfolio3 add:portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	!
!Behavior method!
initialize
	#_coverageTracker7898948_ markAsExecuted.
	#_coverageTracker7898948_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ #_coverageTracker7898948_
				coverAll:
					{43 to: 45}
				evaluating: [
					(#_coverageTracker7898948_
						coverAll:
							{25 to: 41}
						by: OrderedCollection) new ]).
	#_coverageTracker7898948_
		coverAll:
			{55 to: 64}
		evaluating: [ super initialize ].! !
!Behavior method!
initialize
	#_coverageTracker7899081_ markAsExecuted.
	#_coverageTracker7899081_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(parents _ #_coverageTracker7899081_
				coverAll:
					{42 to: 44}
				evaluating: [
					(#_coverageTracker7899081_
						coverAll:
							{24 to: 40}
						by: OrderedCollection) new ]).! !
!Behavior method!
initialize
	#_coverageTracker7899099_ markAsExecuted.
	#_coverageTracker7899099_
		cover: (14 to: 25)
		declaredAt: (14 to: 25)
		by:
			(transactions _ #_coverageTracker7899099_
				coverAll:
					{34 to: 36}
				evaluating: [
					(#_coverageTracker7899099_
						coverAll:
							{30 to: 32}
						by: Set) new ]).
	#_coverageTracker7899099_
		coverAll:
			{46 to: 55}
		evaluating: [ super initialize ].! !
!Behavior method!
balance
	#_coverageTracker7899181_ markAsExecuted.
	^ #_coverageTracker7899181_
		coverAll:
			{21 to: 24. 61 to: 68}
		evaluating: [
			(#_coverageTracker7899181_
				cover: (12 to: 19)
				declaredAt: (12 to: 19)
				by: accounts)
				sum: [ :bankEntity |
					#_coverageTracker7899181_
						coverAll:
							{52 to: 58}
						evaluating: [
							(#_coverageTracker7899181_
								cover: (41 to: 50)
								declaredAt: (28 to: 37)
								by: bankEntity) balance ]]
				ifEmpty: [
					#_coverageTracker7899181_
						coverAll:
							{71 to: 71}
						byLiteralOrPseudoVariable: 0 ]].! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker7899008_ markAsExecuted.
	#_coverageTracker7899008_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ #_coverageTracker7899008_
				coverAll:
					{71 to: 74}
				evaluating: [
					(#_coverageTracker7899008_
						coverAll:
							{66 to: 69}
						byLiteralOrPseudoVariable: self) for:
						(#_coverageTracker7899008_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]).
	#_coverageTracker7899008_
		coverAll:
			{93 to: 101}
		evaluating: [
			(#_coverageTracker7899008_
				cover: (85 to: 91)
				declaredAt: (22 to: 28)
				by: account) register:
				(#_coverageTracker7899008_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ].
	^ #_coverageTracker7899008_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
for: aValue
	#_coverageTracker7899137_ markAsExecuted.
	^ #_coverageTracker7899137_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker7899137_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker7899137_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker7899137_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker7899127_ markAsExecuted.
	#_coverageTracker7899127_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker7899127_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
register: aTransaction
	#_coverageTracker7899083_ markAsExecuted.
	#_coverageTracker7899083_
		coverAll:
			{39 to: 42}
		evaluating: [
			(#_coverageTracker7899083_
				cover: (26 to: 37)
				declaredAt: (26 to: 37)
				by: transactions) add:
				(#_coverageTracker7899083_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ].! !
!Behavior method!
add: anAccount
	#_coverageTracker7898993_ markAsExecuted.
	#_coverageTracker7898993_
		coverAll:
			{46 to: 52}
		evaluating: [
			(#_coverageTracker7898993_
				coverAll:
					{24 to: 33}
				evaluating: [
					(#_coverageTracker7898993_
						coverAll:
							{19 to: 22}
						byLiteralOrPseudoVariable: self) cannotAdd:
						(#_coverageTracker7898993_
							cover: (35 to: 43)
							declaredAt: (6 to: 14)
							by: anAccount) ]) ifTrue: [
				#_coverageTracker7898993_
					coverAll:
						{60 to: 65}
					evaluating: [
						(#_coverageTracker7898993_
							coverAll:
								{55 to: 58}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker7898993_
								coverAll:
									{78 to: 106}
								evaluating: [
									(#_coverageTracker7898993_
										coverAll:
											{72 to: 76}
										evaluating: [
											(#_coverageTracker7898993_
												coverAll:
													{67 to: 70}
												byLiteralOrPseudoVariable: self) class ]) duplicatedAccountErrorMessage ]) ]]].
	#_coverageTracker7898993_
		coverAll:
			{122 to: 125}
		evaluating: [
			(#_coverageTracker7898993_
				cover: (113 to: 120)
				declaredAt: (113 to: 120)
				by: accounts) add:
				(#_coverageTracker7898993_
					cover: (127 to: 135)
					declaredAt: (6 to: 14)
					by: anAccount) ].
	#_coverageTracker7898993_
		coverAll:
			{149 to: 158}
		evaluating: [
			(#_coverageTracker7898993_
				cover: (139 to: 147)
				declaredAt: (6 to: 14)
				by: anAccount) addParent:
				(#_coverageTracker7898993_
					coverAll:
						{160 to: 163}
					byLiteralOrPseudoVariable: self) ].! !
!Behavior method!
cannotAdd: anAccount
	#_coverageTracker7899102_ markAsExecuted.
	^ #_coverageTracker7899102_
		coverAll:
			{105 to: 107. 206 to: 208}
		evaluating: [
			(#_coverageTracker7899102_
				coverAll:
					{36 to: 46}
				evaluating: [
					(#_coverageTracker7899102_
						cover: (27 to: 34)
						declaredAt: (27 to: 34)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker7899102_
							coverAll:
								{67 to: 89}
							evaluating: [
								(#_coverageTracker7899102_
									cover: (59 to: 65)
									declaredAt: (50 to: 56)
									by: account) containsAnyAccountFrom:
									(#_coverageTracker7899102_
										cover: (91 to: 99)
										declaredAt: (12 to: 20)
										by: anAccount) ]]])
				or:
					(#_coverageTracker7899102_
						coverAll:
							{121 to: 131}
						evaluating: [
							(#_coverageTracker7899102_
								cover: (113 to: 119)
								declaredAt: (113 to: 119)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker7899102_
									coverAll:
										{152 to: 192}
									evaluating: [
										(#_coverageTracker7899102_
											cover: (144 to: 150)
											declaredAt: (135 to: 141)
											by: aParent) hasInAHigherLevelPortfolioAnyAccountFrom:
											(#_coverageTracker7899102_
												cover: (194 to: 202)
												declaredAt: (12 to: 20)
												by: anAccount) ]]])
				or:
					(#_coverageTracker7899102_
						coverAll:
							{219 to: 219}
						evaluating: [
							(#_coverageTracker7899102_
								coverAll:
									{214 to: 217}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker7899102_
									cover: (221 to: 229)
									declaredAt: (12 to: 20)
									by: anAccount) ]) ].! !
!Behavior method!
addParent: aPortfolioAccount
	#_coverageTracker7898958_ markAsExecuted.
	#_coverageTracker7898958_
		coverAll:
			{41 to: 44}
		evaluating: [
			(#_coverageTracker7898958_
				cover: (33 to: 39)
				declaredAt: (33 to: 39)
				by: parents) add:
				(#_coverageTracker7898958_
					cover: (46 to: 62)
					declaredAt: (12 to: 28)
					by: aPortfolioAccount) ].! !
!Behavior method!
balance
	#_coverageTracker7899141_ markAsExecuted.
	^ #_coverageTracker7899141_
		coverAll:
			{25 to: 31. 35 to: 39}
		evaluating: [
			(#_coverageTracker7899141_
				cover: (12 to: 23)
				declaredAt: (12 to: 23)
				by: transactions)
				inject:
					(#_coverageTracker7899141_
						coverAll:
							{33 to: 33}
						byLiteralOrPseudoVariable: 0)
				into: [ :balance :aTransaction |
					#_coverageTracker7899141_
						coverAll:
							{78 to: 92}
						evaluating: [
							(#_coverageTracker7899141_
								cover: (65 to: 76)
								declaredAt: (51 to: 62)
								by: aTransaction) applyToBalance:
								(#_coverageTracker7899141_
									cover: (94 to: 100)
									declaredAt: (42 to: 48)
									by: balance) ]]].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker7898945_ markAsExecuted.
	^ #_coverageTracker7898945_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker7898945_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) +
				(#_coverageTracker7898945_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!Behavior method!
for: aValue
	#_coverageTracker7899112_ markAsExecuted.
	^ #_coverageTracker7899112_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker7899112_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker7899112_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker7899112_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker7899097_ markAsExecuted.
	#_coverageTracker7899097_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker7899097_
				cover: (35 to: 40)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
containsAnyAccountFrom: anAccount
	#_coverageTracker7898989_ markAsExecuted.
	^ #_coverageTracker7898989_
		coverAll:
			{43 to: 43}
		evaluating: [
			(#_coverageTracker7898989_
				coverAll:
					{38 to: 41}
				byLiteralOrPseudoVariable: self) =
				(#_coverageTracker7898989_
					cover: (45 to: 53)
					declaredAt: (25 to: 33)
					by: anAccount) ].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker7899160_ markAsExecuted.
	^ #_coverageTracker7899160_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker7899160_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) -
				(#_coverageTracker7899160_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:41:04'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker7898973_ markAsExecuted.
	^ #_coverageTracker7898973_
		coverAll:
			{29 to: 35. 45 to: 49}
		evaluating: [
			(#_coverageTracker7898973_
				cover: (20 to: 27)
				declaredAt: (20 to: 27)
				by: accounts)
				inject:
					(#_coverageTracker7898973_
						coverAll:
							{41 to: 43}
						evaluating: [
							(#_coverageTracker7898973_
								coverAll:
									{37 to: 39}
								by: Set) new ])
				into: [ :transactionsSoFar :bankEntity |
					#_coverageTracker7898973_
						coverAll:
							{101 to: 106}
						evaluating: [
							(#_coverageTracker7898973_
								cover: (83 to: 99)
								declaredAt: (52 to: 68)
								by: transactionsSoFar) union:
								(#_coverageTracker7898973_
									coverAll:
										{119 to: 130}
									evaluating: [
										(#_coverageTracker7898973_
											cover: (108 to: 117)
											declaredAt: (71 to: 80)
											by: bankEntity) transactions ]) ]]].! !

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker7899066_ markAsExecuted.
	^ #_coverageTracker7899066_
		coverAll:
			{32 to: 35}
		evaluating: [
			(#_coverageTracker7899066_
				cover: (19 to: 30)
				declaredAt: (19 to: 30)
				by: transactions) copy ].! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:41:04'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:41:04'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker7899122_ markAsExecuted.
	^ #_coverageTracker7899122_
		coverAll:
			{42 to: 52}
		evaluating: [
			(#_coverageTracker7899122_
				cover: (33 to: 40)
				declaredAt: (33 to: 40)
				by: accounts) anySatisfy: [ :bankEntity |
				#_coverageTracker7899122_
					coverAll:
						{79 to: 92}
					evaluating: [
						(#_coverageTracker7899122_
							cover: (68 to: 77)
							declaredAt: (56 to: 65)
							by: bankEntity) hasRegistered:
							(#_coverageTracker7899122_
								cover: (94 to: 105)
								declaredAt: (16 to: 27)
								by: aTransaction) ]]].! !

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker7899062_ markAsExecuted.
	^ #_coverageTracker7899062_
		coverAll:
			{46 to: 54}
		evaluating: [
			(#_coverageTracker7899062_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: transactions) includes:
				(#_coverageTracker7899062_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ].! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:41:04'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!Behavior method!
duplicatedAccountErrorMessage
	#_coverageTracker7899114_ markAsExecuted.
	^ #_coverageTracker7899114_
		coverAll:
			{34 to: 77}
		byLiteralOrPseudoVariable: 'Can not add duplicated account to porfolio'.! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!Behavior method!
containsAnyAccountFrom: anAccount
	| allAccountsOfSelf |
	#_coverageTracker7898979_ markAsExecuted.
	#_coverageTracker7898979_
		cover: (57 to: 73)
		declaredAt: (37 to: 53)
		by:
			(allAccountsOfSelf _ #_coverageTracker7898979_
				coverAll:
					{82 to: 92}
				evaluating: [
					(#_coverageTracker7898979_
						coverAll:
							{77 to: 80}
						byLiteralOrPseudoVariable: self) allAccounts ]).
	^ #_coverageTracker7898979_
		coverAll:
			{255 to: 257}
		evaluating: [
			(#_coverageTracker7898979_
				coverAll:
					{126 to: 136}
				evaluating: [
					(#_coverageTracker7898979_
						coverAll:
							{114 to: 124}
						evaluating: [
							(#_coverageTracker7898979_
								cover: (104 to: 112)
								declaredAt: (25 to: 33)
								by: anAccount) allAccounts ]) anySatisfy: [ :aChildrenOfAnAccount |
						#_coverageTracker7898979_
							coverAll:
								{216 to: 218}
							evaluating: [
								(#_coverageTracker7898979_
									coverAll:
										{184 to: 192}
									evaluating: [
										(#_coverageTracker7898979_
											cover: (166 to: 182)
											declaredAt: (37 to: 53)
											by: allAccountsOfSelf) includes:
											(#_coverageTracker7898979_
												cover: (194 to: 213)
												declaredAt: (140 to: 159)
												by: aChildrenOfAnAccount) ]) or:
									(#_coverageTracker7898979_
										coverAll:
											{225 to: 225}
										evaluating: [
											(#_coverageTracker7898979_
												coverAll:
													{220 to: 223}
												byLiteralOrPseudoVariable: self) =
												(#_coverageTracker7898979_
													cover: (227 to: 246)
													declaredAt: (140 to: 159)
													by: aChildrenOfAnAccount) ]) ]]]) or:
				(#_coverageTracker7898979_
					coverAll:
						{278 to: 286}
					evaluating: [
						(#_coverageTracker7898979_
							cover: (260 to: 276)
							declaredAt: (37 to: 53)
							by: allAccountsOfSelf) includes:
							(#_coverageTracker7898979_
								cover: (288 to: 296)
								declaredAt: (25 to: 33)
								by: anAccount) ]) ].! !
!Behavior method!
allAccounts
	#_coverageTracker7899073_ markAsExecuted.
	^ #_coverageTracker7899073_
		coverAll:
			{25 to: 31. 41 to: 45}
		evaluating: [
			(#_coverageTracker7899073_
				cover: (16 to: 23)
				declaredAt: (16 to: 23)
				by: accounts)
				inject:
					(#_coverageTracker7899073_
						coverAll:
							{37 to: 39}
						evaluating: [
							(#_coverageTracker7899073_
								coverAll:
									{33 to: 35}
								by: Set) new ])
				into: [ :allAccountsSoFar :account |
					#_coverageTracker7899073_
						coverAll:
							{93 to: 96}
						evaluating: [
							(#_coverageTracker7899073_
								cover: (76 to: 91)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) add:
								(#_coverageTracker7899073_
									cover: (98 to: 104)
									declaredAt: (67 to: 73)
									by: account) ].
					#_coverageTracker7899073_
						coverAll:
							{124 to: 129}
						evaluating: [
							(#_coverageTracker7899073_
								cover: (107 to: 122)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) union:
								(#_coverageTracker7899073_
									coverAll:
										{139 to: 149}
									evaluating: [
										(#_coverageTracker7899073_
											cover: (131 to: 137)
											declaredAt: (67 to: 73)
											by: account) allAccounts ]) ]]].! !
!Behavior method!
allAccounts
	#_coverageTracker7899004_ markAsExecuted.
	^ #_coverageTracker7899004_
		coverAll:
			{20 to: 24}
		evaluating: [
			(#_coverageTracker7899004_
				coverAll:
					{16 to: 18}
				by: Set) with:
				(#_coverageTracker7899004_
					coverAll:
						{26 to: 29}
					byLiteralOrPseudoVariable: self) ].! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:41:04'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!Behavior method!
hasInAHigherLevelPortfolioAnyAccountFrom: anAccount
	#_coverageTracker7899164_ markAsExecuted.
	^ #_coverageTracker7899164_
		coverAll:
			{190 to: 192. 291 to: 293}
		evaluating: [
			(#_coverageTracker7899164_
				coverAll:
					{68 to: 78}
				evaluating: [
					(#_coverageTracker7899164_
						cover: (59 to: 66)
						declaredAt: (59 to: 66)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker7899164_
							coverAll:
								{138 to: 140}
							evaluating: [
								(#_coverageTracker7899164_
									coverAll:
										{100 to: 122}
									evaluating: [
										(#_coverageTracker7899164_
											cover: (92 to: 98)
											declaredAt: (82 to: 88)
											by: account) containsAnyAccountFrom:
											(#_coverageTracker7899164_
												cover: (124 to: 132)
												declaredAt: (43 to: 51)
												by: anAccount) ]) or: [
									#_coverageTracker7899164_
										coverAll:
											{165 to: 173}
										evaluating: [
											(#_coverageTracker7899164_
												coverAll:
													{153 to: 163}
												evaluating: [
													(#_coverageTracker7899164_
														cover: (143 to: 151)
														declaredAt: (43 to: 51)
														by: anAccount) allAccounts ]) includes:
												(#_coverageTracker7899164_
													cover: (175 to: 181)
													declaredAt: (82 to: 88)
													by: account) ]]]]])
				or:
					(#_coverageTracker7899164_
						coverAll:
							{203 to: 213}
						evaluating: [
							(#_coverageTracker7899164_
								cover: (195 to: 201)
								declaredAt: (195 to: 201)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker7899164_
									coverAll:
										{234 to: 274}
									evaluating: [
										(#_coverageTracker7899164_
											cover: (226 to: 232)
											declaredAt: (217 to: 223)
											by: aParent) hasInAHigherLevelPortfolioAnyAccountFrom:
											(#_coverageTracker7899164_
												cover: (276 to: 284)
												declaredAt: (43 to: 51)
												by: anAccount) ]]])
				or:
					(#_coverageTracker7899164_
						coverAll:
							{301 to: 301}
						evaluating: [
							(#_coverageTracker7899164_
								coverAll:
									{296 to: 299}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker7899164_
									cover: (303 to: 311)
									declaredAt: (43 to: 51)
									by: anAccount) ])
			"Lo importante es la buena onda" ].! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:41:04'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:41:04'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:41:04'!
PASSED!

!testRun: #PortfolioAccountTest #test18StressTest stamp: 'VV 10/17/2022 15:41:04'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:41:31'!
test18StressTestWithError
	|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio5 _ PortfolioAccount new.
	portfolio5 add: portfolio4.
	portfolio4 add: portfolio3.
	portfolio5 add: portfolio2.
	portfolio5 add: receptiveAccount2.
	portfolio3 add: receptiveAccount1.
	portfolio3 add:portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	! !

!methodRemoval: PortfolioAccountTest #test18StressTest stamp: 'VV 10/17/2022 15:41:33'!
test18StressTest
	|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio5 _ PortfolioAccount new.
	portfolio5 add: portfolio4.
	portfolio4 add: portfolio3.
	portfolio5 add: portfolio2.
	portfolio5 add: receptiveAccount2.
	portfolio3 add: receptiveAccount1.
	portfolio3 add:portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1
	!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:42:19' prior: 50590166!
test18StressTestWithError
	"|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio5 _ PortfolioAccount new.
	portfolio5 add: portfolio4.
	portfolio4 add: portfolio3.
	portfolio5 add: portfolio2.
	portfolio5 add: receptiveAccount2.
	portfolio3 add: receptiveAccount1.
	portfolio3 add:portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1" self assert: True equals: True
	! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:42:21' prior: 50590205!
test18StressTestWithError
	"|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio5 _ PortfolioAccount new.
	portfolio5 add: portfolio4.
	portfolio4 add: portfolio3.
	portfolio5 add: portfolio2.
	portfolio5 add: receptiveAccount2.
	portfolio3 add: receptiveAccount1.
	portfolio3 add:portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1" self assert: True equals: True
	
	! !

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:42:21'!
PASSED!

TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 receptiveAccount1 receptiveAccount2 receptiveAccount3 transaction1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 receptiveAccount1 receptiveAccount2 receptiveAccount3 transaction1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'VV 10/17/2022 15:42:46'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 receptiveAccount1 receptiveAccount2 receptiveAccount3 transaction1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:43:04' prior: 50589063!
test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio
	"|portfolio4 portfolio5|
	portfolio4 _ PortfolioAccount new.
	portfolio4 add: portfolio3.
	portfolio3 add: receptiveAccount1.
	portfolio4 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1" self assert: True equals: True
	! !

TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 receptiveAccount1 receptiveAccount2 receptiveAccount3 transaction1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 receptiveAccount1 receptiveAccount2 receptiveAccount3 transaction1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioAccountTest category: 'Portfolio-Ejercicio' stamp: 'VV 10/17/2022 15:43:33'!
TestCase subclass: #PortfolioAccountTest
	instanceVariableNames: 'portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 receptiveAccount1 receptiveAccount2 receptiveAccount3 transaction1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioAccountTest methodsFor: 'setUp' stamp: 'VV 10/17/2022 15:43:43' prior: 50580100 overrides: 16961394!
setUp

	portfolio1 _ PortfolioAccount new.
	portfolio2 _ PortfolioAccount new.
	portfolio3 _ PortfolioAccount new.
	portfolio4 _ PortfolioAccount new.
	portfolio5 _ PortfolioAccount new.
	receptiveAccount1 _ ReceptiveAccount new.
	receptiveAccount2 _ ReceptiveAccount new.
	receptiveAccount3 _ ReceptiveAccount new.! !
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:44:03' prior: 50590355!
test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio
	
	portfolio4 add: portfolio3.
	portfolio3 add: receptiveAccount1.
	portfolio4 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1! !

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:44:04'!
PASSED!

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:44:04'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:44:16' prior: 50590226!
test18StressTestWithError
	portfolio5 add: portfolio4.
	portfolio4 add: portfolio3.
	portfolio5 add: portfolio2.
	portfolio5 add: receptiveAccount2.
	portfolio3 add: receptiveAccount1.
	portfolio3 add:portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1	
	! !

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:44:16'!
PASSED!

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:44:16'!
PASSED!
!PortfolioAccountTest methodsFor: 'tests' stamp: 'VV 10/17/2022 15:44:42' prior: 50590517!
test18StressTestWithError
	portfolio5 add: portfolio4.
	portfolio4 add: portfolio3.
	portfolio5 add: portfolio2.
	portfolio5 add: receptiveAccount2.
	portfolio3 add: receptiveAccount1.
	portfolio3 add: portfolio2.
	portfolio1 add: receptiveAccount1.
	transaction1 _ Deposit register: 50  on: receptiveAccount1.
		
	self assertThatDoing: [portfolio2 add: portfolio1] raisesDuplicatedAccountErrorAndDoesntChangePortfolio: portfolio1	
	! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:44:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'VV 10/17/2022 15:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'VV 10/17/2022 15:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'VV 10/17/2022 15:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'VV 10/17/2022 15:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'VV 10/17/2022 15:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoesNotKnowNotRegisteredTransactions stamp: 'VV 10/17/2022 15:44:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'VV 10/17/2022 15:44:54'!
PASSED!

!methodRemoval: Withdraw #signedValue stamp: 'VV 10/17/2022 15:47:37'!
signedValue

	 ^ 0 - value!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:47:46'!
PASSED!

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:47:46'!
PASSED!
!Behavior method!
initialize
	#_coverageTracker8303653_ markAsExecuted.
	#_coverageTracker8303653_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ #_coverageTracker8303653_
				coverAll:
					{43 to: 45}
				evaluating: [
					(#_coverageTracker8303653_
						coverAll:
							{25 to: 41}
						by: OrderedCollection) new ]).
	#_coverageTracker8303653_
		coverAll:
			{55 to: 64}
		evaluating: [ super initialize ].! !
!Behavior method!
initialize
	#_coverageTracker8303737_ markAsExecuted.
	#_coverageTracker8303737_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(parents _ #_coverageTracker8303737_
				coverAll:
					{42 to: 44}
				evaluating: [
					(#_coverageTracker8303737_
						coverAll:
							{24 to: 40}
						by: OrderedCollection) new ]).! !
!Behavior method!
initialize
	#_coverageTracker8303756_ markAsExecuted.
	#_coverageTracker8303756_
		cover: (14 to: 25)
		declaredAt: (14 to: 25)
		by:
			(transactions _ #_coverageTracker8303756_
				coverAll:
					{34 to: 36}
				evaluating: [
					(#_coverageTracker8303756_
						coverAll:
							{30 to: 32}
						by: Set) new ]).
	#_coverageTracker8303756_
		coverAll:
			{46 to: 55}
		evaluating: [ super initialize ].! !
!Behavior method!
balance
	#_coverageTracker8303839_ markAsExecuted.
	^ #_coverageTracker8303839_
		coverAll:
			{21 to: 24. 61 to: 68}
		evaluating: [
			(#_coverageTracker8303839_
				cover: (12 to: 19)
				declaredAt: (12 to: 19)
				by: accounts)
				sum: [ :bankEntity |
					#_coverageTracker8303839_
						coverAll:
							{52 to: 58}
						evaluating: [
							(#_coverageTracker8303839_
								cover: (41 to: 50)
								declaredAt: (28 to: 37)
								by: bankEntity) balance ]]
				ifEmpty: [
					#_coverageTracker8303839_
						coverAll:
							{71 to: 71}
						byLiteralOrPseudoVariable: 0 ]].! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:47:48'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker8303712_ markAsExecuted.
	#_coverageTracker8303712_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ #_coverageTracker8303712_
				coverAll:
					{71 to: 74}
				evaluating: [
					(#_coverageTracker8303712_
						coverAll:
							{66 to: 69}
						byLiteralOrPseudoVariable: self) for:
						(#_coverageTracker8303712_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]).
	#_coverageTracker8303712_
		coverAll:
			{93 to: 101}
		evaluating: [
			(#_coverageTracker8303712_
				cover: (85 to: 91)
				declaredAt: (22 to: 28)
				by: account) register:
				(#_coverageTracker8303712_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ].
	^ #_coverageTracker8303712_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
for: aValue
	#_coverageTracker8303797_ markAsExecuted.
	^ #_coverageTracker8303797_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker8303797_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker8303797_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker8303797_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker8303787_ markAsExecuted.
	#_coverageTracker8303787_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker8303787_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
register: aTransaction
	#_coverageTracker8303739_ markAsExecuted.
	#_coverageTracker8303739_
		coverAll:
			{39 to: 42}
		evaluating: [
			(#_coverageTracker8303739_
				cover: (26 to: 37)
				declaredAt: (26 to: 37)
				by: transactions) add:
				(#_coverageTracker8303739_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ].! !
!Behavior method!
add: anAccount
	#_coverageTracker8303699_ markAsExecuted.
	#_coverageTracker8303699_
		coverAll:
			{46 to: 52}
		evaluating: [
			(#_coverageTracker8303699_
				coverAll:
					{24 to: 33}
				evaluating: [
					(#_coverageTracker8303699_
						coverAll:
							{19 to: 22}
						byLiteralOrPseudoVariable: self) cannotAdd:
						(#_coverageTracker8303699_
							cover: (35 to: 43)
							declaredAt: (6 to: 14)
							by: anAccount) ]) ifTrue: [
				#_coverageTracker8303699_
					coverAll:
						{60 to: 65}
					evaluating: [
						(#_coverageTracker8303699_
							coverAll:
								{55 to: 58}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker8303699_
								coverAll:
									{78 to: 106}
								evaluating: [
									(#_coverageTracker8303699_
										coverAll:
											{72 to: 76}
										evaluating: [
											(#_coverageTracker8303699_
												coverAll:
													{67 to: 70}
												byLiteralOrPseudoVariable: self) class ]) duplicatedAccountErrorMessage ]) ]]].
	#_coverageTracker8303699_
		coverAll:
			{122 to: 125}
		evaluating: [
			(#_coverageTracker8303699_
				cover: (113 to: 120)
				declaredAt: (113 to: 120)
				by: accounts) add:
				(#_coverageTracker8303699_
					cover: (127 to: 135)
					declaredAt: (6 to: 14)
					by: anAccount) ].
	#_coverageTracker8303699_
		coverAll:
			{149 to: 158}
		evaluating: [
			(#_coverageTracker8303699_
				cover: (139 to: 147)
				declaredAt: (6 to: 14)
				by: anAccount) addParent:
				(#_coverageTracker8303699_
					coverAll:
						{160 to: 163}
					byLiteralOrPseudoVariable: self) ].! !
!Behavior method!
cannotAdd: anAccount
	#_coverageTracker8303760_ markAsExecuted.
	^ #_coverageTracker8303760_
		coverAll:
			{105 to: 107. 206 to: 208}
		evaluating: [
			(#_coverageTracker8303760_
				coverAll:
					{36 to: 46}
				evaluating: [
					(#_coverageTracker8303760_
						cover: (27 to: 34)
						declaredAt: (27 to: 34)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker8303760_
							coverAll:
								{67 to: 89}
							evaluating: [
								(#_coverageTracker8303760_
									cover: (59 to: 65)
									declaredAt: (50 to: 56)
									by: account) containsAnyAccountFrom:
									(#_coverageTracker8303760_
										cover: (91 to: 99)
										declaredAt: (12 to: 20)
										by: anAccount) ]]])
				or:
					(#_coverageTracker8303760_
						coverAll:
							{121 to: 131}
						evaluating: [
							(#_coverageTracker8303760_
								cover: (113 to: 119)
								declaredAt: (113 to: 119)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker8303760_
									coverAll:
										{152 to: 192}
									evaluating: [
										(#_coverageTracker8303760_
											cover: (144 to: 150)
											declaredAt: (135 to: 141)
											by: aParent) hasInAHigherLevelPortfolioAnyAccountFrom:
											(#_coverageTracker8303760_
												cover: (194 to: 202)
												declaredAt: (12 to: 20)
												by: anAccount) ]]])
				or:
					(#_coverageTracker8303760_
						coverAll:
							{219 to: 219}
						evaluating: [
							(#_coverageTracker8303760_
								coverAll:
									{214 to: 217}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker8303760_
									cover: (221 to: 229)
									declaredAt: (12 to: 20)
									by: anAccount) ]) ].! !
!Behavior method!
addParent: aPortfolioAccount
	#_coverageTracker8303664_ markAsExecuted.
	#_coverageTracker8303664_
		coverAll:
			{41 to: 44}
		evaluating: [
			(#_coverageTracker8303664_
				cover: (33 to: 39)
				declaredAt: (33 to: 39)
				by: parents) add:
				(#_coverageTracker8303664_
					cover: (46 to: 62)
					declaredAt: (12 to: 28)
					by: aPortfolioAccount) ].! !
!Behavior method!
balance
	#_coverageTracker8303799_ markAsExecuted.
	^ #_coverageTracker8303799_
		coverAll:
			{25 to: 31. 35 to: 39}
		evaluating: [
			(#_coverageTracker8303799_
				cover: (12 to: 23)
				declaredAt: (12 to: 23)
				by: transactions)
				inject:
					(#_coverageTracker8303799_
						coverAll:
							{33 to: 33}
						byLiteralOrPseudoVariable: 0)
				into: [ :balance :aTransaction |
					#_coverageTracker8303799_
						coverAll:
							{78 to: 92}
						evaluating: [
							(#_coverageTracker8303799_
								cover: (65 to: 76)
								declaredAt: (51 to: 62)
								by: aTransaction) applyToBalance:
								(#_coverageTracker8303799_
									cover: (94 to: 100)
									declaredAt: (42 to: 48)
									by: balance) ]]].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker8303651_ markAsExecuted.
	^ #_coverageTracker8303651_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker8303651_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) +
				(#_coverageTracker8303651_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:47:48'!
PASSED!
!Behavior method!
for: aValue
	#_coverageTracker8303768_ markAsExecuted.
	^ #_coverageTracker8303768_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker8303768_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker8303768_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker8303768_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker8303753_ markAsExecuted.
	#_coverageTracker8303753_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker8303753_
				cover: (35 to: 40)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
containsAnyAccountFrom: anAccount
	#_coverageTracker8303695_ markAsExecuted.
	^ #_coverageTracker8303695_
		coverAll:
			{43 to: 43}
		evaluating: [
			(#_coverageTracker8303695_
				coverAll:
					{38 to: 41}
				byLiteralOrPseudoVariable: self) =
				(#_coverageTracker8303695_
					cover: (45 to: 53)
					declaredAt: (25 to: 33)
					by: anAccount) ].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker8303820_ markAsExecuted.
	^ #_coverageTracker8303820_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker8303820_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) -
				(#_coverageTracker8303820_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:47:48'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker8303678_ markAsExecuted.
	^ #_coverageTracker8303678_
		coverAll:
			{29 to: 35. 45 to: 49}
		evaluating: [
			(#_coverageTracker8303678_
				cover: (20 to: 27)
				declaredAt: (20 to: 27)
				by: accounts)
				inject:
					(#_coverageTracker8303678_
						coverAll:
							{41 to: 43}
						evaluating: [
							(#_coverageTracker8303678_
								coverAll:
									{37 to: 39}
								by: Set) new ])
				into: [ :transactionsSoFar :bankEntity |
					#_coverageTracker8303678_
						coverAll:
							{101 to: 106}
						evaluating: [
							(#_coverageTracker8303678_
								cover: (83 to: 99)
								declaredAt: (52 to: 68)
								by: transactionsSoFar) union:
								(#_coverageTracker8303678_
									coverAll:
										{119 to: 130}
									evaluating: [
										(#_coverageTracker8303678_
											cover: (108 to: 117)
											declaredAt: (71 to: 80)
											by: bankEntity) transactions ]) ]]].! !

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:47:48'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker8303722_ markAsExecuted.
	^ #_coverageTracker8303722_
		coverAll:
			{32 to: 35}
		evaluating: [
			(#_coverageTracker8303722_
				cover: (19 to: 30)
				declaredAt: (19 to: 30)
				by: transactions) copy ].! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:47:48'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker8303783_ markAsExecuted.
	^ #_coverageTracker8303783_
		coverAll:
			{42 to: 52}
		evaluating: [
			(#_coverageTracker8303783_
				cover: (33 to: 40)
				declaredAt: (33 to: 40)
				by: accounts) anySatisfy: [ :bankEntity |
				#_coverageTracker8303783_
					coverAll:
						{79 to: 92}
					evaluating: [
						(#_coverageTracker8303783_
							cover: (68 to: 77)
							declaredAt: (56 to: 65)
							by: bankEntity) hasRegistered:
							(#_coverageTracker8303783_
								cover: (94 to: 105)
								declaredAt: (16 to: 27)
								by: aTransaction) ]]].! !

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:47:48'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker8303718_ markAsExecuted.
	^ #_coverageTracker8303718_
		coverAll:
			{46 to: 54}
		evaluating: [
			(#_coverageTracker8303718_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: transactions) includes:
				(#_coverageTracker8303718_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ].! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:47:48'!
PASSED!
!Behavior method!
duplicatedAccountErrorMessage
	#_coverageTracker8303772_ markAsExecuted.
	^ #_coverageTracker8303772_
		coverAll:
			{34 to: 77}
		byLiteralOrPseudoVariable: 'Can not add duplicated account to porfolio'.! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:47:48'!
PASSED!
!Behavior method!
containsAnyAccountFrom: anAccount
	| allAccountsOfSelf |
	#_coverageTracker8303685_ markAsExecuted.
	#_coverageTracker8303685_
		cover: (57 to: 73)
		declaredAt: (37 to: 53)
		by:
			(allAccountsOfSelf _ #_coverageTracker8303685_
				coverAll:
					{82 to: 92}
				evaluating: [
					(#_coverageTracker8303685_
						coverAll:
							{77 to: 80}
						byLiteralOrPseudoVariable: self) allAccounts ]).
	^ #_coverageTracker8303685_
		coverAll:
			{255 to: 257}
		evaluating: [
			(#_coverageTracker8303685_
				coverAll:
					{126 to: 136}
				evaluating: [
					(#_coverageTracker8303685_
						coverAll:
							{114 to: 124}
						evaluating: [
							(#_coverageTracker8303685_
								cover: (104 to: 112)
								declaredAt: (25 to: 33)
								by: anAccount) allAccounts ]) anySatisfy: [ :aChildrenOfAnAccount |
						#_coverageTracker8303685_
							coverAll:
								{216 to: 218}
							evaluating: [
								(#_coverageTracker8303685_
									coverAll:
										{184 to: 192}
									evaluating: [
										(#_coverageTracker8303685_
											cover: (166 to: 182)
											declaredAt: (37 to: 53)
											by: allAccountsOfSelf) includes:
											(#_coverageTracker8303685_
												cover: (194 to: 213)
												declaredAt: (140 to: 159)
												by: aChildrenOfAnAccount) ]) or:
									(#_coverageTracker8303685_
										coverAll:
											{225 to: 225}
										evaluating: [
											(#_coverageTracker8303685_
												coverAll:
													{220 to: 223}
												byLiteralOrPseudoVariable: self) =
												(#_coverageTracker8303685_
													cover: (227 to: 246)
													declaredAt: (140 to: 159)
													by: aChildrenOfAnAccount) ]) ]]]) or:
				(#_coverageTracker8303685_
					coverAll:
						{278 to: 286}
					evaluating: [
						(#_coverageTracker8303685_
							cover: (260 to: 276)
							declaredAt: (37 to: 53)
							by: allAccountsOfSelf) includes:
							(#_coverageTracker8303685_
								cover: (288 to: 296)
								declaredAt: (25 to: 33)
								by: anAccount) ]) ].! !
!Behavior method!
allAccounts
	#_coverageTracker8303731_ markAsExecuted.
	^ #_coverageTracker8303731_
		coverAll:
			{25 to: 31. 41 to: 45}
		evaluating: [
			(#_coverageTracker8303731_
				cover: (16 to: 23)
				declaredAt: (16 to: 23)
				by: accounts)
				inject:
					(#_coverageTracker8303731_
						coverAll:
							{37 to: 39}
						evaluating: [
							(#_coverageTracker8303731_
								coverAll:
									{33 to: 35}
								by: Set) new ])
				into: [ :allAccountsSoFar :account |
					#_coverageTracker8303731_
						coverAll:
							{93 to: 96}
						evaluating: [
							(#_coverageTracker8303731_
								cover: (76 to: 91)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) add:
								(#_coverageTracker8303731_
									cover: (98 to: 104)
									declaredAt: (67 to: 73)
									by: account) ].
					#_coverageTracker8303731_
						coverAll:
							{124 to: 129}
						evaluating: [
							(#_coverageTracker8303731_
								cover: (107 to: 122)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) union:
								(#_coverageTracker8303731_
									coverAll:
										{139 to: 149}
									evaluating: [
										(#_coverageTracker8303731_
											cover: (131 to: 137)
											declaredAt: (67 to: 73)
											by: account) allAccounts ]) ]]].! !
!Behavior method!
allAccounts
	#_coverageTracker8303710_ markAsExecuted.
	^ #_coverageTracker8303710_
		coverAll:
			{20 to: 24}
		evaluating: [
			(#_coverageTracker8303710_
				coverAll:
					{16 to: 18}
				by: Set) with:
				(#_coverageTracker8303710_
					coverAll:
						{26 to: 29}
					byLiteralOrPseudoVariable: self) ].! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:47:48'!
PASSED!
!Behavior method!
hasInAHigherLevelPortfolioAnyAccountFrom: anAccount
	#_coverageTracker8303824_ markAsExecuted.
	^ #_coverageTracker8303824_
		coverAll:
			{190 to: 192. 291 to: 293}
		evaluating: [
			(#_coverageTracker8303824_
				coverAll:
					{68 to: 78}
				evaluating: [
					(#_coverageTracker8303824_
						cover: (59 to: 66)
						declaredAt: (59 to: 66)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker8303824_
							coverAll:
								{138 to: 140}
							evaluating: [
								(#_coverageTracker8303824_
									coverAll:
										{100 to: 122}
									evaluating: [
										(#_coverageTracker8303824_
											cover: (92 to: 98)
											declaredAt: (82 to: 88)
											by: account) containsAnyAccountFrom:
											(#_coverageTracker8303824_
												cover: (124 to: 132)
												declaredAt: (43 to: 51)
												by: anAccount) ]) or: [
									#_coverageTracker8303824_
										coverAll:
											{165 to: 173}
										evaluating: [
											(#_coverageTracker8303824_
												coverAll:
													{153 to: 163}
												evaluating: [
													(#_coverageTracker8303824_
														cover: (143 to: 151)
														declaredAt: (43 to: 51)
														by: anAccount) allAccounts ]) includes:
												(#_coverageTracker8303824_
													cover: (175 to: 181)
													declaredAt: (82 to: 88)
													by: account) ]]]]])
				or:
					(#_coverageTracker8303824_
						coverAll:
							{203 to: 213}
						evaluating: [
							(#_coverageTracker8303824_
								cover: (195 to: 201)
								declaredAt: (195 to: 201)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker8303824_
									coverAll:
										{234 to: 274}
									evaluating: [
										(#_coverageTracker8303824_
											cover: (226 to: 232)
											declaredAt: (217 to: 223)
											by: aParent) hasInAHigherLevelPortfolioAnyAccountFrom:
											(#_coverageTracker8303824_
												cover: (276 to: 284)
												declaredAt: (43 to: 51)
												by: anAccount) ]]])
				or:
					(#_coverageTracker8303824_
						coverAll:
							{301 to: 301}
						evaluating: [
							(#_coverageTracker8303824_
								coverAll:
									{296 to: 299}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker8303824_
									cover: (303 to: 311)
									declaredAt: (43 to: 51)
									by: anAccount) ])
			"Lo importante es la buena onda" ].! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:47:48'!
PASSED!

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:47:48'!
PASSED!

!methodRemoval: ReceptiveAccount #cannotAdd: stamp: 'VV 10/17/2022 15:49:12'!
cannotAdd: anAccount

	^self = anAccount!

!methodRemoval: Account #cannotAdd: stamp: 'VV 10/17/2022 15:49:16'!
cannotAdd: anAccount

self subclassResponsibility .!
!Behavior method!
initialize
	#_coverageTracker8405761_ markAsExecuted.
	#_coverageTracker8405761_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ #_coverageTracker8405761_
				coverAll:
					{43 to: 45}
				evaluating: [
					(#_coverageTracker8405761_
						coverAll:
							{25 to: 41}
						by: OrderedCollection) new ]).
	#_coverageTracker8405761_
		coverAll:
			{55 to: 64}
		evaluating: [ super initialize ].! !
!Behavior method!
initialize
	#_coverageTracker8405911_ markAsExecuted.
	#_coverageTracker8405911_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(parents _ #_coverageTracker8405911_
				coverAll:
					{42 to: 44}
				evaluating: [
					(#_coverageTracker8405911_
						coverAll:
							{24 to: 40}
						by: OrderedCollection) new ]).! !
!Behavior method!
initialize
	#_coverageTracker8405788_ markAsExecuted.
	#_coverageTracker8405788_
		cover: (14 to: 25)
		declaredAt: (14 to: 25)
		by:
			(transactions _ #_coverageTracker8405788_
				coverAll:
					{34 to: 36}
				evaluating: [
					(#_coverageTracker8405788_
						coverAll:
							{30 to: 32}
						by: Set) new ]).
	#_coverageTracker8405788_
		coverAll:
			{46 to: 55}
		evaluating: [ super initialize ].! !
!Behavior method!
balance
	#_coverageTracker8405944_ markAsExecuted.
	^ #_coverageTracker8405944_
		coverAll:
			{21 to: 24. 61 to: 68}
		evaluating: [
			(#_coverageTracker8405944_
				cover: (12 to: 19)
				declaredAt: (12 to: 19)
				by: accounts)
				sum: [ :bankEntity |
					#_coverageTracker8405944_
						coverAll:
							{52 to: 58}
						evaluating: [
							(#_coverageTracker8405944_
								cover: (41 to: 50)
								declaredAt: (28 to: 37)
								by: bankEntity) balance ]]
				ifEmpty: [
					#_coverageTracker8405944_
						coverAll:
							{71 to: 71}
						byLiteralOrPseudoVariable: 0 ]].! !

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:49:30'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker8405850_ markAsExecuted.
	#_coverageTracker8405850_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ #_coverageTracker8405850_
				coverAll:
					{71 to: 74}
				evaluating: [
					(#_coverageTracker8405850_
						coverAll:
							{66 to: 69}
						byLiteralOrPseudoVariable: self) for:
						(#_coverageTracker8405850_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]).
	#_coverageTracker8405850_
		coverAll:
			{93 to: 101}
		evaluating: [
			(#_coverageTracker8405850_
				cover: (85 to: 91)
				declaredAt: (22 to: 28)
				by: account) register:
				(#_coverageTracker8405850_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ].
	^ #_coverageTracker8405850_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
for: aValue
	#_coverageTracker8405869_ markAsExecuted.
	^ #_coverageTracker8405869_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker8405869_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker8405869_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker8405869_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker8405846_ markAsExecuted.
	#_coverageTracker8405846_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker8405846_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
register: aTransaction
	#_coverageTracker8405927_ markAsExecuted.
	#_coverageTracker8405927_
		coverAll:
			{39 to: 42}
		evaluating: [
			(#_coverageTracker8405927_
				cover: (26 to: 37)
				declaredAt: (26 to: 37)
				by: transactions) add:
				(#_coverageTracker8405927_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ].! !
!Behavior method!
add: anAccount
	#_coverageTracker8405835_ markAsExecuted.
	#_coverageTracker8405835_
		coverAll:
			{46 to: 52}
		evaluating: [
			(#_coverageTracker8405835_
				coverAll:
					{24 to: 33}
				evaluating: [
					(#_coverageTracker8405835_
						coverAll:
							{19 to: 22}
						byLiteralOrPseudoVariable: self) cannotAdd:
						(#_coverageTracker8405835_
							cover: (35 to: 43)
							declaredAt: (6 to: 14)
							by: anAccount) ]) ifTrue: [
				#_coverageTracker8405835_
					coverAll:
						{60 to: 65}
					evaluating: [
						(#_coverageTracker8405835_
							coverAll:
								{55 to: 58}
							byLiteralOrPseudoVariable: self) error:
							(#_coverageTracker8405835_
								coverAll:
									{78 to: 106}
								evaluating: [
									(#_coverageTracker8405835_
										coverAll:
											{72 to: 76}
										evaluating: [
											(#_coverageTracker8405835_
												coverAll:
													{67 to: 70}
												byLiteralOrPseudoVariable: self) class ]) duplicatedAccountErrorMessage ]) ]]].
	#_coverageTracker8405835_
		coverAll:
			{122 to: 125}
		evaluating: [
			(#_coverageTracker8405835_
				cover: (113 to: 120)
				declaredAt: (113 to: 120)
				by: accounts) add:
				(#_coverageTracker8405835_
					cover: (127 to: 135)
					declaredAt: (6 to: 14)
					by: anAccount) ].
	#_coverageTracker8405835_
		coverAll:
			{149 to: 158}
		evaluating: [
			(#_coverageTracker8405835_
				cover: (139 to: 147)
				declaredAt: (6 to: 14)
				by: anAccount) addParent:
				(#_coverageTracker8405835_
					coverAll:
						{160 to: 163}
					byLiteralOrPseudoVariable: self) ].! !
!Behavior method!
cannotAdd: anAccount
	#_coverageTracker8405792_ markAsExecuted.
	^ #_coverageTracker8405792_
		coverAll:
			{105 to: 107. 206 to: 208}
		evaluating: [
			(#_coverageTracker8405792_
				coverAll:
					{36 to: 46}
				evaluating: [
					(#_coverageTracker8405792_
						cover: (27 to: 34)
						declaredAt: (27 to: 34)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker8405792_
							coverAll:
								{67 to: 89}
							evaluating: [
								(#_coverageTracker8405792_
									cover: (59 to: 65)
									declaredAt: (50 to: 56)
									by: account) containsAnyAccountFrom:
									(#_coverageTracker8405792_
										cover: (91 to: 99)
										declaredAt: (12 to: 20)
										by: anAccount) ]]])
				or:
					(#_coverageTracker8405792_
						coverAll:
							{121 to: 131}
						evaluating: [
							(#_coverageTracker8405792_
								cover: (113 to: 119)
								declaredAt: (113 to: 119)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker8405792_
									coverAll:
										{152 to: 192}
									evaluating: [
										(#_coverageTracker8405792_
											cover: (144 to: 150)
											declaredAt: (135 to: 141)
											by: aParent) hasInAHigherLevelPortfolioAnyAccountFrom:
											(#_coverageTracker8405792_
												cover: (194 to: 202)
												declaredAt: (12 to: 20)
												by: anAccount) ]]])
				or:
					(#_coverageTracker8405792_
						coverAll:
							{219 to: 219}
						evaluating: [
							(#_coverageTracker8405792_
								coverAll:
									{214 to: 217}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker8405792_
									cover: (221 to: 229)
									declaredAt: (12 to: 20)
									by: anAccount) ]) ].! !
!Behavior method!
addParent: aPortfolioAccount
	#_coverageTracker8405773_ markAsExecuted.
	#_coverageTracker8405773_
		coverAll:
			{41 to: 44}
		evaluating: [
			(#_coverageTracker8405773_
				cover: (33 to: 39)
				declaredAt: (33 to: 39)
				by: parents) add:
				(#_coverageTracker8405773_
					cover: (46 to: 62)
					declaredAt: (12 to: 28)
					by: aPortfolioAccount) ].! !
!Behavior method!
balance
	#_coverageTracker8405879_ markAsExecuted.
	^ #_coverageTracker8405879_
		coverAll:
			{25 to: 31. 35 to: 39}
		evaluating: [
			(#_coverageTracker8405879_
				cover: (12 to: 23)
				declaredAt: (12 to: 23)
				by: transactions)
				inject:
					(#_coverageTracker8405879_
						coverAll:
							{33 to: 33}
						byLiteralOrPseudoVariable: 0)
				into: [ :balance :aTransaction |
					#_coverageTracker8405879_
						coverAll:
							{78 to: 92}
						evaluating: [
							(#_coverageTracker8405879_
								cover: (65 to: 76)
								declaredAt: (51 to: 62)
								by: aTransaction) applyToBalance:
								(#_coverageTracker8405879_
									cover: (94 to: 100)
									declaredAt: (42 to: 48)
									by: balance) ]]].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker8405754_ markAsExecuted.
	^ #_coverageTracker8405754_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker8405754_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) +
				(#_coverageTracker8405754_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:49:30'!
PASSED!
!Behavior method!
for: aValue
	#_coverageTracker8405800_ markAsExecuted.
	^ #_coverageTracker8405800_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker8405800_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker8405800_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker8405800_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker8405942_ markAsExecuted.
	#_coverageTracker8405942_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker8405942_
				cover: (35 to: 40)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
containsAnyAccountFrom: anAccount
	#_coverageTracker8405829_ markAsExecuted.
	^ #_coverageTracker8405829_
		coverAll:
			{43 to: 43}
		evaluating: [
			(#_coverageTracker8405829_
				coverAll:
					{38 to: 41}
				byLiteralOrPseudoVariable: self) =
				(#_coverageTracker8405829_
					cover: (45 to: 53)
					declaredAt: (25 to: 33)
					by: anAccount) ].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker8405900_ markAsExecuted.
	^ #_coverageTracker8405900_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker8405900_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) -
				(#_coverageTracker8405900_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:49:30'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:49:30'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker8405813_ markAsExecuted.
	^ #_coverageTracker8405813_
		coverAll:
			{29 to: 35. 45 to: 49}
		evaluating: [
			(#_coverageTracker8405813_
				cover: (20 to: 27)
				declaredAt: (20 to: 27)
				by: accounts)
				inject:
					(#_coverageTracker8405813_
						coverAll:
							{41 to: 43}
						evaluating: [
							(#_coverageTracker8405813_
								coverAll:
									{37 to: 39}
								by: Set) new ])
				into: [ :transactionsSoFar :bankEntity |
					#_coverageTracker8405813_
						coverAll:
							{101 to: 106}
						evaluating: [
							(#_coverageTracker8405813_
								cover: (83 to: 99)
								declaredAt: (52 to: 68)
								by: transactionsSoFar) union:
								(#_coverageTracker8405813_
									coverAll:
										{119 to: 130}
									evaluating: [
										(#_coverageTracker8405813_
											cover: (108 to: 117)
											declaredAt: (71 to: 80)
											by: bankEntity) transactions ]) ]]].! !

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:49:30'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker8405873_ markAsExecuted.
	^ #_coverageTracker8405873_
		coverAll:
			{32 to: 35}
		evaluating: [
			(#_coverageTracker8405873_
				cover: (19 to: 30)
				declaredAt: (19 to: 30)
				by: transactions) copy ].! !

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:49:30'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:49:30'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:49:30'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker8405831_ markAsExecuted.
	^ #_coverageTracker8405831_
		coverAll:
			{42 to: 52}
		evaluating: [
			(#_coverageTracker8405831_
				cover: (33 to: 40)
				declaredAt: (33 to: 40)
				by: accounts) anySatisfy: [ :bankEntity |
				#_coverageTracker8405831_
					coverAll:
						{79 to: 92}
					evaluating: [
						(#_coverageTracker8405831_
							cover: (68 to: 77)
							declaredAt: (56 to: 65)
							by: bankEntity) hasRegistered:
							(#_coverageTracker8405831_
								cover: (94 to: 105)
								declaredAt: (16 to: 27)
								by: aTransaction) ]]].! !

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:49:30'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker8405856_ markAsExecuted.
	^ #_coverageTracker8405856_
		coverAll:
			{46 to: 54}
		evaluating: [
			(#_coverageTracker8405856_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: transactions) includes:
				(#_coverageTracker8405856_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ].! !

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:49:30'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:49:30'!
PASSED!
!Behavior method!
duplicatedAccountErrorMessage
	#_coverageTracker8405802_ markAsExecuted.
	^ #_coverageTracker8405802_
		coverAll:
			{34 to: 77}
		byLiteralOrPseudoVariable: 'Can not add duplicated account to porfolio'.! !

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:49:30'!
PASSED!
!Behavior method!
containsAnyAccountFrom: anAccount
	| allAccountsOfSelf |
	#_coverageTracker8405819_ markAsExecuted.
	#_coverageTracker8405819_
		cover: (57 to: 73)
		declaredAt: (37 to: 53)
		by:
			(allAccountsOfSelf _ #_coverageTracker8405819_
				coverAll:
					{82 to: 92}
				evaluating: [
					(#_coverageTracker8405819_
						coverAll:
							{77 to: 80}
						byLiteralOrPseudoVariable: self) allAccounts ]).
	^ #_coverageTracker8405819_
		coverAll:
			{255 to: 257}
		evaluating: [
			(#_coverageTracker8405819_
				coverAll:
					{126 to: 136}
				evaluating: [
					(#_coverageTracker8405819_
						coverAll:
							{114 to: 124}
						evaluating: [
							(#_coverageTracker8405819_
								cover: (104 to: 112)
								declaredAt: (25 to: 33)
								by: anAccount) allAccounts ]) anySatisfy: [ :aChildrenOfAnAccount |
						#_coverageTracker8405819_
							coverAll:
								{216 to: 218}
							evaluating: [
								(#_coverageTracker8405819_
									coverAll:
										{184 to: 192}
									evaluating: [
										(#_coverageTracker8405819_
											cover: (166 to: 182)
											declaredAt: (37 to: 53)
											by: allAccountsOfSelf) includes:
											(#_coverageTracker8405819_
												cover: (194 to: 213)
												declaredAt: (140 to: 159)
												by: aChildrenOfAnAccount) ]) or:
									(#_coverageTracker8405819_
										coverAll:
											{225 to: 225}
										evaluating: [
											(#_coverageTracker8405819_
												coverAll:
													{220 to: 223}
												byLiteralOrPseudoVariable: self) =
												(#_coverageTracker8405819_
													cover: (227 to: 246)
													declaredAt: (140 to: 159)
													by: aChildrenOfAnAccount) ]) ]]]) or:
				(#_coverageTracker8405819_
					coverAll:
						{278 to: 286}
					evaluating: [
						(#_coverageTracker8405819_
							cover: (260 to: 276)
							declaredAt: (37 to: 53)
							by: allAccountsOfSelf) includes:
							(#_coverageTracker8405819_
								cover: (288 to: 296)
								declaredAt: (25 to: 33)
								by: anAccount) ]) ].! !
!Behavior method!
allAccounts
	#_coverageTracker8405902_ markAsExecuted.
	^ #_coverageTracker8405902_
		coverAll:
			{25 to: 31. 41 to: 45}
		evaluating: [
			(#_coverageTracker8405902_
				cover: (16 to: 23)
				declaredAt: (16 to: 23)
				by: accounts)
				inject:
					(#_coverageTracker8405902_
						coverAll:
							{37 to: 39}
						evaluating: [
							(#_coverageTracker8405902_
								coverAll:
									{33 to: 35}
								by: Set) new ])
				into: [ :allAccountsSoFar :account |
					#_coverageTracker8405902_
						coverAll:
							{93 to: 96}
						evaluating: [
							(#_coverageTracker8405902_
								cover: (76 to: 91)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) add:
								(#_coverageTracker8405902_
									cover: (98 to: 104)
									declaredAt: (67 to: 73)
									by: account) ].
					#_coverageTracker8405902_
						coverAll:
							{124 to: 129}
						evaluating: [
							(#_coverageTracker8405902_
								cover: (107 to: 122)
								declaredAt: (49 to: 64)
								by: allAccountsSoFar) union:
								(#_coverageTracker8405902_
									coverAll:
										{139 to: 149}
									evaluating: [
										(#_coverageTracker8405902_
											cover: (131 to: 137)
											declaredAt: (67 to: 73)
											by: account) allAccounts ]) ]]].! !
!Behavior method!
allAccounts
	#_coverageTracker8405848_ markAsExecuted.
	^ #_coverageTracker8405848_
		coverAll:
			{20 to: 24}
		evaluating: [
			(#_coverageTracker8405848_
				coverAll:
					{16 to: 18}
				by: Set) with:
				(#_coverageTracker8405848_
					coverAll:
						{26 to: 29}
					byLiteralOrPseudoVariable: self) ].! !

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:49:30'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:49:30'!
PASSED!
!Behavior method!
hasInAHigherLevelPortfolioAnyAccountFrom: anAccount
	#_coverageTracker8405913_ markAsExecuted.
	^ #_coverageTracker8405913_
		coverAll:
			{190 to: 192. 291 to: 293}
		evaluating: [
			(#_coverageTracker8405913_
				coverAll:
					{68 to: 78}
				evaluating: [
					(#_coverageTracker8405913_
						cover: (59 to: 66)
						declaredAt: (59 to: 66)
						by: accounts) anySatisfy: [ :account |
						#_coverageTracker8405913_
							coverAll:
								{138 to: 140}
							evaluating: [
								(#_coverageTracker8405913_
									coverAll:
										{100 to: 122}
									evaluating: [
										(#_coverageTracker8405913_
											cover: (92 to: 98)
											declaredAt: (82 to: 88)
											by: account) containsAnyAccountFrom:
											(#_coverageTracker8405913_
												cover: (124 to: 132)
												declaredAt: (43 to: 51)
												by: anAccount) ]) or: [
									#_coverageTracker8405913_
										coverAll:
											{165 to: 173}
										evaluating: [
											(#_coverageTracker8405913_
												coverAll:
													{153 to: 163}
												evaluating: [
													(#_coverageTracker8405913_
														cover: (143 to: 151)
														declaredAt: (43 to: 51)
														by: anAccount) allAccounts ]) includes:
												(#_coverageTracker8405913_
													cover: (175 to: 181)
													declaredAt: (82 to: 88)
													by: account) ]]]]])
				or:
					(#_coverageTracker8405913_
						coverAll:
							{203 to: 213}
						evaluating: [
							(#_coverageTracker8405913_
								cover: (195 to: 201)
								declaredAt: (195 to: 201)
								by: parents) anySatisfy: [ :aParent |
								#_coverageTracker8405913_
									coverAll:
										{234 to: 274}
									evaluating: [
										(#_coverageTracker8405913_
											cover: (226 to: 232)
											declaredAt: (217 to: 223)
											by: aParent) hasInAHigherLevelPortfolioAnyAccountFrom:
											(#_coverageTracker8405913_
												cover: (276 to: 284)
												declaredAt: (43 to: 51)
												by: anAccount) ]]])
				or:
					(#_coverageTracker8405913_
						coverAll:
							{301 to: 301}
						evaluating: [
							(#_coverageTracker8405913_
								coverAll:
									{296 to: 299}
								byLiteralOrPseudoVariable: self) =
								(#_coverageTracker8405913_
									cover: (303 to: 311)
									declaredAt: (43 to: 51)
									by: anAccount) ])
			"Lo importante es la buena onda" ].! !

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:49:30'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:49:30'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:49:30'!
PASSED!

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:49:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'VV 10/17/2022 15:51:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'VV 10/17/2022 15:51:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'VV 10/17/2022 15:51:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'VV 10/17/2022 15:51:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'VV 10/17/2022 15:51:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoesNotKnowNotRegisteredTransactions stamp: 'VV 10/17/2022 15:51:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'VV 10/17/2022 15:51:00'!
PASSED!
!Behavior method!
initialize
	#_coverageTracker8498865_ markAsExecuted.
	#_coverageTracker8498865_
		cover: (14 to: 25)
		declaredAt: (14 to: 25)
		by:
			(transactions _ #_coverageTracker8498865_
				coverAll:
					{34 to: 36}
				evaluating: [
					(#_coverageTracker8498865_
						coverAll:
							{30 to: 32}
						by: Set) new ]).
	#_coverageTracker8498865_
		coverAll:
			{46 to: 55}
		evaluating: [ super initialize ].! !
!Behavior method!
initialize
	#_coverageTracker8498848_ markAsExecuted.
	#_coverageTracker8498848_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(parents _ #_coverageTracker8498848_
				coverAll:
					{42 to: 44}
				evaluating: [
					(#_coverageTracker8498848_
						coverAll:
							{24 to: 40}
						by: OrderedCollection) new ]).! !
!Behavior method!
balance
	#_coverageTracker8498940_ markAsExecuted.
	^ #_coverageTracker8498940_
		coverAll:
			{25 to: 31. 35 to: 39}
		evaluating: [
			(#_coverageTracker8498940_
				cover: (12 to: 23)
				declaredAt: (12 to: 23)
				by: transactions)
				inject:
					(#_coverageTracker8498940_
						coverAll:
							{33 to: 33}
						byLiteralOrPseudoVariable: 0)
				into: [ :balance :aTransaction |
					#_coverageTracker8498940_
						coverAll:
							{78 to: 92}
						evaluating: [
							(#_coverageTracker8498940_
								cover: (65 to: 76)
								declaredAt: (51 to: 62)
								by: aTransaction) applyToBalance:
								(#_coverageTracker8498940_
									cover: (94 to: 100)
									declaredAt: (42 to: 48)
									by: balance) ]]].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'VV 10/17/2022 15:51:03'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker8498744_ markAsExecuted.
	#_coverageTracker8498744_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ #_coverageTracker8498744_
				coverAll:
					{71 to: 74}
				evaluating: [
					(#_coverageTracker8498744_
						coverAll:
							{66 to: 69}
						byLiteralOrPseudoVariable: self) for:
						(#_coverageTracker8498744_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]).
	#_coverageTracker8498744_
		coverAll:
			{93 to: 101}
		evaluating: [
			(#_coverageTracker8498744_
				cover: (85 to: 91)
				declaredAt: (22 to: 28)
				by: account) register:
				(#_coverageTracker8498744_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ].
	^ #_coverageTracker8498744_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
for: aValue
	#_coverageTracker8498936_ markAsExecuted.
	^ #_coverageTracker8498936_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker8498936_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker8498936_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker8498936_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker8498921_ markAsExecuted.
	#_coverageTracker8498921_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker8498921_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
register: aTransaction
	#_coverageTracker8498850_ markAsExecuted.
	#_coverageTracker8498850_
		coverAll:
			{39 to: 42}
		evaluating: [
			(#_coverageTracker8498850_
				cover: (26 to: 37)
				declaredAt: (26 to: 37)
				by: transactions) add:
				(#_coverageTracker8498850_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ].! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker8498558_ markAsExecuted.
	^ #_coverageTracker8498558_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker8498558_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) +
				(#_coverageTracker8498558_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'VV 10/17/2022 15:51:03'!
PASSED!
!Behavior method!
for: aValue
	#_coverageTracker8498900_ markAsExecuted.
	^ #_coverageTracker8498900_
		coverAll:
			{26 to: 39}
		evaluating: [
			(#_coverageTracker8498900_
				coverAll:
					{22 to: 24}
				evaluating: [
					(#_coverageTracker8498900_
						coverAll:
							{17 to: 20}
						byLiteralOrPseudoVariable: self) new ]) initializeFor:
				(#_coverageTracker8498900_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ].! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker8498863_ markAsExecuted.
	#_coverageTracker8498863_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker8498863_
				cover: (35 to: 40)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
applyToBalance: aBalance
	#_coverageTracker8498944_ markAsExecuted.
	^ #_coverageTracker8498944_
		coverAll:
			{38 to: 38}
		evaluating: [
			(#_coverageTracker8498944_
				cover: (29 to: 36)
				declaredAt: (17 to: 24)
				by: aBalance) -
				(#_coverageTracker8498944_
					cover: (40 to: 44)
					declaredAt: (40 to: 44)
					by: value) ].! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'VV 10/17/2022 15:51:03'!
PASSED!
!Behavior method!
value
	#_coverageTracker8498727_ markAsExecuted.
	^ #_coverageTracker8498727_
		cover: (11 to: 15)
		declaredAt: (11 to: 15)
		by: value.! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'VV 10/17/2022 15:51:03'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker8498723_ markAsExecuted.
	^ #_coverageTracker8498723_
		coverAll:
			{46 to: 54}
		evaluating: [
			(#_coverageTracker8498723_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: transactions) includes:
				(#_coverageTracker8498723_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ].! !

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'VV 10/17/2022 15:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoesNotKnowNotRegisteredTransactions stamp: 'VV 10/17/2022 15:51:03'!
PASSED!
!Behavior method!
transactions
	#_coverageTracker8498742_ markAsExecuted.
	^ #_coverageTracker8498742_
		coverAll:
			{32 to: 35}
		evaluating: [
			(#_coverageTracker8498742_
				cover: (19 to: 30)
				declaredAt: (19 to: 30)
				by: transactions) copy ].! !

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'VV 10/17/2022 15:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHasZeroAsBalanceWhenCreated stamp: 'VV 10/17/2022 15:51:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'VV 10/17/2022 15:51:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'VV 10/17/2022 15:51:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'VV 10/17/2022 15:51:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'VV 10/17/2022 15:51:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoesNotKnowNotRegisteredTransactions stamp: 'VV 10/17/2022 15:51:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'VV 10/17/2022 15:51:28'!
PASSED!

!testRun: #PortfolioAccountTest #test01EmptyPortfolioHasBalance0 stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test02PortfolioWithOneAccountHasSameBalanceAsAccount stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test03PortfolioWithAccountsAndAnotherPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test04PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectBalance stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test05EmptyPortfolioHasNoTransactions stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test06PortfolioWithOneAccountHasSameTransactionsAsAccount stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test07PortfolioWithAccountsAndAnotherPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test08PortfolioWithAccountsAndAnotherPortfolioContainingAPortfolioHasCorrectTransactions stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test09EmptyPortfolioHasNotRegisteredATransaction stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test10PortfolioWithOneAccountHasRegisteredItsTransaction stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test11PortfolioWithAccountsAndAnotherPortfolioHasRegisteredTheAccountsTransaction stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test12CannotAddReceptiveAccountToPortfolioTwice stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test13CannotAddReceptiveAccountToPortfolioThatAlreadyHasAPortfolioWithThatAccount stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test14CannotAddPortfolioToSamePortfolio stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test15CannotAddReceptiveAccountThatAlreadyIsInAParentsPortfolio stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test16CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccount stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test17CannotAddPortfolioThatHasReceptiveAccountToAPortfolioThatAlreadyHasTheReceptiveAccountInAParentPortfolio stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

!testRun: #PortfolioAccountTest #test18StressTestWithError stamp: 'VV 10/17/2022 15:51:29'!
PASSED!

----SNAPSHOT----(17 October 2022 15:51:32) CuisUniversity-5481.image priorSource: 8215453!